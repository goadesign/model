// Code generated by goa v3.14.0, DO NOT EDIT.
//
// DSLEditor endpoints
//
// Command:
// $ goa gen goa.design/model/svc/design -o svc/

package dsleditor

import (
	"context"

	goa "goa.design/goa/v3/pkg"
	types "goa.design/model/svc/gen/types"
)

// Endpoints wraps the "DSLEditor" service endpoints.
type Endpoints struct {
	UpdateDSL               goa.Endpoint
	UpsertSystem            goa.Endpoint
	UpsertPerson            goa.Endpoint
	UpsertContainer         goa.Endpoint
	UpsertComponent         goa.Endpoint
	UpsertRelationship      goa.Endpoint
	UpsertLandscapeView     goa.Endpoint
	UpsertSystemContextView goa.Endpoint
	UpsertContainerView     goa.Endpoint
	UpsertComponentView     goa.Endpoint
	UpserElementStyle       goa.Endpoint
	UpsertRelationshipStyle goa.Endpoint
	DeleteSystem            goa.Endpoint
	DeletePerson            goa.Endpoint
	DeleteContainer         goa.Endpoint
	DeleteComponent         goa.Endpoint
	DeleteRelationship      goa.Endpoint
	DeleteLandscapeView     goa.Endpoint
	DeleteSystemContextView goa.Endpoint
	DeleteContainerView     goa.Endpoint
	DeleteComponentView     goa.Endpoint
	DeleteElementStyle      goa.Endpoint
	DeleteRelationshipStyle goa.Endpoint
}

// NewEndpoints wraps the methods of the "DSLEditor" service with endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		UpdateDSL:               NewUpdateDSLEndpoint(s),
		UpsertSystem:            NewUpsertSystemEndpoint(s),
		UpsertPerson:            NewUpsertPersonEndpoint(s),
		UpsertContainer:         NewUpsertContainerEndpoint(s),
		UpsertComponent:         NewUpsertComponentEndpoint(s),
		UpsertRelationship:      NewUpsertRelationshipEndpoint(s),
		UpsertLandscapeView:     NewUpsertLandscapeViewEndpoint(s),
		UpsertSystemContextView: NewUpsertSystemContextViewEndpoint(s),
		UpsertContainerView:     NewUpsertContainerViewEndpoint(s),
		UpsertComponentView:     NewUpsertComponentViewEndpoint(s),
		UpserElementStyle:       NewUpserElementStyleEndpoint(s),
		UpsertRelationshipStyle: NewUpsertRelationshipStyleEndpoint(s),
		DeleteSystem:            NewDeleteSystemEndpoint(s),
		DeletePerson:            NewDeletePersonEndpoint(s),
		DeleteContainer:         NewDeleteContainerEndpoint(s),
		DeleteComponent:         NewDeleteComponentEndpoint(s),
		DeleteRelationship:      NewDeleteRelationshipEndpoint(s),
		DeleteLandscapeView:     NewDeleteLandscapeViewEndpoint(s),
		DeleteSystemContextView: NewDeleteSystemContextViewEndpoint(s),
		DeleteContainerView:     NewDeleteContainerViewEndpoint(s),
		DeleteComponentView:     NewDeleteComponentViewEndpoint(s),
		DeleteElementStyle:      NewDeleteElementStyleEndpoint(s),
		DeleteRelationshipStyle: NewDeleteRelationshipStyleEndpoint(s),
	}
}

// Use applies the given middleware to all the "DSLEditor" service endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.UpdateDSL = m(e.UpdateDSL)
	e.UpsertSystem = m(e.UpsertSystem)
	e.UpsertPerson = m(e.UpsertPerson)
	e.UpsertContainer = m(e.UpsertContainer)
	e.UpsertComponent = m(e.UpsertComponent)
	e.UpsertRelationship = m(e.UpsertRelationship)
	e.UpsertLandscapeView = m(e.UpsertLandscapeView)
	e.UpsertSystemContextView = m(e.UpsertSystemContextView)
	e.UpsertContainerView = m(e.UpsertContainerView)
	e.UpsertComponentView = m(e.UpsertComponentView)
	e.UpserElementStyle = m(e.UpserElementStyle)
	e.UpsertRelationshipStyle = m(e.UpsertRelationshipStyle)
	e.DeleteSystem = m(e.DeleteSystem)
	e.DeletePerson = m(e.DeletePerson)
	e.DeleteContainer = m(e.DeleteContainer)
	e.DeleteComponent = m(e.DeleteComponent)
	e.DeleteRelationship = m(e.DeleteRelationship)
	e.DeleteLandscapeView = m(e.DeleteLandscapeView)
	e.DeleteSystemContextView = m(e.DeleteSystemContextView)
	e.DeleteContainerView = m(e.DeleteContainerView)
	e.DeleteComponentView = m(e.DeleteComponentView)
	e.DeleteElementStyle = m(e.DeleteElementStyle)
	e.DeleteRelationshipStyle = m(e.DeleteRelationshipStyle)
}

// NewUpdateDSLEndpoint returns an endpoint function that calls the method
// "UpdateDSL" of service "DSLEditor".
func NewUpdateDSLEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*types.PackageFile)
		return nil, s.UpdateDSL(ctx, p)
	}
}

// NewUpsertSystemEndpoint returns an endpoint function that calls the method
// "UpsertSystem" of service "DSLEditor".
func NewUpsertSystemEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*System)
		return s.UpsertSystem(ctx, p)
	}
}

// NewUpsertPersonEndpoint returns an endpoint function that calls the method
// "UpsertPerson" of service "DSLEditor".
func NewUpsertPersonEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*Person)
		return s.UpsertPerson(ctx, p)
	}
}

// NewUpsertContainerEndpoint returns an endpoint function that calls the
// method "UpsertContainer" of service "DSLEditor".
func NewUpsertContainerEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*Container)
		return s.UpsertContainer(ctx, p)
	}
}

// NewUpsertComponentEndpoint returns an endpoint function that calls the
// method "UpsertComponent" of service "DSLEditor".
func NewUpsertComponentEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*Component)
		return s.UpsertComponent(ctx, p)
	}
}

// NewUpsertRelationshipEndpoint returns an endpoint function that calls the
// method "UpsertRelationship" of service "DSLEditor".
func NewUpsertRelationshipEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*Relationship)
		return s.UpsertRelationship(ctx, p)
	}
}

// NewUpsertLandscapeViewEndpoint returns an endpoint function that calls the
// method "UpsertLandscapeView" of service "DSLEditor".
func NewUpsertLandscapeViewEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*LandscapeView)
		return s.UpsertLandscapeView(ctx, p)
	}
}

// NewUpsertSystemContextViewEndpoint returns an endpoint function that calls
// the method "UpsertSystemContextView" of service "DSLEditor".
func NewUpsertSystemContextViewEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*SystemContextView)
		return s.UpsertSystemContextView(ctx, p)
	}
}

// NewUpsertContainerViewEndpoint returns an endpoint function that calls the
// method "UpsertContainerView" of service "DSLEditor".
func NewUpsertContainerViewEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*ContainerView)
		return s.UpsertContainerView(ctx, p)
	}
}

// NewUpsertComponentViewEndpoint returns an endpoint function that calls the
// method "UpsertComponentView" of service "DSLEditor".
func NewUpsertComponentViewEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*ComponentView)
		return s.UpsertComponentView(ctx, p)
	}
}

// NewUpserElementStyleEndpoint returns an endpoint function that calls the
// method "UpserElementStyle" of service "DSLEditor".
func NewUpserElementStyleEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*ElementStyle)
		return s.UpserElementStyle(ctx, p)
	}
}

// NewUpsertRelationshipStyleEndpoint returns an endpoint function that calls
// the method "UpsertRelationshipStyle" of service "DSLEditor".
func NewUpsertRelationshipStyleEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*RelationshipStyle)
		return s.UpsertRelationshipStyle(ctx, p)
	}
}

// NewDeleteSystemEndpoint returns an endpoint function that calls the method
// "DeleteSystem" of service "DSLEditor".
func NewDeleteSystemEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*DeleteSystemPayload)
		return s.DeleteSystem(ctx, p)
	}
}

// NewDeletePersonEndpoint returns an endpoint function that calls the method
// "DeletePerson" of service "DSLEditor".
func NewDeletePersonEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*DeletePersonPayload)
		return s.DeletePerson(ctx, p)
	}
}

// NewDeleteContainerEndpoint returns an endpoint function that calls the
// method "DeleteContainer" of service "DSLEditor".
func NewDeleteContainerEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*DeleteContainerPayload)
		return s.DeleteContainer(ctx, p)
	}
}

// NewDeleteComponentEndpoint returns an endpoint function that calls the
// method "DeleteComponent" of service "DSLEditor".
func NewDeleteComponentEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*DeleteComponentPayload)
		return s.DeleteComponent(ctx, p)
	}
}

// NewDeleteRelationshipEndpoint returns an endpoint function that calls the
// method "DeleteRelationship" of service "DSLEditor".
func NewDeleteRelationshipEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*DeleteRelationshipPayload)
		return s.DeleteRelationship(ctx, p)
	}
}

// NewDeleteLandscapeViewEndpoint returns an endpoint function that calls the
// method "DeleteLandscapeView" of service "DSLEditor".
func NewDeleteLandscapeViewEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*DeleteLandscapeViewPayload)
		return s.DeleteLandscapeView(ctx, p)
	}
}

// NewDeleteSystemContextViewEndpoint returns an endpoint function that calls
// the method "DeleteSystemContextView" of service "DSLEditor".
func NewDeleteSystemContextViewEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*DeleteSystemContextViewPayload)
		return s.DeleteSystemContextView(ctx, p)
	}
}

// NewDeleteContainerViewEndpoint returns an endpoint function that calls the
// method "DeleteContainerView" of service "DSLEditor".
func NewDeleteContainerViewEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*DeleteContainerViewPayload)
		return s.DeleteContainerView(ctx, p)
	}
}

// NewDeleteComponentViewEndpoint returns an endpoint function that calls the
// method "DeleteComponentView" of service "DSLEditor".
func NewDeleteComponentViewEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*DeleteComponentViewPayload)
		return s.DeleteComponentView(ctx, p)
	}
}

// NewDeleteElementStyleEndpoint returns an endpoint function that calls the
// method "DeleteElementStyle" of service "DSLEditor".
func NewDeleteElementStyleEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*DeleteElementStylePayload)
		return s.DeleteElementStyle(ctx, p)
	}
}

// NewDeleteRelationshipStyleEndpoint returns an endpoint function that calls
// the method "DeleteRelationshipStyle" of service "DSLEditor".
func NewDeleteRelationshipStyleEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*DeleteRelationshipStylePayload)
		return s.DeleteRelationshipStyle(ctx, p)
	}
}
