// Code generated by goa v3.14.0, DO NOT EDIT.
//
// Assets HTTP server
//
// Command:
// $ goa gen goa.design/model/svc/design -o svc/

package server

import (
	"context"
	"net/http"

	goahttp "goa.design/goa/v3/http"
	assets "goa.design/model/svc/gen/assets"
)

// Server lists the Assets service endpoint HTTP handlers.
type Server struct {
	Mounts []*MountPoint
	Assets http.Handler
}

// MountPoint holds information about the mounted endpoints.
type MountPoint struct {
	// Method is the name of the service method served by the mounted HTTP handler.
	Method string
	// Verb is the HTTP method used to match requests to the mounted handler.
	Verb string
	// Pattern is the HTTP request path pattern used to match requests to the
	// mounted handler.
	Pattern string
}

// New instantiates HTTP handlers for all the Assets service endpoints using
// the provided encoder and decoder. The handlers are mounted on the given mux
// using the HTTP verb and path defined in the design. errhandler is called
// whenever a response fails to be encoded. formatter is used to format errors
// returned by the service methods prior to encoding. Both errhandler and
// formatter are optional and can be nil.
func New(
	e *assets.Endpoints,
	mux goahttp.Muxer,
	decoder func(*http.Request) goahttp.Decoder,
	encoder func(context.Context, http.ResponseWriter) goahttp.Encoder,
	errhandler func(context.Context, http.ResponseWriter, error),
	formatter func(ctx context.Context, err error) goahttp.Statuser,
	fileSystemAssets http.FileSystem,
) *Server {
	if fileSystemAssets == nil {
		fileSystemAssets = http.Dir(".")
	}
	return &Server{
		Mounts: []*MountPoint{
			{"assets", "GET", "/assets"},
		},
		Assets: http.FileServer(fileSystemAssets),
	}
}

// Service returns the name of the service served.
func (s *Server) Service() string { return "Assets" }

// Use wraps the server handlers with the given middleware.
func (s *Server) Use(m func(http.Handler) http.Handler) {
}

// MethodNames returns the methods served.
func (s *Server) MethodNames() []string { return assets.MethodNames[:] }

// Mount configures the mux to serve the Assets endpoints.
func Mount(mux goahttp.Muxer, h *Server) {
	MountAssets(mux, h.Assets)
}

// Mount configures the mux to serve the Assets endpoints.
func (s *Server) Mount(mux goahttp.Muxer) {
	Mount(mux, s)
}

// MountAssets configures the mux to serve GET request made to "/assets".
func MountAssets(mux goahttp.Muxer, h http.Handler) {
	mux.Handle("GET", "/assets", h.ServeHTTP)
}
