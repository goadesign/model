// Code generated by goa v3.14.0, DO NOT EDIT.
//
// Repo client
//
// Command:
// $ goa gen goa.design/model/svc/design -o svc/

package repo

import (
	"context"

	goa "goa.design/goa/v3/pkg"
	types "goa.design/model/svc/gen/types"
)

// Client is the "Repo" service client.
type Client struct {
	CreatePackageEndpoint goa.Endpoint
	DeletePackageEndpoint goa.Endpoint
	ListPackagesEndpoint  goa.Endpoint
	ReadPackageEndpoint   goa.Endpoint
	GetModelJSONEndpoint  goa.Endpoint
	SubscribeEndpoint     goa.Endpoint
}

// NewClient initializes a "Repo" service client given the endpoints.
func NewClient(createPackage, deletePackage, listPackages, readPackage, getModelJSON, subscribe goa.Endpoint) *Client {
	return &Client{
		CreatePackageEndpoint: createPackage,
		DeletePackageEndpoint: deletePackage,
		ListPackagesEndpoint:  listPackages,
		ReadPackageEndpoint:   readPackage,
		GetModelJSONEndpoint:  getModelJSON,
		SubscribeEndpoint:     subscribe,
	}
}

// CreatePackage calls the "CreatePackage" endpoint of the "Repo" service.
// CreatePackage may return the following errors:
//   - "already_exists" (type *goa.ServiceError): Package or directory already exists
//   - error: internal error
func (c *Client) CreatePackage(ctx context.Context, p *types.PackageFile) (err error) {
	_, err = c.CreatePackageEndpoint(ctx, p)
	return
}

// DeletePackage calls the "DeletePackage" endpoint of the "Repo" service.
// DeletePackage may return the following errors:
//   - "not_found" (type *goa.ServiceError): Package not found
//   - error: internal error
func (c *Client) DeletePackage(ctx context.Context, p *types.PackageLocator) (err error) {
	_, err = c.DeletePackageEndpoint(ctx, p)
	return
}

// ListPackages calls the "ListPackages" endpoint of the "Repo" service.
// ListPackages may return the following errors:
//   - "not_found" (type *goa.ServiceError): Package not found
//   - error: internal error
func (c *Client) ListPackages(ctx context.Context, p *types.Repository) (res []*types.Package, err error) {
	var ires any
	ires, err = c.ListPackagesEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.([]*types.Package), nil
}

// ReadPackage calls the "ReadPackage" endpoint of the "Repo" service.
// ReadPackage may return the following errors:
//   - "not_found" (type *goa.ServiceError): Package not found
//   - error: internal error
func (c *Client) ReadPackage(ctx context.Context, p *types.PackageLocator) (res []*types.PackageFile, err error) {
	var ires any
	ires, err = c.ReadPackageEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.([]*types.PackageFile), nil
}

// GetModelJSON calls the "GetModelJSON" endpoint of the "Repo" service.
// GetModelJSON may return the following errors:
//   - "not_found" (type *goa.ServiceError): Package not found
//   - "compilation_error" (type *goa.ServiceError): Compilation error
//   - error: internal error
func (c *Client) GetModelJSON(ctx context.Context, p *types.PackageLocator) (res types.ModelJSON, err error) {
	var ires any
	ires, err = c.GetModelJSONEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(types.ModelJSON), nil
}

// Subscribe calls the "Subscribe" endpoint of the "Repo" service.
// Subscribe may return the following errors:
//   - "not_found" (type *goa.ServiceError): Package not found
//   - error: internal error
func (c *Client) Subscribe(ctx context.Context, p *types.PackageLocator) (res SubscribeClientStream, err error) {
	var ires any
	ires, err = c.SubscribeEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(SubscribeClientStream), nil
}
