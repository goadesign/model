// Code generated by goa v3.13.2, DO NOT EDIT.
//
// SVG endpoints
//
// Command:
// $ goa gen goa.design/model/svc/design -o svc/

package svg

import (
	"context"

	goa "goa.design/goa/v3/pkg"
	types "goa.design/model/svc/gen/types"
)

// Endpoints wraps the "SVG" service endpoints.
type Endpoints struct {
	Load goa.Endpoint
	Save goa.Endpoint
}

// NewEndpoints wraps the methods of the "SVG" service with endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		Load: NewLoadEndpoint(s),
		Save: NewSaveEndpoint(s),
	}
}

// Use applies the given middleware to all the "SVG" service endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.Load = m(e.Load)
	e.Save = m(e.Save)
}

// NewLoadEndpoint returns an endpoint function that calls the method "Load" of
// service "SVG".
func NewLoadEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*types.FileLocator)
		return s.Load(ctx, p)
	}
}

// NewSaveEndpoint returns an endpoint function that calls the method "Save" of
// service "SVG".
func NewSaveEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*SavePayload)
		return nil, s.Save(ctx, p)
	}
}
