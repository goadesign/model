// Code generated by goa v3.13.2, DO NOT EDIT.
//
// SVG service
//
// Command:
// $ goa gen goa.design/model/svc/design -o svc/

package svg

import (
	"context"

	goa "goa.design/goa/v3/pkg"
	types "goa.design/model/svc/gen/types"
)

// Service is the SVG service interface.
type Service interface {
	// Stream the SVG
	Load(context.Context, *types.FileLocator) (res SVG, err error)
	// Save the SVG streamed in the request body
	Save(context.Context, *SavePayload) (err error)
}

// ServiceName is the name of the service as defined in the design. This is the
// same value that is set in the endpoint request contexts under the ServiceKey
// key.
const ServiceName = "SVG"

// MethodNames lists the service method names as defined in the design. These
// are the same values that are set in the endpoint request contexts under the
// MethodKey key.
var MethodNames = [2]string{"Load", "Save"}

// SVG is the result type of the SVG service Load method.
type SVG string

// SavePayload is the payload type of the SVG service Save method.
type SavePayload struct {
	// Diagram SVG
	SVG SVG
	// Name of DSL file
	Filename string
	// Path to repository root
	Repository string
	// Path to directory containing a model package
	Dir string
}

// MakeNotFound builds a goa.ServiceError from an error.
func MakeNotFound(err error) *goa.ServiceError {
	return goa.NewServiceError(err, "NotFound", false, false, false)
}
