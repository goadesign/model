{"version":3,"file":"main.js","mappings":"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","sources":["webpack://app/./src/style.css","webpack://app/./src/graph-view/svg-text.ts","webpack://app/./src/graph-view/svg-create.ts","webpack://app/./src/graph-view/intersect.ts","webpack://app/./src/graph-view/shapes.ts","webpack://app/./src/graph-view/layout.ts","webpack://app/./src/graph-view/undo.ts","webpack://app/./src/graph-view/graph.ts","webpack://app/./src/graph-view/defs.ts","webpack://app/./src/utils/platform.ts","webpack://app/./src/shortcuts.tsx","webpack://app/./src/style.css?7163","webpack://app/./src/websocket.ts","webpack://app/./src/index.tsx","webpack://app/./src/parseModel.ts","webpack://app/./src/hooks.ts","webpack://app/./src/utils.ts","webpack://app/./src/components/Toolbar.tsx","webpack://app/./src/Root.tsx"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `html, body, #root {\n    height: 100%;\n}\n\nbody {\n    font-family: sans-serif;\n    color: #666;\n    margin: 0;\n}\n\n#root {\n    display: flex;\n    flex-direction: column;\n}\n#root > div.graph {\n    flex: 1;\n    overflow: auto;\n    position: relative;\n}\n\n.toolbar {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 4px 10px;\n    background-color: #f0f0f0;\n    border-bottom: 1px solid #cccccc;\n}\n\n.toolbar > div {\n    display: flex;\n    align-items: center;\n}\n\n.toolbar button {\n    padding: 5px 8px;\n    margin: 0 2px;\n    cursor: pointer;\n}\n\n.toolbar button:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n}\n\n/* Drag mode toggle button styles */\n.toolbar button.mode-toggle {\n    position: relative;\n    border: 1px solid #8f9fc9;\n    width: 40px;\n    min-height: 28px;\n    background: linear-gradient(to bottom, #abb8db, #8f9fc9);\n    border-color: #8f9fc9;\n    color: white;\n    box-shadow: 2px 2px 2px rgba(0, 0, 0, .2);\n}\n\n.toolbar button.mode-toggle:hover {\n    background: linear-gradient(to bottom, #bcc7e0, #abb8db);\n    border-color: #abb8db;\n}\n\n.toolbar button.mode-toggle.select-mode:active {\n    background: linear-gradient(to bottom, #8f9fc9, #7a8bb5);\n}\n\n/* Pan mode and active toggle - darker blue */\n.toolbar button.mode-toggle.pan-mode,\n.toolbar button.active-toggle {\n    background: linear-gradient(to bottom, #4a90e2, #357abd);\n    border-color: #2968a3;\n    box-shadow: inset 0 1px 2px rgba(0,0,0,0.2);\n}\n\n.toolbar button.mode-toggle.pan-mode:hover,\n.toolbar button.active-toggle:hover {\n    background: linear-gradient(to bottom, #5ba0f2, #4585c7);\n}\n\n.toolbar button.mode-toggle.pan-mode:active {\n    background: linear-gradient(to bottom, #357abd, #2968a3);\n    box-shadow: inset 0 1px 2px rgba(0,0,0,0.2);\n}\n\n/* Toggle buttons when inactive - gray styling */\n.toolbar button.inactive-toggle {\n    background: #c1c1c1;\n    color: #999;\n    border-color: #c1c1c1;\n    box-shadow: none;\n}\n\n.toolbar button.inactive-toggle:hover {\n    background: #b1b1b1;\n}\n\n.toolbar button.inactive-toggle:active {\n    background: #a1a1a1;\n}\n\n/* Toggle buttons when disabled and not active - gray like other disabled buttons */\n.toolbar button.mode-toggle:disabled:not(.pan-mode):not(.active-toggle),\n.toolbar button.active-toggle:disabled:not(.active-toggle) {\n    background: #c1c1c1;\n    color: #999;\n    border-color: #c1c1c1;\n    box-shadow: none;\n}\n\n/* Ensure Font Awesome icons are sized appropriately if not already handled */\n.toolbar button .fas {\n    font-size: 1em;\n    vertical-align: middle;\n}\n\n/* Zoom percentage display */\n.toolbar button.zoom-display {\n    font-family: 'SF Mono', Monaco, 'Roboto Mono', Consolas, monospace;\n    font-size: 11px;\n    font-weight: 600;\n    min-width: 50px;  /* Wider to prevent size change between 99% and 100% */\n    padding: 6px 8px;\n    text-align: center;\n}\n\n.toolbar-group {\n    display: flex;\n    align-items: center;\n    margin-right: 25px; /* Large space between groups */\n}\n\n.toolbar-group:last-child {\n    margin-right: 0; /* Remove right margin from the last group (help button) */\n}\n\nbutton {\n    border: none;\n    background: linear-gradient(to bottom, #4a90e2, #357abd);\n    border-color: #2968a3;\n    border-radius: 3px;\n    padding: 6px 10px;\n    color: #fff;\n    outline: none;\n    box-shadow: 2px 2px 2px rgba(0, 0, 0, .2);\n    margin-right: 5px;\n    min-width: 32px;\n    min-height: 28px;\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n    font-size: 14px;\n    line-height: 1;\n    font-family: \"Segoe UI\", \"Segoe UI Symbol\", \"Segoe UI Emoji\", system-ui, -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", Arial, sans-serif;\n    position: relative;\n}\n\nbutton:hover {\n    background: linear-gradient(to bottom, #5ba0f2, #4585c7);\n}\n\nbutton:active {\n    background: linear-gradient(to bottom, #357abd, #2968a3);\n}\n\nbutton:last-child {\n    margin-right: 0;\n}\n\n/* Save button when no changes - gray */\nbutton.action {\n    background: #c1c1c1;\n    color: #999;\n}\n\nbutton.action:active {\n    background: #b1b1b1;\n}\n\n/* Save button when there are changes - orange */\nbutton.grp {\n    background: linear-gradient(to bottom, #ee9564, #de7d48);\n    margin-right: 0;\n}\n\nbutton.grp:active {\n    background: #d67540;\n}\n\nselect {\n    border: 1px solid #ccc;\n    background: white;\n    border-radius: 3px;\n    padding: 3px 7px;\n    color: #666;\n    outline: none;\n    margin-right: 5px;\n    font-size: 12px;\n}\n\nselect:disabled {\n    background: #f5f5f5;\n    color: #999;\n}\n\nbutton:disabled {\n    background: #c1c1c1;\n    color: #999;\n}\n\n#root > div > svg {\n    position: absolute;\n    user-select: none;\n}\n\n\n.node.selected .nodeBorder, .edge.selected path, .edge.selected rect {\n    stroke: #29c229;\n}\n.edge .v-dot {\n    fill: transparent;\n    stroke: transparent;\n    stroke-width: 3px;\n    cursor: pointer;\n    transition: stroke 0.15s ease;\n}\n.edge .v-dot:hover {\n    stroke: #999;\n    fill: rgba(153, 153, 153, 0.1);\n}\n.edge .v-dot.selected {\n    stroke: #29c229;\n    fill: rgba(41, 194, 41, 0.1);\n}\n.edge .v-dot.selected:hover {\n    stroke: #29c229;\n    fill: rgba(41, 194, 41, 0.2);\n}\n.edge .v-dot.auto.selected {\n    stroke: #777;\n    fill: rgba(119, 119, 119, 0.1);\n}\n.edge .v-dot.auto.selected:hover {\n    stroke: #777;\n    fill: rgba(119, 119, 119, 0.2);\n}\ncircle#prj {\n    fill: none;\n    stroke: #777;\n}\n\n.nodeShadow {\n    fill: none;\n    stroke-width: 4px;\n    stroke: rgba(0, 0, 0, 0.13);\n}\n\ng.node {\n    user-select: none;\n    cursor: default;\n}\n\ng.node text {\n    pointer-events: none;\n}\n\n.icon {\n    fill: #aaa;\n    stroke: #fff;\n}\n#icon-cube {\n    fill: #aaa;\n}\n\n/* Ensure all button icons are uncolored */\nbutton .icon,\nbutton svg,\nbutton path {\n    fill: currentColor !important;\n    stroke: none !important;\n}\n\n/* Font Awesome icon styling in buttons */\nbutton i {\n    font-size: 12px;\n    color: inherit;\n}\n\nrect.elastic {\n    pointer-events: none;\n    stroke: none;\n    fill: #3bd8281f;\n    display: none;\n}\nrect.elastic.on {\n    display: block;\n}\n\n.popover {\n    position: absolute;\n    top: 50px;\n    bottom: 10px;\n    overflow: auto;\n    right: 10px;\n    background: ghostwhite;\n    padding: 30px;\n    box-shadow: 3px 3px 5px rgba(0,0,0, .2);\n    border: solid 1px #eee;\n}\n\n.popover th {\n    text-align: left;\n    padding: 20px 0px 10px;\n}\n.popover td {\n    padding-right: 20px;\n    font-size: 14px;\n}\n\n/* Simple tooltip system with smart positioning */\n[data-tooltip] {\n    position: relative;\n}\n\n[data-tooltip]:hover::after {\n    content: attr(data-tooltip);\n    position: absolute;\n    top: 100%;\n    left: 50%;\n    transform: translateX(-50%);\n    background: rgba(0, 0, 0, 0.9);\n    color: white;\n    padding: 6px 12px;\n    border-radius: 4px;\n    font-size: 12px;\n    white-space: nowrap;\n    z-index: 1000;\n    pointer-events: none;\n    margin-top: 5px;\n    animation: tooltip-appear 0.1s ease-out;\n    min-width: 120px;\n    max-width: calc(100vw - 20px);\n    box-sizing: border-box;\n}\n\n[data-tooltip]:hover::before {\n    content: '';\n    position: absolute;\n    top: 100%;\n    left: 50%;\n    transform: translateX(-50%);\n    border: 4px solid transparent;\n    border-bottom-color: rgba(0, 0, 0, 0.9);\n    z-index: 1000;\n    pointer-events: none;\n    margin-top: 1px;\n    animation: tooltip-appear 0.1s ease-out;\n}\n\n/* Special handling for rightmost elements that might overflow */\n.toolbar-group:nth-last-child(-n+2) button[data-tooltip]:hover::after {\n    /* Apply to last 2 toolbar groups (save and help buttons) */\n    left: auto;\n    right: 0;\n    transform: none;\n}\n\n.toolbar-group:nth-last-child(-n+2) button[data-tooltip]:hover::before {\n    /* Apply to last 2 toolbar groups (save and help buttons) */\n    left: auto;\n    right: 16px;\n    transform: none;\n}\n\n@keyframes tooltip-appear {\n    from {\n        opacity: 0;\n        transform: translateX(-50%) translateY(-5px);\n    }\n    to {\n        opacity: 1;\n        transform: translateX(-50%) translateY(0);\n    }\n}\n\nselect {\n    position: relative;\n}`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/style.css\"],\"names\":[],\"mappings\":\"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\",\"sourcesContent\":[\"html, body, #root {\\n    height: 100%;\\n}\\n\\nbody {\\n    font-family: sans-serif;\\n    color: #666;\\n    margin: 0;\\n}\\n\\n#root {\\n    display: flex;\\n    flex-direction: column;\\n}\\n#root > div.graph {\\n    flex: 1;\\n    overflow: auto;\\n    position: relative;\\n}\\n\\n.toolbar {\\n    display: flex;\\n    justify-content: space-between;\\n    align-items: center;\\n    padding: 4px 10px;\\n    background-color: #f0f0f0;\\n    border-bottom: 1px solid #cccccc;\\n}\\n\\n.toolbar > div {\\n    display: flex;\\n    align-items: center;\\n}\\n\\n.toolbar button {\\n    padding: 5px 8px;\\n    margin: 0 2px;\\n    cursor: pointer;\\n}\\n\\n.toolbar button:disabled {\\n    opacity: 0.5;\\n    cursor: not-allowed;\\n}\\n\\n/* Drag mode toggle button styles */\\n.toolbar button.mode-toggle {\\n    position: relative;\\n    border: 1px solid #8f9fc9;\\n    width: 40px;\\n    min-height: 28px;\\n    background: linear-gradient(to bottom, #abb8db, #8f9fc9);\\n    border-color: #8f9fc9;\\n    color: white;\\n    box-shadow: 2px 2px 2px rgba(0, 0, 0, .2);\\n}\\n\\n.toolbar button.mode-toggle:hover {\\n    background: linear-gradient(to bottom, #bcc7e0, #abb8db);\\n    border-color: #abb8db;\\n}\\n\\n.toolbar button.mode-toggle.select-mode:active {\\n    background: linear-gradient(to bottom, #8f9fc9, #7a8bb5);\\n}\\n\\n/* Pan mode and active toggle - darker blue */\\n.toolbar button.mode-toggle.pan-mode,\\n.toolbar button.active-toggle {\\n    background: linear-gradient(to bottom, #4a90e2, #357abd);\\n    border-color: #2968a3;\\n    box-shadow: inset 0 1px 2px rgba(0,0,0,0.2);\\n}\\n\\n.toolbar button.mode-toggle.pan-mode:hover,\\n.toolbar button.active-toggle:hover {\\n    background: linear-gradient(to bottom, #5ba0f2, #4585c7);\\n}\\n\\n.toolbar button.mode-toggle.pan-mode:active {\\n    background: linear-gradient(to bottom, #357abd, #2968a3);\\n    box-shadow: inset 0 1px 2px rgba(0,0,0,0.2);\\n}\\n\\n/* Toggle buttons when inactive - gray styling */\\n.toolbar button.inactive-toggle {\\n    background: #c1c1c1;\\n    color: #999;\\n    border-color: #c1c1c1;\\n    box-shadow: none;\\n}\\n\\n.toolbar button.inactive-toggle:hover {\\n    background: #b1b1b1;\\n}\\n\\n.toolbar button.inactive-toggle:active {\\n    background: #a1a1a1;\\n}\\n\\n/* Toggle buttons when disabled and not active - gray like other disabled buttons */\\n.toolbar button.mode-toggle:disabled:not(.pan-mode):not(.active-toggle),\\n.toolbar button.active-toggle:disabled:not(.active-toggle) {\\n    background: #c1c1c1;\\n    color: #999;\\n    border-color: #c1c1c1;\\n    box-shadow: none;\\n}\\n\\n/* Ensure Font Awesome icons are sized appropriately if not already handled */\\n.toolbar button .fas {\\n    font-size: 1em;\\n    vertical-align: middle;\\n}\\n\\n/* Zoom percentage display */\\n.toolbar button.zoom-display {\\n    font-family: 'SF Mono', Monaco, 'Roboto Mono', Consolas, monospace;\\n    font-size: 11px;\\n    font-weight: 600;\\n    min-width: 50px;  /* Wider to prevent size change between 99% and 100% */\\n    padding: 6px 8px;\\n    text-align: center;\\n}\\n\\n.toolbar-group {\\n    display: flex;\\n    align-items: center;\\n    margin-right: 25px; /* Large space between groups */\\n}\\n\\n.toolbar-group:last-child {\\n    margin-right: 0; /* Remove right margin from the last group (help button) */\\n}\\n\\nbutton {\\n    border: none;\\n    background: linear-gradient(to bottom, #4a90e2, #357abd);\\n    border-color: #2968a3;\\n    border-radius: 3px;\\n    padding: 6px 10px;\\n    color: #fff;\\n    outline: none;\\n    box-shadow: 2px 2px 2px rgba(0, 0, 0, .2);\\n    margin-right: 5px;\\n    min-width: 32px;\\n    min-height: 28px;\\n    display: inline-flex;\\n    align-items: center;\\n    justify-content: center;\\n    font-size: 14px;\\n    line-height: 1;\\n    font-family: \\\"Segoe UI\\\", \\\"Segoe UI Symbol\\\", \\\"Segoe UI Emoji\\\", system-ui, -apple-system, BlinkMacSystemFont, \\\"Helvetica Neue\\\", Arial, sans-serif;\\n    position: relative;\\n}\\n\\nbutton:hover {\\n    background: linear-gradient(to bottom, #5ba0f2, #4585c7);\\n}\\n\\nbutton:active {\\n    background: linear-gradient(to bottom, #357abd, #2968a3);\\n}\\n\\nbutton:last-child {\\n    margin-right: 0;\\n}\\n\\n/* Save button when no changes - gray */\\nbutton.action {\\n    background: #c1c1c1;\\n    color: #999;\\n}\\n\\nbutton.action:active {\\n    background: #b1b1b1;\\n}\\n\\n/* Save button when there are changes - orange */\\nbutton.grp {\\n    background: linear-gradient(to bottom, #ee9564, #de7d48);\\n    margin-right: 0;\\n}\\n\\nbutton.grp:active {\\n    background: #d67540;\\n}\\n\\nselect {\\n    border: 1px solid #ccc;\\n    background: white;\\n    border-radius: 3px;\\n    padding: 3px 7px;\\n    color: #666;\\n    outline: none;\\n    margin-right: 5px;\\n    font-size: 12px;\\n}\\n\\nselect:disabled {\\n    background: #f5f5f5;\\n    color: #999;\\n}\\n\\nbutton:disabled {\\n    background: #c1c1c1;\\n    color: #999;\\n}\\n\\n#root > div > svg {\\n    position: absolute;\\n    user-select: none;\\n}\\n\\n\\n.node.selected .nodeBorder, .edge.selected path, .edge.selected rect {\\n    stroke: #29c229;\\n}\\n.edge .v-dot {\\n    fill: transparent;\\n    stroke: transparent;\\n    stroke-width: 3px;\\n    cursor: pointer;\\n    transition: stroke 0.15s ease;\\n}\\n.edge .v-dot:hover {\\n    stroke: #999;\\n    fill: rgba(153, 153, 153, 0.1);\\n}\\n.edge .v-dot.selected {\\n    stroke: #29c229;\\n    fill: rgba(41, 194, 41, 0.1);\\n}\\n.edge .v-dot.selected:hover {\\n    stroke: #29c229;\\n    fill: rgba(41, 194, 41, 0.2);\\n}\\n.edge .v-dot.auto.selected {\\n    stroke: #777;\\n    fill: rgba(119, 119, 119, 0.1);\\n}\\n.edge .v-dot.auto.selected:hover {\\n    stroke: #777;\\n    fill: rgba(119, 119, 119, 0.2);\\n}\\ncircle#prj {\\n    fill: none;\\n    stroke: #777;\\n}\\n\\n.nodeShadow {\\n    fill: none;\\n    stroke-width: 4px;\\n    stroke: rgba(0, 0, 0, 0.13);\\n}\\n\\ng.node {\\n    user-select: none;\\n    cursor: default;\\n}\\n\\ng.node text {\\n    pointer-events: none;\\n}\\n\\n.icon {\\n    fill: #aaa;\\n    stroke: #fff;\\n}\\n#icon-cube {\\n    fill: #aaa;\\n}\\n\\n/* Ensure all button icons are uncolored */\\nbutton .icon,\\nbutton svg,\\nbutton path {\\n    fill: currentColor !important;\\n    stroke: none !important;\\n}\\n\\n/* Font Awesome icon styling in buttons */\\nbutton i {\\n    font-size: 12px;\\n    color: inherit;\\n}\\n\\nrect.elastic {\\n    pointer-events: none;\\n    stroke: none;\\n    fill: #3bd8281f;\\n    display: none;\\n}\\nrect.elastic.on {\\n    display: block;\\n}\\n\\n.popover {\\n    position: absolute;\\n    top: 50px;\\n    bottom: 10px;\\n    overflow: auto;\\n    right: 10px;\\n    background: ghostwhite;\\n    padding: 30px;\\n    box-shadow: 3px 3px 5px rgba(0,0,0, .2);\\n    border: solid 1px #eee;\\n}\\n\\n.popover th {\\n    text-align: left;\\n    padding: 20px 0px 10px;\\n}\\n.popover td {\\n    padding-right: 20px;\\n    font-size: 14px;\\n}\\n\\n/* Simple tooltip system with smart positioning */\\n[data-tooltip] {\\n    position: relative;\\n}\\n\\n[data-tooltip]:hover::after {\\n    content: attr(data-tooltip);\\n    position: absolute;\\n    top: 100%;\\n    left: 50%;\\n    transform: translateX(-50%);\\n    background: rgba(0, 0, 0, 0.9);\\n    color: white;\\n    padding: 6px 12px;\\n    border-radius: 4px;\\n    font-size: 12px;\\n    white-space: nowrap;\\n    z-index: 1000;\\n    pointer-events: none;\\n    margin-top: 5px;\\n    animation: tooltip-appear 0.1s ease-out;\\n    min-width: 120px;\\n    max-width: calc(100vw - 20px);\\n    box-sizing: border-box;\\n}\\n\\n[data-tooltip]:hover::before {\\n    content: '';\\n    position: absolute;\\n    top: 100%;\\n    left: 50%;\\n    transform: translateX(-50%);\\n    border: 4px solid transparent;\\n    border-bottom-color: rgba(0, 0, 0, 0.9);\\n    z-index: 1000;\\n    pointer-events: none;\\n    margin-top: 1px;\\n    animation: tooltip-appear 0.1s ease-out;\\n}\\n\\n/* Special handling for rightmost elements that might overflow */\\n.toolbar-group:nth-last-child(-n+2) button[data-tooltip]:hover::after {\\n    /* Apply to last 2 toolbar groups (save and help buttons) */\\n    left: auto;\\n    right: 0;\\n    transform: none;\\n}\\n\\n.toolbar-group:nth-last-child(-n+2) button[data-tooltip]:hover::before {\\n    /* Apply to last 2 toolbar groups (save and help buttons) */\\n    left: auto;\\n    right: 16px;\\n    transform: none;\\n}\\n\\n@keyframes tooltip-appear {\\n    from {\\n        opacity: 0;\\n        transform: translateX(-50%) translateY(-5px);\\n    }\\n    to {\\n        opacity: 1;\\n        transform: translateX(-50%) translateY(0);\\n    }\\n}\\n\\nselect {\\n    position: relative;\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","const textMeasure = () => {\n\tconst svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n\tdocument.body.appendChild(svg);\n\n\treturn {\n\t\tmeasure: (text: string, attrs: { [key: string]: string }) => {\n\t\t\tconst node = document.createElementNS('http://www.w3.org/2000/svg', 'text')\n\t\t\tnode.setAttribute('x', '0');\n\t\t\tnode.setAttribute('y', '0');\n\t\t\tfor (let attr in attrs) {\n\t\t\t\tnode.setAttribute(attr, attrs[attr]);\n\t\t\t}\n\t\t\tnode.appendChild(document.createTextNode(text));\n\n\t\t\tsvg.appendChild(node);\n\t\t\tconst {width, height} = node.getBBox();\n\t\t\tsvg.removeChild(node);\n\t\t\treturn {width, height};\n\t\t},\n\t\tclean: () => {\n\t\t\tdocument.body.removeChild(svg);\n\t\t}\n\t}\n}\n\n// Helper function to break long words that exceed width\nconst breakLongWord = (word: string, maxWidth: number, attrs: { [key: string]: string }, mt: any): string[] => {\n\tconst parts: string[] = [];\n\tlet currentPart = '';\n\t\n\tfor (let i = 0; i < word.length; i++) {\n\t\tconst testPart = currentPart + word[i];\n\t\tconst size = mt.measure(testPart, attrs);\n\t\t\n\t\tif (size.width > maxWidth && currentPart.length > 0) {\n\t\t\tparts.push(currentPart);\n\t\t\tcurrentPart = word[i];\n\t\t} else {\n\t\t\tcurrentPart = testPart;\n\t\t}\n\t}\n\t\n\tif (currentPart.length > 0) {\n\t\tparts.push(currentPart);\n\t}\n\t\n\treturn parts;\n}\n\n// split a text in lines wrapped at a certain width\nexport const svgTextWrap = (text: string, width: number, attrs: { [key: string]: string }) => {\n\tconst mt = textMeasure()\n\tlet maxW = 0;\n\t\n\tconst ret = text.trim().split('\\n').map(text => { //split paragraphs\n\t\t//do one paragraph\n\t\tconst words = text.trim().split(/\\s+/);\n\t\tlet lines: string[] = [];\n\t\tlet currentLine: string[] = [];\n\t\t\n\t\twords.forEach(word => {\n\t\t\t// First check if the single word exceeds the width\n\t\t\tconst wordSize = mt.measure(word, attrs);\n\t\t\tif (wordSize.width > width) {\n\t\t\t\t// If we have content in current line, finish it first\n\t\t\t\tif (currentLine.length > 0) {\n\t\t\t\t\tlines.push(currentLine.join(' '));\n\t\t\t\t\tcurrentLine = [];\n\t\t\t\t}\n\t\t\t\t// Break the long word into smaller parts\n\t\t\t\tconst brokenParts = breakLongWord(word, width, attrs, mt);\n\t\t\t\t// Add all but the last part as complete lines\n\t\t\t\tfor (let i = 0; i < brokenParts.length - 1; i++) {\n\t\t\t\t\tlines.push(brokenParts[i]);\n\t\t\t\t\tmaxW = Math.max(maxW, mt.measure(brokenParts[i], attrs).width);\n\t\t\t\t}\n\t\t\t\t// Start new line with the last part\n\t\t\t\tif (brokenParts.length > 0) {\n\t\t\t\t\tcurrentLine = [brokenParts[brokenParts.length - 1]];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Normal word processing\n\t\t\t\tconst newLine = [...currentLine, word];\n\t\t\t\tconst size = mt.measure(newLine.join(' '), attrs);\n\t\t\t\tif (size.width > width && currentLine.length > 0) {\n\t\t\t\t\tlines.push(currentLine.join(' '));\n\t\t\t\t\tcurrentLine = [word];\n\t\t\t\t} else {\n\t\t\t\t\tmaxW = Math.max(maxW, size.width)\n\t\t\t\t\tcurrentLine = newLine;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tif (currentLine.length > 0) {\n\t\t\tlines.push(currentLine.join(' '));\n\t\t}\n\t\treturn lines;\n\t}).reduce((a, v) => a.concat(v), []) //flatten\n\n\tmt.clean()\n\treturn {lines: ret, maxW};\n};\n\n\n","import {svgTextWrap} from \"./svg-text\";\n\nexport const create = {\n\telement(type: string, attrs: Record<string, string | number> = {}, className?: string) {\n\t\tconst el = document.createElementNS('http://www.w3.org/2000/svg', type);\n\t\tObject.entries(attrs).forEach(([k, v]) => el.setAttribute(k, String(v)));\n\t\tif (className) el.classList.add(className);\n\t\treturn el;\n\t},\n\n\tuse(id: string, attrs: Record<string, string | number> = {}) {\n\t\tconst el = this.element('use', attrs);\n\t\tel.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', '#' + id);\n\t\treturn el;\n\t},\n\n\tpath(path: string, attrs: Record<string, string | number> = {}, className?: string) {\n\t\tconst p = this.element(\"path\", {...attrs, d: path}, className);\n\t\treturn p;\n\t},\n\n\ttext(text: string, attrs: Record<string, string | number> = {}) {\n\t\tconst t = this.element('text', attrs) as SVGTextElement;\n\t\tif (text) t.textContent = text;\n\t\treturn t;\n\t},\n\n\ttextArea(text: string, width: number, fontSize: number, bold: boolean, x = 0, y = 0, anchor = '') {\n\t\tconst attrs: Record<string, string> = {\n\t\t\t'font-size': `${fontSize}px`,\n\t\t\t'font-weight': bold ? 'bold' : 'normal'\n\t\t};\n\t\tconst {lines, maxW} = svgTextWrap(text, width, attrs);\n\t\tconst txt = this.text('', {x: 0, y, 'text-anchor': anchor || undefined});\n\t\t\n\t\tlines.forEach((line, i) => {\n\t\t\tconst span = this.element('tspan', {x, dy: `${fontSize + 2}px`, ...attrs});\n\t\t\tspan.textContent = line;\n\t\t\ttxt.append(span);\n\t\t});\n\t\t\n\t\treturn {txt, dy: (lines.length + 1) * (fontSize + 2), maxW};\n\t},\n\n\trect(width: number, height: number, x = 0, y = 0, r = 0, className?: string) {\n\t\treturn this.element('rect', {x, y, rx: r, ry: r, width, height}, className) as SVGRectElement;\n\t},\n\n\ticon(icon: string, x = 0, y = 0) {\n\t\treturn this.use(icon, {x, y});\n\t},\n\n\texpand(x: number, y: number, expanded: boolean) {\n\t\tconst g = this.element('g', {transform: `translate(${x},${y})`}, 'expand') as SVGGElement;\n\t\tg.append(\n\t\t\tthis.rect(19, 19, 0, 0, 1),\n\t\t\tthis.text(expanded ? '-' : '+', {x: 10, y: 14, 'text-anchor': 'middle'})\n\t\t);\n\t\treturn g;\n\t}\n};\n\nexport function setPosition(g: SVGGElement, x: number, y: number) {\n\tg.setAttribute('transform', `translate(${x},${y})`);\n}","interface Point {\n\tx: number;\n\ty: number;\n}\n\ninterface BBox extends Point {\n\twidth: number;\n\theight: number;\n}\n\n\nexport function insideBox(p: Point, b: BBox, centeredBox = true): boolean {\n\treturn centeredBox ?\n\t\t(p.x > b.x - b.width / 2 && p.x < b.x + b.width / 2 && p.y > b.y - b.height / 2 && p.y < b.y + b.height / 2) :\n\t\t(p.x > b.x && p.x < b.x + b.width && p.y > b.y && p.y < b.y + b.height)\n}\n\nexport function boxesOverlap(b1: BBox, b2: BBox): boolean {\n\treturn b1.x < b2.x + b2.width && b1.y < b2.y + b2.height && b1.x + b1.width > b2.x && b1.y + b1.height > b2.y\n}\n\nexport function uncenterBox(b: BBox): BBox {\n\treturn {x: b.x - b.width / 2, y: b.y - b.height / 2, width: b.width, height: b.height}\n}\n\nexport function scaleBox(b: BBox, sc: number): BBox {\n\treturn {x: b.x * sc, y: b.y * sc, width: b.width * sc, height: b.height * sc}\n}\n\n// intersect 2 segments (p1->q1) with (p2, q2)\n// if the lines intersect, the result contains the x and y of the intersection (treating the lines as infinite)\n// and booleans for whether line segment 1 or line segment 2 contain the point\nfunction segmentIntersection(p1: Point, q1: Point, p2: Point, q2: Point) {\n\tlet denominator, a, b, numerator1, numerator2,\n\t\tresult: { x: number, y: number, onLine1: boolean, onLine2: boolean } = {\n\t\t\tx: null,\n\t\t\ty: null,\n\t\t\tonLine1: false,\n\t\t\tonLine2: false\n\t\t};\n\tdenominator = (q2.y - p2.y) * (q1.x - p1.x) - (q2.x - p2.x) * (q1.y - p1.y);\n\tif (denominator == 0) {\n\t\treturn result;\n\t}\n\ta = p1.y - p2.y;\n\tb = p1.x - p2.x;\n\tnumerator1 = ((q2.x - p2.x) * a) - ((q2.y - p2.y) * b);\n\tnumerator2 = ((q1.x - p1.x) * a) - ((q1.y - p1.y) * b);\n\ta = numerator1 / denominator;\n\tb = numerator2 / denominator;\n\n\t// if we cast these lines infinitely in both directions, they intersect here:\n\tresult.x = p1.x + (a * (q1.x - p1.x));\n\tresult.y = p1.y + (a * (q1.y - p1.y));\n\n\t// if line1 is a segment and line2 is infinite, they intersect if:\n\tif (a > 0 && a < 1) {\n\t\tresult.onLine1 = true;\n\t}\n\t// if line2 is a segment and line1 is infinite, they intersect if:\n\tif (b >= 0 && b <= 1) {\n\t\tresult.onLine2 = true;\n\t}\n\t// if line1 and line2 are segments, they intersect if both of the above are true\n\treturn result;\n}\n\n// intersects a segment (p1->p2) with a box\nexport function intersectRectFull(p1: Point, p2: Point, box: BBox): Point[] {\n\tconst w = box.width / 2\n\tconst h = box.height / 2\n\tconst segs: { p: Point; q: Point }[] = [\n\t\t{p: {x: box.x - w, y: box.y - h}, q: {x: box.x - w, y: box.y + h}},\n\t\t{p: {x: box.x - w, y: box.y - h}, q: {x: box.x + w, y: box.y - h}},\n\t\t{p: {x: box.x + w, y: box.y - h}, q: {x: box.x + w, y: box.y + h}},\n\t\t{p: {x: box.x - w, y: box.y + h}, q: {x: box.x + w, y: box.y + h}},\n\t]\n\treturn segs.map(s => segmentIntersection(p1, p2, s.p, s.q)).filter(ret => ret.onLine1 && ret.onLine2)\n}\n\n// intersects a line that goes from p to the center of the box\nexport function intersectRect(box: BBox, p: Point): Point {\n\tif (insideBox(p, box)) return {x: box.x, y: box.y}\n\treturn intersectRectFull(box, p, box)[0] || {x: box.x, y: box.y}\n}\n\nexport function intersectEllipse(ellCenter: Point, rx: number, ry: number, nodeCenter: Point, point: Point) {\n\n\t//translate all to center ellipse\n\tconst p1 = {x: point.x - ellCenter.x, y: point.y - ellCenter.y}\n\tconst p2 = {x: nodeCenter.x - ellCenter.x, y: nodeCenter.y - ellCenter.y}\n\n\tif (p2.x == p1.x) { //hack to avoid singularity\n\t\tp1.x += .0000001\n\t}\n\n\tconst s = (p2.y - p1.y) / (p2.x - p1.x);\n\tconst si = p2.y - (s * p2.x);\n\tconst a = (ry * ry) + (rx * rx * s * s);\n\tconst b = 2 * rx * rx * si * s;\n\tconst c = rx * rx * si * si - rx * rx * ry * ry;\n\n\tconst radicand_sqrt = Math.sqrt((b * b) - (4 * a * c));\n\tconst x = p1.x > p2.x ?\n\t\t(-b + radicand_sqrt) / (2 * a) :\n\t\t(-b - radicand_sqrt) / (2 * a)\n\tconst pos = {\n\t\tx: x,\n\t\ty: s * x + si\n\t}\n\t//translate back\n\tpos.x += ellCenter.x;\n\tpos.y += ellCenter.y\n\n\treturn pos;\n}\n\nexport interface Segment {\n\tp: Point;\n\tq: Point;\n}\n\n// given a polyline as a list of segments, interrupt it over the box so no line is inside the box\nexport function intersectPolylineBox(segments: Segment[], box: BBox) {\n\tfor (let i = 0; i < segments.length; i++) {\n\t\tconst s = segments[i]\n\t\tif (insideBox(s.p, box)) {\n\t\t\tif (insideBox(s.q, box)) { // segment both ends inside box\n\t\t\t\tsegments.splice(i, 1)\n\t\t\t\ti -= 1\n\t\t\t} else { // segment start inside box\n\t\t\t\ts.p = intersectRectFull(s.p, s.q, box)[0]\n\t\t\t}\n\t\t} else {\n\t\t\tif (insideBox(s.q, box)) { // segment end inside box\n\t\t\t\ts.q = intersectRectFull(s.p, s.q, box)[0]\n\t\t\t} else { // both ends outside\n\t\t\t\tconst ret = intersectRectFull(s.p, s.q, box)\n\t\t\t\tif (ret.length == 2) {  // intersects the box, splice segment\n\t\t\t\t\t// order the intersection points, closest first\n\t\t\t\t\tconst dst1 = Math.abs(ret[0].x - s.p.x) + Math.abs(ret[0].y - s.p.y)\n\t\t\t\t\tconst dst2 = Math.abs(ret[1].x - s.p.x) + Math.abs(ret[1].y - s.p.y)\n\t\t\t\t\tif (dst1 > dst2) ret.reverse()\n\t\t\t\t\t// split the segment in 2\n\t\t\t\t\tconst s2 = {p: ret[1], q: s.q}\n\t\t\t\t\ts.q = ret[0]\n\t\t\t\t\tsegments.splice(i + 1, 0, s2)\n\t\t\t\t\ti += 1\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport function project(p: Point, a: Point, b: Point): Point {\n\tlet atob = {x: b.x - a.x, y: b.y - a.y};\n\tlet atop = {x: p.x - a.x, y: p.y - a.y};\n\tlet len = atob.x * atob.x + atob.y * atob.y;\n\tlet dot = atop.x * atob.x + atop.y * atob.y;\n\tlet t = Math.min(1, Math.max(0, dot / len));\n\treturn {\n\t\tx: a.x + atob.x * t,\n\t\ty: a.y + atob.y * t\n\t};\n}\n\nexport function cabDistance(p1: Point, p2: Point): number {\n\treturn Math.abs(p2.x - p1.x) + Math.abs(p2.y - p1.y)\n}","import {intersectEllipse, intersectRect} from \"./intersect\";\n\ninterface Point {\n\tx: number;\n\ty: number;\n}\n\ninterface BBox extends Point {\n\twidth: number;\n\theight: number;\n}\n\ninterface D3Node extends BBox {\n\tintersect: (p: Point) => Point\n}\n\nclass D3Element {\n\tprivate readonly _el: SVGElement\n\n\tconstructor(el: SVGElement) {\n\t\tthis._el = el;\n\t}\n\n\tnode() {\n\t\treturn this._el;\n\t}\n\n\tattr(name: string, value: string | number) {\n\t\tthis._el.setAttribute(name, String(value))\n\t\treturn this;\n\t}\n\n\tinsert(type: string, pos: string) {\n\t\tconst el = document.createElementNS('http://www.w3.org/2000/svg', type)\n\t\tconst el2 = this._el.insertBefore(el, this._el.querySelector(pos))\n\t\treturn new D3Element(el2)\n\t}\n}\n\n\nfunction rect(parent: D3Element, bbox: BBox, node: D3Node, rounded = false) {\n\tconst shapeSvg = parent.insert(\"rect\", \":first-child\")\n\t\t.attr(\"rx\", rounded ? node.width / 8 : 3)\n\t\t.attr(\"ry\", rounded ? node.width / 8 : 3)\n\t\t.attr(\"x\", -bbox.width / 2)\n\t\t.attr(\"y\", -bbox.height / 2)\n\t\t.attr(\"width\", bbox.width)\n\t\t.attr(\"height\", bbox.height);\n\n\tnode.intersect = function (point) {\n\t\treturn intersectRect(node, point);\n\t};\n\n\treturn shapeSvg;\n}\n\n\nfunction cylinder(parent: D3Element, bbox: BBox, node: D3Node) {\n\tconst w = bbox.width;\n\tconst rx = w / 2;\n\tconst ry = rx / (5.5 + w / 70); // Make ellipse even flatter - increased to 5.5\n\tconst h = bbox.height;\n\n\tconst shape =\n\t\t`M 0,${ry} a${rx},${ry} 0,0,0 ${w} 0 a ${rx},${ry} 0,0,0 ${-w} 0 l 0,${h - 2 * ry} a ${rx},${ry} 0,0,0 ${w} 0 l 0,${-h + 2 * ry}`;\n\n\tconst shapeSvg = parent\n\t\t.attr('label-offset-y', 2 * ry)\n\t\t.insert('path', ':first-child')\n\t\t.attr('d', shape)\n\t\t.attr('transform', 'translate(' + -w / 2 + ',' + -(h / 2) + ')');\n\n\tnode.intersect = function (point: Point) {\n\t\tconst pos = intersectRect(node, point)\n\t\tlet cy = node.y + node.height / 2 - ry\n\t\tif (pos.y > cy)\n\t\t\treturn intersectEllipse({x: node.x, y: cy}, rx, ry, node, point)\n\n\t\tcy = node.y - node.height / 2 + ry\n\t\tif (pos.y < cy)\n\t\t\treturn intersectEllipse({x: node.x, y: cy}, rx, ry, node, point)\n\n\t\treturn pos;\n\t};\n\n\treturn shapeSvg;\n}\n\nfunction person(parent: D3Element, bbox: BBox, node: D3Node) {\n\tconst w = bbox.width;\n\tconst h = bbox.height;\n\n\tconst shape =\n\t\t`M ${.38 * w},${h / 3} A${w / 2},${h / 2} 0,0,0 0 ${h / 2}\n\t\tL${w / 11},${h} L${w - w / 11},${h} L${w},${h / 2}\n\t\tA${w / 2},${h / 2} 0,0,0 ${w - .38 * w} ${h / 3} \n\t\tA${w / 6},${w / 6} 0,1,0 ${.38 * w} ${h / 3}`;\n\n\tconst shapeSvg = parent\n\t\t.attr('label-offset-y', h * .4)\n\t\t.insert('path', ':first-child')\n\t\t.attr('d', shape)\n\t\t.attr('transform', 'translate(' + -w / 2 + ',' + -(h / 2) + ')');\n\n\tnode.intersect = function (point: Point) {\n\t\tconst pos = intersectRect(node, point)\n\t\treturn pos;\n\t};\n\n\treturn shapeSvg;\n}\n\nfunction _ellipse(parent: D3Element, bbox: BBox, node: D3Node, rx: number, ry: number) {\n\tconst shapeSvg = parent.insert(\"ellipse\", \":first-child\")\n\t\t.attr(\"cx\", 0)\n\t\t.attr(\"cy\", 0)\n\t\t.attr('rx', rx)\n\t\t.attr('ry', ry)\n\t\t.attr(\"width\", node.width)\n\t\t.attr(\"height\", node.height);\n\n\tnode.intersect = function (point) {\n\t\treturn intersectEllipse(node, rx, ry, node, point)\n\t};\n\treturn shapeSvg;\n}\n\nfunction circle(parent: D3Element, bbox: BBox, node: D3Node) {\n\treturn _ellipse(parent, bbox, node, node.width / 2, node.width / 2)\n}\n\nfunction ellipse(parent: D3Element, bbox: BBox, node: D3Node) {\n\treturn _ellipse(parent, bbox, node, node.width * .55, node.width * .45)\n}\n\nfunction hexagon(parent: D3Element, bbox: BBox, node: D3Node) {\n\tconst sz = node.width / 2\n\t// drawing a hexagon from polar coords\n\t// [0,1,2,3,4,5,6].map(i=>`${Math.sin(Math.PI/3*i+Math.PI/6).toFixed(4)},${Math.cos(Math.PI/3*i+Math.PI/6).toFixed(4)}`).join(',')\n\tconst shapeSvg = parent.insert(\"polygon\", \":first-child\")\n\t\t.attr(\"points\",\n\t\t\t[0.5000, 0.8660, 1.0000, 0.0000, 0.5000, -0.8660, -0.5000, -0.8660, -1.0000, -0.0000, -0.5000, 0.8660, 0.5000, 0.8660].map(n => n * sz).join(','))\n\t\t.attr(\"width\", node.width)\n\t\t.attr(\"height\", node.height);\n\n\tnode.intersect = function (point) {\n\t\treturn intersectEllipse(node, node.width / 2, node.width / 2, node, point)\n\t};\n\treturn shapeSvg;\n}\n\nfunction component(parent: D3Element, bbox: BBox, node: D3Node) {\n\tconst dx = node.width / 10\n\tconst shapeSvg = parent.insert('g', ':first-child')\n\tshapeSvg.insert(\"rect\", \":first-child\")\n\t\t.attr(\"rx\", 3).attr(\"ry\", 3)\n\t\t.attr(\"x\", -node.width / 2 - dx)\n\t\t.attr(\"y\", -node.height / 2 + dx)\n\t\t.attr(\"width\", dx * 2)\n\t\t.attr(\"height\", dx);\n\tshapeSvg.insert(\"rect\", \":first-child\")\n\t\t.attr(\"rx\", 3).attr(\"ry\", 3)\n\t\t.attr(\"x\", -node.width / 2 - dx)\n\t\t.attr(\"y\", -node.height / 2 + dx * 2.5)\n\t\t.attr(\"width\", dx * 2)\n\t\t.attr(\"height\", dx);\n\tshapeSvg.insert(\"rect\", \":first-child\")\n\t\t.attr(\"rx\", 3).attr(\"ry\", 3)\n\t\t.attr(\"x\", -node.width / 2)\n\t\t.attr(\"y\", -node.height / 2)\n\t\t.attr(\"width\", node.width)\n\t\t.attr(\"height\", node.height);\n\n\tnode.intersect = function (point) {\n\t\treturn intersectRect({x: node.x - dx / 2, y: node.y, width: node.width + dx, height: node.height}, point);\n\t};\n\n\treturn shapeSvg;\n}\n\nfunction folder(parent: D3Element, bbox: BBox, node: D3Node) {\n\tconst dy = node.width / 20\n\tconst shapeSvg = parent\n\t\t.attr('label-offset-y', dy * 2)\n\t\t.insert('g', ':first-child')\n\tshapeSvg.insert(\"rect\", \":first-child\")\n\t\t.attr(\"rx\", 3).attr(\"ry\", 3)\n\t\t.attr(\"x\", -node.width / 2)\n\t\t.attr(\"y\", -node.height / 2 + dy * 2)\n\t\t.attr(\"width\", node.width)\n\t\t.attr(\"height\", node.height - dy * 2);\n\tshapeSvg.insert(\"path\", \":first-child\")\n\t\t.attr('d', `M0,${-node.height / 2 + 2 * dy} l${dy},${-2 * dy} h${node.width / 2 - dy * 2} v${dy * 2}`)\n\n\tnode.intersect = function (point) {\n\t\treturn intersectRect({x: node.x, y: node.y + dy / 2, width: node.width, height: node.height + dy}, point);\n\t};\n\n\treturn shapeSvg;\n}\n\nfunction mobiledevicelandscape(parent: D3Element, bbox: BBox, node: D3Node, rounded = false) {\n\tconst dx = node.width / 8\n\tconst r = node.width / 14\n\tconst shapeSvg = parent.insert('g', ':first-child')\n\tshapeSvg.insert('path', ':first-child')\n\t\t.attr('d', `M${-node.width / 2},${-node.height / 2} l0,${node.height} M${node.width / 2},${-node.height / 2} l0,${node.height}`)\n\tshapeSvg.insert('circle', ':first-child')\n\t\t.attr('cx', -node.width / 2 - dx / 2)\n\t\t.attr('cy', 0)\n\t\t.attr('r', r * .4)\n\tshapeSvg.insert('rect', ':first-child')\n\t\t.attr('x', node.width / 2 + dx / 2 - r * .2)\n\t\t.attr('y', -r)\n\t\t.attr('width', r * .4)\n\t\t.attr('height', r * 2)\n\tshapeSvg.insert(\"rect\", \":first-child\")\n\t\t.attr(\"rx\", r)\n\t\t.attr(\"ry\", r)\n\t\t.attr(\"x\", -bbox.width / 2 - dx)\n\t\t.attr(\"y\", -bbox.height / 2)\n\t\t.attr(\"width\", bbox.width + 2 * dx)\n\t\t.attr(\"height\", bbox.height);\n\n\tnode.intersect = function (point) {\n\t\treturn intersectRect({x: node.x, y: node.y, width: node.width + 2 * dx, height: node.height}, point);\n\t};\n\n\treturn shapeSvg;\n}\n\nfunction mobiledeviceportrait(parent: D3Element, bbox: BBox, node: D3Node) {\n\tconst dy = node.width / 8\n\tconst r = node.width / 14\n\tconst shapeSvg = parent.insert('g', ':first-child')\n\tshapeSvg.insert('path', ':first-child')\n\t\t.attr('d', `M${-node.width / 2},${-node.height / 2} l${node.width},0 M${-node.width / 2},${node.height / 2} l${node.width},0`)\n\tshapeSvg.insert('circle', ':first-child')\n\t\t.attr('cx', 0)\n\t\t.attr('cy', node.height / 2 + dy / 2)\n\t\t.attr('r', r * .4)\n\tshapeSvg.insert('rect', ':first-child')\n\t\t.attr('x', -r)\n\t\t.attr('y', -node.height / 2 - dy / 2 - r * .2)\n\t\t.attr('width', r * 2)\n\t\t.attr('height', r * .4)\n\tshapeSvg.insert(\"rect\", \":first-child\")\n\t\t.attr(\"rx\", r)\n\t\t.attr(\"ry\", r)\n\t\t.attr(\"x\", -bbox.width / 2)\n\t\t.attr(\"y\", -bbox.height / 2 - dy)\n\t\t.attr(\"width\", bbox.width)\n\t\t.attr(\"height\", bbox.height + 2 * dy);\n\n\tnode.intersect = function (point) {\n\t\treturn intersectRect({x: node.x, y: node.y, width: node.width, height: node.height + 2 * dy}, point);\n\t};\n\n\treturn shapeSvg;\n}\n\nfunction pipe(parent: D3Element, bbox: BBox, node: D3Node) {\n\tconst w = node.width;\n\tconst h = node.height;\n\tconst ry = h / 2;\n\tconst rx = ry / (2.5 + w / 70);\n\n\tconst shape =\n\t\t`M${-rx},0\n\t\ta${rx},${ry} 0,0,1 0,${h}\n\t\ta${rx},${ry} 0,0,1 0,${-h}\n\t\tl${w},0\n\t\ta${rx},${ry} 0,0,1 0,${h}\n\t\tl${-w},0`;\n\n\tconst shapeSvg = parent\n\t\t.insert('path', ':first-child')\n\t\t.attr('d', shape)\n\t\t.attr('transform', 'translate(' + -w / 2 + ',' + -(h / 2) + ')');\n\n\tnode.intersect = function (point: Point) {\n\t\treturn intersectRect({x: node.x - rx, y: node.y, width: node.width + 2 * rx, height: node.height}, point)\n\t};\n\n\treturn shapeSvg;\n}\n\nfunction robot(parent: D3Element, bbox: BBox, node: D3Node) {\n\tconst headW = node.width * .45\n\tconst r = node.width / 16\n\tconst dy = headW / 2 - r\n\tconst shapeSvg = parent\n\t\t.attr('label-offset-y', headW)\n\t\t.insert('g', ':first-child')\n\t\t.attr('transform', 'translate(0,' + (headW / 4) + ')');\n\t// head\n\tshapeSvg.insert(\"rect\", \":first-child\")\n\t\t.attr(\"rx\", r).attr(\"ry\", r)\n\t\t.attr('x', -headW / 2)\n\t\t.attr('y', -node.height / 2 - headW / 2)\n\t\t.attr('width', headW)\n\t\t.attr('height', headW)\n\t// ears\n\tshapeSvg.insert(\"path\", \":first-child\")\n\t\t.attr('d', `\n\t\t\tM${-headW / 2},${-node.height / 2 + r / 2} h-20 v-40 h20\n\t\t\tM${headW / 2},${-node.height / 2 + r / 2} h20 v-40 h-20\n\t\t`)\n\t// body\n\tshapeSvg.insert(\"rect\", \":first-child\")\n\t\t.attr(\"rx\", r).attr(\"ry\", r)\n\t\t.attr(\"x\", -node.width / 2)\n\t\t.attr(\"y\", -node.height / 2 + dy)\n\t\t.attr(\"width\", node.width)\n\t\t.attr(\"height\", node.height - dy);\n\n\tnode.intersect = function (point) {\n\t\treturn intersectRect({x: node.x, y: node.y, width: node.width, height: node.height + headW / 2}, point);\n\t};\n\n\treturn shapeSvg;\n}\n\nfunction webbrowser(parent: D3Element, bbox: BBox, node: D3Node) {\n\tconst dy = node.height / 8\n\tconst shapeSvg = parent\n\t\t.attr('label-offset-y', dy)\n\t\t.insert('g', ':first-child')\n\tshapeSvg.insert(\"path\", \":first-child\")\n\t\t.attr('d', `\n\t\t\tM${-node.width / 2},${-node.height / 2 + dy} h${node.width}\n\t\t\tM${-node.width / 2 + dy / 4},${-node.height / 2 + dy / 4} h${dy / 2} v${dy / 2} h${-dy / 2} z\n\t\t\tM${-node.width / 2 + dy},${-node.height / 2 + dy / 4} h${node.width - dy - dy / 4} v${dy / 2} h${-node.width + dy + dy / 4} z\n\t\t`)\n\tshapeSvg.insert(\"rect\", \":first-child\")\n\t\t.attr(\"rx\", 3).attr(\"ry\", 3)\n\t\t.attr(\"x\", -node.width / 2)\n\t\t.attr(\"y\", -node.height / 2)\n\t\t.attr(\"width\", node.width)\n\t\t.attr(\"height\", node.height);\n\n\tnode.intersect = function (point) {\n\t\treturn intersectRect(node, point);\n\t};\n\n\treturn shapeSvg;\n}\n\nexport const shapes: { [key: string]: (parent: SVGElement, node: D3Node) => SVGElement } = {\n\tbox: (parent: SVGElement, node: D3Node) => rect(new D3Element(parent), node, node).node(),\n\troundedbox: (parent: SVGElement, node: D3Node) => rect(new D3Element(parent), node, node, true).node(),\n\tcomponent: (parent: SVGElement, node: D3Node) => component(new D3Element(parent), node, node).node(),\n\tcylinder: (parent: SVGElement, node: D3Node) => cylinder(new D3Element(parent), node, node).node(),\n\tperson: (parent: SVGElement, node: D3Node) => person(new D3Element(parent), node, node).node(),\n\tcircle: (parent: SVGElement, node: D3Node) => circle(new D3Element(parent), node, node).node(),\n\tellipse: (parent: SVGElement, node: D3Node) => ellipse(new D3Element(parent), node, node).node(),\n\thexagon: (parent: SVGElement, node: D3Node) => hexagon(new D3Element(parent), node, node).node(),\n\tfolder: (parent: SVGElement, node: D3Node) => folder(new D3Element(parent), node, node).node(),\n\tmobiledevicelandscape: (parent: SVGElement, node: D3Node) => mobiledevicelandscape(new D3Element(parent), node, node).node(),\n\tmobiledeviceportrait: (parent: SVGElement, node: D3Node) => mobiledeviceportrait(new D3Element(parent), node, node).node(),\n\tmobiledevice: (parent: SVGElement, node: D3Node) => mobiledeviceportrait(new D3Element(parent), node, node).node(),\n\tpipe: (parent: SVGElement, node: D3Node) => pipe(new D3Element(parent), node, node).node(),\n\trobot: (parent: SVGElement, node: D3Node) => robot(new D3Element(parent), node, node).node(),\n\twebbrowser: (parent: SVGElement, node: D3Node) => webbrowser(new D3Element(parent), node, node).node(),\n}\n","import {GraphData, Node, Group} from \"./graph\";\n\nexport interface LayoutOptions {\n\tdirection?: 'UP' | 'DOWN' | 'LEFT' | 'RIGHT';\n\tnodeSpacing?: number;\n\tlayerSpacing?: number;\n\tcompactLayout?: boolean;\n}\n\n// Simplified spacing configuration\ninterface SpacingConfig {\n\tnodeSpacing: number;\n\tlayerSpacing: number;\n\tcomponentSpacing: number;\n\tpadding: number;\n\tgroupMultiplier: number;\n}\n\n// Default spacing configuration\nconst DEFAULT_SPACING: SpacingConfig = {\n\tnodeSpacing: 80,\n\tlayerSpacing: 100,\n\tcomponentSpacing: 40,\n\tpadding: 50,\n\tgroupMultiplier: 0.6,\n};\n\n// Helper function to get effective spacing for a context\nfunction getEffectiveSpacing(\n\tuserOptions: LayoutOptions = {},\n\tisGroup: boolean = false\n): SpacingConfig {\n\t// Apply user overrides to base config\n\tconst effectiveConfig: SpacingConfig = {\n\t\tnodeSpacing: userOptions.nodeSpacing ?? DEFAULT_SPACING.nodeSpacing,\n\t\tlayerSpacing: userOptions.layerSpacing ?? DEFAULT_SPACING.layerSpacing,\n\t\tcomponentSpacing: DEFAULT_SPACING.componentSpacing,\n\t\tpadding: DEFAULT_SPACING.padding,\n\t\tgroupMultiplier: DEFAULT_SPACING.groupMultiplier,\n\t};\n\t\n\t// Apply group multiplier if in group context\n\tif (isGroup) {\n\t\teffectiveConfig.nodeSpacing = Math.max(\n\t\t\teffectiveConfig.nodeSpacing * effectiveConfig.groupMultiplier,\n\t\t\t20\n\t\t);\n\t\teffectiveConfig.layerSpacing = Math.max(\n\t\t\teffectiveConfig.layerSpacing * effectiveConfig.groupMultiplier,\n\t\t\t25\n\t\t);\n\t\teffectiveConfig.componentSpacing = Math.max(\n\t\t\teffectiveConfig.componentSpacing * effectiveConfig.groupMultiplier,\n\t\t\t15\n\t\t);\n\t\teffectiveConfig.padding = Math.max(\n\t\t\teffectiveConfig.padding * effectiveConfig.groupMultiplier,\n\t\t\t15\n\t\t);\n\t}\n\t\n\treturn effectiveConfig;\n}\n\n// Simplified ELK layout options builder\nfunction getELKOptions(\n\tspacing: SpacingConfig,\n\tuserOptions: LayoutOptions\n): Record<string, string> {\n\tconst {\n\t\tdirection = 'DOWN',\n\t\tcompactLayout = true\n\t} = userOptions;\n\t\n\tconst baseOptions: Record<string, string> = {\n\t\t'elk.algorithm': 'layered',\n\t\t'elk.direction': direction,\n\t\t'elk.spacing.nodeNode': spacing.nodeSpacing.toString(),\n\t\t'elk.spacing.componentComponent': spacing.componentSpacing.toString(),\n\t\t'elk.padding': `[top=${spacing.padding},left=${spacing.padding},bottom=${spacing.padding},right=${spacing.padding}]`,\n\t\t'elk.layered.spacing.nodeNodeBetweenLayers': spacing.layerSpacing.toString(),\n\t\t'elk.layered.spacing.edgeNodeBetweenLayers': '40',\n\t\t'elk.edgeRouting': 'POLYLINE',\n\t\t'elk.layered.edgeRouting.selfLoopDistribution': 'EQUALLY',\n\t\t'elk.layered.edgeRouting.selfLoopOrdering': 'STACKED',\n\t\t'elk.layered.nodePlacement.favorStraightEdges': 'true',\n\t\t'elk.layered.nodePlacement.linearSegmentsDeflectionDampening': '0.3',\n\t\t'elk.layered.nodePlacement.strategy': 'NETWORK_SIMPLEX',\n\t\t'elk.layered.cycleBreaking.strategy': 'GREEDY',\n\t\t'elk.layered.crossingMinimization.strategy': 'LAYER_SWEEP',\n\t};\n\t\n\tif (compactLayout) {\n\t\tbaseOptions['elk.layered.compaction.postCompaction.strategy'] = 'EDGE_LENGTH';\n\t\tbaseOptions['elk.layered.compaction.connectedComponents'] = 'true';\n\t}\n\t\n\treturn baseOptions;\n}\n\nexport async function autoLayout(graph: GraphData, options: LayoutOptions = {}): Promise<{\n\tnodes: Array<{id: string, x: number, y: number}>,\n\tedges: Array<{id: string, vertices: Array<{x: number, y: number}>, label?: {x: number, y: number}}>\n}> {\n\t// Dynamically import ELK only when auto-layout is used\n\tconst ELK = await import('elkjs/lib/elk.bundled.js').then(module => module.default);\n\tconst elk = new ELK();\n\t// Get systematic spacing configuration\n\tconst rootSpacing = getEffectiveSpacing(options, false);\n\t\n\t// Build ELK graph structure\n\tconst elkGraph = {\n\t\tid: \"root\",\n\t\tlayoutOptions: getELKOptions(rootSpacing, options),\n\t\tchildren: [] as any[],\n\t\tedges: [] as any[]\n\t};\n\n\t// Add ONLY actual nodes to ELK graph (exclude edge vertices)\n\tconst nodeMap = new Map<string, Node>();\n\tgraph.nodesMap.forEach(node => {\n\t\tnodeMap.set(node.id, node);\n\t\telkGraph.children.push({\n\t\t\tid: node.id,\n\t\t\twidth: node.width,\n\t\t\theight: node.height,\n\t\t});\n\t});\n\n\t// Handle grouped nodes (hierarchical layout)\n\tconst processedGroups = new Set<string>();\n\tconst nodeToGroupMap = new Map<string, string>();\n\t\n\tgraph.groupsMap.forEach(group => {\n\t\tif (!processedGroups.has(group.id)) {\n\t\t\tprocessedGroups.add(group.id);\n\t\t\t\n\t\t\t// Get group-specific spacing\n\t\t\tconst groupSpacing = getEffectiveSpacing(options, true);\n\t\t\t\n\t\t\t// Create group node\n\t\t\tconst groupNode = {\n\t\t\t\tid: group.id,\n\t\t\t\tchildren: [] as any[],\n\t\t\t\tedges: [] as any[],\n\t\t\t\tlayoutOptions: getELKOptions(groupSpacing, options)\n\t\t\t};\n\n\t\t\t// Add group members as children and track membership\n\t\t\tgroup.nodes.forEach(member => {\n\t\t\t\tif (!isGroup(member)) {\n\t\t\t\t\tnodeToGroupMap.set(member.id, group.id);\n\t\t\t\t\t// Move node from root to group\n\t\t\t\t\tconst nodeIndex = elkGraph.children.findIndex(n => n.id === member.id);\n\t\t\t\t\tif (nodeIndex >= 0) {\n\t\t\t\t\t\tconst node = elkGraph.children.splice(nodeIndex, 1)[0];\n\t\t\t\t\t\tgroupNode.children.push(node);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Add group to root if it has children\n\t\t\tif (groupNode.children.length > 0) {\n\t\t\t\telkGraph.children.push(groupNode);\n\t\t\t}\n\t\t}\n\t});\n\n\t// Add edges to ELK graph with proper hierarchical placement\n\tgraph.edges.forEach(edge => {\n\t\tconst fromGroup = nodeToGroupMap.get(edge.from.id);\n\t\tconst toGroup = nodeToGroupMap.get(edge.to.id);\n\t\t\n\t\tconst elkEdge = {\n\t\t\tid: edge.id,\n\t\t\tsources: [edge.from.id],\n\t\t\ttargets: [edge.to.id],\n\t\t\tsections: edge.vertices?.length ? [{\n\t\t\t\tstartPoint: {x: edge.vertices[0].x, y: edge.vertices[0].y},\n\t\t\t\tendPoint: {x: edge.vertices[edge.vertices.length - 1].x, y: edge.vertices[edge.vertices.length - 1].y},\n\t\t\t\tbendPoints: edge.vertices.slice(1, -1).map(v => ({x: v.x, y: v.y}))\n\t\t\t}] : undefined\n\t\t};\n\n\t\t// Place edge in appropriate container\n\t\tif (fromGroup && toGroup && fromGroup === toGroup) {\n\t\t\t// Both nodes in same group\n\t\t\tconst groupContainer = elkGraph.children.find(c => c.id === fromGroup);\n\t\t\tif (groupContainer) {\n\t\t\t\tgroupContainer.edges.push(elkEdge);\n\t\t\t}\n\t\t} else {\n\t\t\t// Cross-group or root-level edge\n\t\t\telkGraph.edges.push(elkEdge);\n\t\t}\n\t});\n\n\ttry {\n\t\tconst layoutedGraph = await elk.layout(elkGraph);\n\t\t\n\t\t// Extract results\n\t\tconst nodes: Array<{id: string, x: number, y: number}> = [];\n\t\tconst edges: Array<{id: string, vertices: Array<{x: number, y: number}>, label?: {x: number, y: number}}> = [];\n\n\t\t// Extract nodes from layout result\n\t\tconst extractNodes = (container: any, offsetX = 0, offsetY = 0) => {\n\t\t\tcontainer.children?.forEach((child: any) => {\n\t\t\t\tif (child.children) {\n\t\t\t\t\t// This is a group, recurse\n\t\t\t\t\textractNodes(child, offsetX + (child.x || 0), offsetY + (child.y || 0));\n\t\t\t\t} else {\n\t\t\t\t\t// This is a node\n\t\t\t\t\tnodes.push({\n\t\t\t\t\t\tid: child.id,\n\t\t\t\t\t\tx: offsetX + (child.x || 0) + (child.width || 0) / 2,\n\t\t\t\t\t\ty: offsetY + (child.y || 0) + (child.height || 0) / 2\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\t// Extract edges from layout result\n\t\tconst processEdges = (container: any) => {\n\t\t\tcontainer.edges?.forEach((edge: any) => {\n\t\t\t\tconst vertices: Array<{x: number, y: number}> = [];\n\t\t\t\tlet label: {x: number, y: number} | undefined;\n\n\t\t\t\tif (edge.sections && edge.sections.length > 0) {\n\t\t\t\t\tconst section = edge.sections[0];\n\t\t\t\t\t\n\t\t\t\t\t// Add start point\n\t\t\t\t\tif (section.startPoint) {\n\t\t\t\t\t\tvertices.push({x: section.startPoint.x, y: section.startPoint.y});\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// Add bend points\n\t\t\t\t\tif (section.bendPoints) {\n\t\t\t\t\t\tsection.bendPoints.forEach((bp: any) => {\n\t\t\t\t\t\t\tvertices.push({x: bp.x, y: bp.y});\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// Add end point\n\t\t\t\t\tif (section.endPoint) {\n\t\t\t\t\t\tvertices.push({x: section.endPoint.x, y: section.endPoint.y});\n\t\t\t\t\t}\n\n\t\t\t\t\t// Calculate label position (middle of edge)\n\t\t\t\t\tif (vertices.length >= 2) {\n\t\t\t\t\t\tconst midIndex = Math.floor(vertices.length / 2);\n\t\t\t\t\t\tif (vertices.length % 2 === 0) {\n\t\t\t\t\t\t\t// Even number of vertices, interpolate between middle two\n\t\t\t\t\t\t\tconst v1 = vertices[midIndex - 1];\n\t\t\t\t\t\t\tconst v2 = vertices[midIndex];\n\t\t\t\t\t\t\tlabel = {\n\t\t\t\t\t\t\t\tx: (v1.x + v2.x) / 2,\n\t\t\t\t\t\t\t\ty: (v1.y + v2.y) / 2\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Odd number of vertices, use middle vertex\n\t\t\t\t\t\t\tlabel = vertices[midIndex];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tedges.push({\n\t\t\t\t\tid: edge.id,\n\t\t\t\t\tvertices,\n\t\t\t\t\tlabel\n\t\t\t\t});\n\t\t\t});\n\n\t\t\t// Process child containers\n\t\t\tcontainer.children?.forEach((child: any) => {\n\t\t\t\tif (child.edges) {\n\t\t\t\t\tprocessEdges(child);\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\textractNodes(layoutedGraph);\n\t\tprocessEdges(layoutedGraph);\n\n\t\t// Normalize coordinates to start near (0,0) to prevent huge canvas sizes\n\t\t// while preserving relative positioning between elements\n\t\tif (nodes.length > 0) {\n\t\t\t// Find the minimum coordinates across all elements\n\t\t\tconst minX = Math.min(...nodes.map(n => n.x));\n\t\t\tconst minY = Math.min(...nodes.map(n => n.y));\n\t\t\t\n\t\t\t// Add some padding so content doesn't start at exact (0,0)\n\t\t\tconst padding = 50;\n\t\t\tconst offsetX = -minX + padding;\n\t\t\tconst offsetY = -minY + padding;\n\t\t\t\n\t\t\t// Normalize all node positions\n\t\t\tnodes.forEach(node => {\n\t\t\t\tnode.x += offsetX;\n\t\t\t\tnode.y += offsetY;\n\t\t\t});\n\t\t\t\n\t\t\t// Normalize all edge positions\n\t\t\tedges.forEach(edge => {\n\t\t\t\tedge.vertices.forEach(vertex => {\n\t\t\t\t\tvertex.x += offsetX;\n\t\t\t\t\tvertex.y += offsetY;\n\t\t\t\t});\n\t\t\t\tif (edge.label) {\n\t\t\t\t\tedge.label.x += offsetX;\n\t\t\t\t\tedge.label.y += offsetY;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\treturn { nodes, edges };\n\n\t} catch (error) {\n\t\tconsole.warn('ELK layout failed, using fallback:', error);\n\t\treturn createFallbackLayout(graph);\n\t}\n}\n\n// Simplified fallback layout\nfunction createFallbackLayout(graph: GraphData): {\n\tnodes: Array<{id: string, x: number, y: number}>,\n\tedges: Array<{id: string, vertices: Array<{x: number, y: number}>}>\n} {\n\tconst nodes: Array<{id: string, x: number, y: number}> = [];\n\tconst edges: Array<{id: string, vertices: Array<{x: number, y: number}>}> = [];\n\n\t// Simple grid layout for nodes\n\tlet x = 0, y = 0;\n\tconst spacing = 300;\n\tconst maxCols = Math.ceil(Math.sqrt(graph.nodesMap.size));\n\n\tlet col = 0;\n\tgraph.nodesMap.forEach(node => {\n\t\tnodes.push({\n\t\t\tid: node.id,\n\t\t\tx: x,\n\t\t\ty: y\n\t\t});\n\n\t\tcol++;\n\t\tif (col >= maxCols) {\n\t\t\tcol = 0;\n\t\t\tx = 0;\n\t\t\ty += spacing;\n\t\t} else {\n\t\t\tx += spacing;\n\t\t}\n\t});\n\n\t// Simple straight line edges\n\tgraph.edges.forEach(edge => {\n\t\tedges.push({\n\t\t\tid: edge.id,\n\t\t\tvertices: []\n\t\t});\n\t});\n\n\treturn { nodes, edges };\n}\n\nfunction isGroup(member: Node | Group): member is Group {\n\treturn 'nodes' in member;\n}","/**\n * Undo functionality\n * at every change in the document, Undo can save a new version\n * so the user can \"undo\" and \"redo\" changes by reverting to an\n * older version of the document\n */\n\nexport class Undo<Doc> {\n\tprivate readonly versions: Doc[] = [];\n\tprivate pos: number = 0;\n\tprivate lastSavedPos: number = 0;\n\tprivate readonly exportDoc: () => Doc;\n\tprivate readonly importDoc: (d: Doc) => void;\n\tchange: () => void;\n\tprivate tmpPreviousState: Doc | null = null;\n\n\tconstructor(id: string, exportDoc: () => Doc, importDoc: (d: Doc) => void) {\n\t\tthis.exportDoc = exportDoc;\n\t\tthis.importDoc = importDoc;\n\t\tthis.change = debounce(() => this.saveNow(), 300);\n\t}\n\n\t// Store the state previous to the changes collected in the debounce period\n\tbeforeChange() {\n\t\tif (!this.tmpPreviousState) {\n\t\t\tthis.tmpPreviousState = this.deepClone(this.exportDoc());\n\t\t}\n\t}\n\n\tlength() {\n\t\treturn this.versions.length;\n\t}\n\n\tcurrentState() {\n\t\treturn this.deepClone(this.versions[this.pos - 1]);\n\t}\n\n\tprivate saveNow() {\n\t\tif (!this.tmpPreviousState) {\n\t\t\tthrow Error(\"undo.change() was called without previously calling undo.beforeChange()!\");\n\t\t}\n\t\t\n\t\tthis.versions[this.pos] = this.deepClone(this.exportDoc());\n\t\tthis.versions[this.pos - 1] = this.tmpPreviousState;\n\t\tthis.tmpPreviousState = null;\n\t\tthis.pos += 1;\n\t\t\n\t\t// Remove anything that might be on top of this version\n\t\tthis.versions.splice(this.pos);\n\t}\n\n\tprivate deepClone(doc: Doc): Doc {\n\t\t// Use modern structuredClone if available, fallback to JSON\n\t\tif (typeof structuredClone !== 'undefined') {\n\t\t\treturn structuredClone(doc);\n\t\t}\n\t\treturn JSON.parse(JSON.stringify(doc));\n\t}\n\n\tundo() {\n\t\tif (this.pos < 2) return;\n\t\tthis.pos -= 1;\n\t\tconst doc = this.versions[this.pos - 1];\n\t\tthis.importDoc(this.deepClone(doc));\n\t}\n\n\tredo() {\n\t\tif (this.pos > this.versions.length - 1) return;\n\t\tconst doc = this.versions[this.pos];\n\t\tthis.importDoc(this.deepClone(doc));\n\t\tthis.pos += 1;\n\t}\n\n\tchanged() {\n\t\treturn this.pos !== this.lastSavedPos;\n\t}\n\n\tsetSaved() {\n\t\tthis.lastSavedPos = this.pos;\n\t}\n}\n\nfunction debounce(func: () => void, wait: number) {\n\tlet timeout: ReturnType<typeof setTimeout>;\n\treturn function () {\n\t\tconst context = this;\n\t\tconst later = function () {\n\t\t\ttimeout = null;\n\t\t\tfunc.apply(context);\n\t\t};\n\t\tclearTimeout(timeout);\n\t\ttimeout = setTimeout(later, wait);\n\t};\n}","import {defs} from \"./defs\";\nimport {create, setPosition} from \"./svg-create\";\nimport {cursorInteraction} from \"svg-editor-tools/lib/cursor-interaction\";\nimport {shapes} from \"./shapes\";\nimport {\n\tboxesOverlap,\n\tcabDistance,\n\tinsideBox,\n\tintersectPolylineBox,\n\tproject,\n\tscaleBox,\n\tSegment,\n\tuncenterBox\n} from \"./intersect\";\nimport {autoLayout} from \"./layout\";\nimport {Undo} from \"./undo\";\nimport {\n\tADD_LABEL_VERTEX,\n\tADD_VERTEX,\n\tDEL_VERTEX,\n\tDESELECT,\n\tfindShortcut,\n\tREDO,\n\tSELECT_ALL,\n\tUNDO,\n\tZOOM_100,\n\tZOOM_FIT,\n\tZOOM_IN,\n\tZOOM_OUT\n} from \"../shortcuts\";\n\n\ninterface Point {\n\tx: number;\n\ty: number;\n}\n\ninterface BBox extends Point {\n\twidth: number;\n\theight: number;\n}\n\nexport interface Group extends BBox {\n\tid: string;\n\tname: string;\n\tnodes: (Node | Group)[];\n\tref?: SVGGElement;\n\tstyle: NodeStyle;\n}\n\nexport interface Node extends BBox {\n\tid: string;\n\ttitle: string;\n\tsub: string;\n\tdescription: string;\n\n\tref?: SVGGElement;\n\tselected?: boolean;\n\n\tintersect: (p: Point) => Point\n\n\tstyle: NodeStyle\n}\n\nexport interface NodeStyle {\n\t// Width of element, in pixels.\n\twidth?: number\n\t// Height of element, in pixels.\n\theight?: number\n\t// Background color of element as HTML RGB hex string (e.g. \"#ffffff\")\n\tbackground?: string\n\t// Stroke color of element as HTML RGB hex string (e.g. \"#000000\")\n\tstroke?: string\n\t// Foreground (text) color of element as HTML RGB hex string (e.g. \"#ffffff\")\n\tcolor?: string\n\t// Standard font size used to render text, in pixels.\n\tfontSize?: number\n\t// Shape used to render element.\n\tshape?: string\n\t// URL of PNG/JPG/GIF file or Base64 data URI representation.\n\ticon?: string\n\t// Type of border used to render element.\n\tborder?: string\n\t// Opacity used to render element; 0-100.\n\topacity?: number\n\t// Whether element metadata should be shown.\n\tmetadata?: boolean\n\t// Whether element description should be shown.\n\tdescription?: boolean\n}\n\n// RelationshipStyle defines a relationship style.\nexport interface EdgeStyle {\n\t// Thickness of line, in pixels.\n\tthickness?: number\n\t// Color of line as HTML RGB hex string (e.g. \"#ffffff\").\n\tcolor?: string\n\t// Standard font size used to render relationship annotation, in pixels.\n\tfontSize?: number\n\t// Width of relationship annotation, in pixels.\n\twidth?: number\n\t// Whether line is rendered dashed or not.\n\tdashed?: boolean\n\t// Position of annotation along the line; 0 (start) to 100 (end).\n\tposition?: number\n\t// Opacity used to render line; 0-100.\n\topacity?: number\n\t// Arrow style\n\tarrowStyle?: 'normal' | 'large' | 'small' | 'none'\n}\n\nconst defaultEdgeStyle: EdgeStyle = {\n\tthickness: 3,\n\tcolor: '#999',\n\topacity: 1,\n\tfontSize: 22,\n\tdashed: true,\n}\n\nconst defaultNodeStyle: NodeStyle = {\n\twidth: 280,\n\theight: 180,\n\tbackground: 'rgba(255, 255, 255, .9)',\n\tcolor: '#666',\n\topacity: .9,\n\tstroke: '#999',\n\tfontSize: 22,\n\tshape: 'Box'\n}\n\ninterface Edge {\n\tid: string;\n\tlabel: string;\n\tfrom: Node;\n\tto: Node;\n\tvertices?: EdgeVertex[];\n\tref?: SVGGElement;\n\tstyle: EdgeStyle;\n\tinitVertex: (p: Point) => EdgeVertex\n}\n\ninterface EdgeVertex extends Point {\n\tid: string\n\tselected?: boolean\n\tedge: Edge\n\tref?: SVGElement\n\tlabel?: boolean\n\tauto?: boolean\n}\n\ninterface Layout {\n\t[k: string]: Point | (Point & { label: boolean })[]\n}\n\nexport class GraphData {\n\tid: string;\n\tname: string;\n\tnodesMap: Map<string, Node>;\n\tedges: Edge[];\n\tedgeVertices: Map<string, EdgeVertex>\n\tgroupsMap: Map<string, Group>;\n\tmetadata: any;\n\tprivate _undo: Undo<Layout>;\n\tprivate _gridVisible: boolean = true;\n\tprivate _snapToGrid: boolean = true;\n\tprivate _gridSize: number = 25;\n\tprivate _skipAutoFit: boolean = false;\n\n\tconstructor(id?: string, name?: string) {\n\t\tthis.id = id;\n\t\tthis.name = name;\n\n\t\tthis.edges = [];\n\t\tthis.edgeVertices = new Map;\n\t\tthis.nodesMap = new Map;\n\t\tthis.groupsMap = new Map;\n\n\t\tthis._undo = new Undo<Layout>(\n\t\t\tthis.id,\n\t\t\t() => this.exportLayout(true),\n\t\t\t(lo) => this.importLayout(lo, true)\n\t\t)\n\n\t\t// @ts-ignore\n\t\twindow.graph = this\n\t}\n\n\t// after the graph model is build using addNode, addEdge etc, initialize\n\tinit(layout?: Layout) {\n\t\tlayout && this.importLayout(layout)\n\t\tthis._undo = new Undo<Layout>(\n\t\t\tthis.id,\n\t\t\t() => this.exportLayout(true),\n\t\t\t(lo) => this.importLayout(lo, true)\n\t\t)\n\t\tif (this._undo.length()) {\n\t\t\tthis.importLayout(this._undo.currentState())\n\t\t}\n\t}\n\n\taddNode(id: string, label: string, sub: string, description: string, style: NodeStyle) {\n\t\tif (this.nodesMap.has(id)) throw Error('duplicate node: ' + id)\n\t\t\n\t\t// ALWAYS use fixed dimensions - ignore any width/height from incoming styles\n\t\t// This ensures visual consistency regardless of model data\n\t\tconst shape = style.shape || 'Box';\n\t\tconst isPersonShape = shape.toLowerCase() === 'person';\n\t\tconst isCylinderShape = shape.toLowerCase() === 'cylinder';\n\t\t\n\t\t// Fixed dimensions based only on shape type - completely ignore style.width/height\n\t\tlet width: number;\n\t\tlet height: number;\n\t\t\n\t\tif (isPersonShape) {\n\t\t\twidth = 200;\n\t\t\theight = 240;\n\t\t} else if (isCylinderShape) {\n\t\t\t// Make cylinders wider to better accommodate text content\n\t\t\twidth = 280; // Same width as boxes for consistency\n\t\t\theight = 180; // Same height as boxes for consistency\n\t\t} else {\n\t\t\t// Standard rectangular shapes\n\t\t\twidth = 280;\n\t\t\theight = 180;\n\t\t}\n\t\t\n\t\t// Remove any width/height from style to prevent conflicts\n\t\tconst cleanStyle = {...style};\n\t\tdelete cleanStyle.width;\n\t\tdelete cleanStyle.height;\n\t\t\n\t\tconst n: Node = {\n\t\t\tid, title: label, sub, description, style: {...defaultNodeStyle, ...cleanStyle},\n\t\t\tx: 0, y: 0, width, height, intersect: null\n\t\t}\n\t\t// console.log(label, id, style, {...defaultNodeStyle, ...style})\n\t\tthis.nodesMap.set(n.id, n)\n\t}\n\n\tnodes() {\n\t\treturn Array.from(this.nodesMap.values())\n\t}\n\n\taddEdge(id: string, fromNode: string, toNode: string, label: string, vertices: Point[], style: EdgeStyle) {\n\t\tvertices && vertices.forEach((p, i) => {\n\t\t\tconst v = p as EdgeVertex\n\t\t\tv.id = `v-${id}-${i}`\n\t\t\tthis.edgeVertices.set(v.id, v)\n\t\t})\n\t\tconst randomID = () => Math.round(Math.random() * 1e10).toString(36)\n\t\tconst initVertex = (p: Point) => {\n\t\t\tconst v = p as EdgeVertex\n\t\t\tif (!v.id) {\n\t\t\t\tv.id = `v-${randomID()}`\n\t\t\t\tthis.edgeVertices.set(v.id, v)\n\t\t\t}\n\t\t\tv.edge = edge\n\t\t\treturn p as EdgeVertex\n\t\t}\n\t\tconst edge = {\n\t\t\tid,\n\t\t\tfrom: this.nodesMap.get(fromNode),\n\t\t\tto: this.nodesMap.get(toNode),\n\t\t\tlabel,\n\t\t\tvertices: null as EdgeVertex[],\n\t\t\tstyle: {...defaultEdgeStyle, ...style},\n\t\t\tinitVertex\n\t\t}\n\t\tthis.edges.push(edge)\n\t\tif (vertices) {\n\t\t\tedge.vertices = vertices.map(p => edge.initVertex(p))\n\t\t}\n\t}\n\n\taddGroup(id: string, name: string, nodesOrGroups: string[], style: NodeStyle) {\n\t\tif (this.groupsMap.has(id)) {\n\t\t\tconsole.error(`Group exists: ${id} ${name}`)\n\t\t\treturn\n\t\t}\n\t\tconst group: Group = {\n\t\t\tid, name, x: null, y: null, width: null, height: null,\n\t\t\tnodes: nodesOrGroups.map(k => {\n\t\t\t\tconst n = this.nodesMap.get(k) || this.groupsMap.get(k)\n\t\t\t\tif (!n) console.error(`Node or group ${k} not found for group ${id} \"${name}\"`)\n\t\t\t\treturn n\n\t\t\t}).filter(Boolean),\n\t\t\tstyle\n\t\t}\n\t\tthis.groupsMap.set(id, group)\n\t}\n\n\t// private rebuildNode(node: Node) {\n\t// \tconst p = node.ref.parentElement;\n\t// \tp.removeChild(node.ref)\n\t// \tnode.ref = buildNode(node, this)\n\t// \tp.appendChild(node.ref)\n\t// \tthis.redrawEdges(node)\n\t// \tthis.redrawGroups(node)\n\t// }\n\n\tsetNodeSelected(node: Node, selected: boolean) {\n\t\tnode.selected = selected\n\t\tselected ?\n\t\t\tnode.ref.classList.add('selected') :\n\t\t\tnode.ref.classList.remove('selected')\n\t\tthis.updateEdgesSel()\n\t}\n\n\tprivate updateEdgesSel() {\n\t\tthis.edges.forEach(e => {\n\t\t\tif (e.to.selected || e.from.selected) {\n\t\t\t\te.ref.classList.add('selected')\n\t\t\t} else {\n\t\t\t\te.ref.classList.remove('selected')\n\t\t\t}\n\t\t})\n\t}\n\n\tmoveNode(n: Node, x: number, y: number, disableSnap: boolean = false, skipUndo: boolean = false) {\n\t\tif (!n) return\n\t\t\n\t\t// Apply snap-to-grid if enabled and not explicitly disabled\n\t\tif (this._snapToGrid && !disableSnap) {\n\t\t\tconst snapped = this.snapToGrid(x, y);\n\t\t\tx = snapped.x;\n\t\t\ty = snapped.y;\n\t\t}\n\t\t\n\t\tif (n.x == x && n.y == y) return\n\t\t\n\t\tif (!skipUndo) {\n\t\t\tthis._undo.beforeChange()\n\t\t}\n\t\tn.x = x;\n\t\tn.y = y;\n\t\tsetPosition(n.ref, x, y)\n\t\tthis.redrawEdges(n);\n\t\tthis.redrawGroups(n)\n\t\tif (!skipUndo) {\n\t\t\tthis._undo.change()\n\t\t}\n\t}\n\n\tmoveEdgeVertex(v: EdgeVertex, x: number, y: number, disableSnap: boolean = false, skipUndo: boolean = false) {\n\t\t\n\t\tif (this._snapToGrid && !disableSnap) {\n\t\t\tconst snapped = this.snapToGrid(x, y);\n\t\t\tx = snapped.x;\n\t\t\ty = snapped.y;\n\t\t}\n\t\t// Use exact coordinates (no rounding needed with modern grid system)\n\t\t\n\t\tif (v.x == x && v.y == y) return\n\t\tif (!skipUndo) {\n\t\t\tthis._undo.beforeChange()\n\t\t}\n\t\tv.x = x;\n\t\tv.y = y;\n\t\tthis.redrawEdge(v.edge)\n\t\tif (!skipUndo) {\n\t\t\tthis._undo.change()\n\t\t}\n\t}\n\n\tmoveSelected(dx: number, dy: number, disableSnap: boolean = false) {\n\t\tthis.nodes().forEach(n => n.selected && this.moveNode(n, n.x + dx, n.y + dy, disableSnap, false))\n\t\tthis.edgeVertices.forEach(v => v.selected && this.moveEdgeVertex(v, v.x + dx, v.y + dy, disableSnap, false))\n\t}\n\n\tinsertEdgeVertex(edge: Edge, p: Point, pos: number, isLabel: boolean) {\n\t\tthis._undo.beforeChange()\n\t\tconst v = edge.initVertex(p)\n\t\tv.selected = true\n\t\tif (isLabel) { // when shift down, make it label position\n\t\t\tedge.vertices.forEach(v => v.label = false)\n\t\t\tv.label = true\n\t\t}\n\t\tedge.vertices.splice(pos - 1, 0, v)\n\t\tthis.redrawEdge(edge)\n\t\tthis._undo.change()\n\t}\n\n\tdeleteEdgeVertex(v: EdgeVertex) {\n\t\tthis._undo.beforeChange()\n\t\tif (v.auto) {\n\t\t\tv.auto = true\n\t\t} else {\n\t\t\tv.edge.vertices.splice(v.edge.vertices.indexOf(v), 1)\n\t\t\tthis.edgeVertices.delete(v.id)\n\t\t}\n\t\tthis.redrawEdge(v.edge)\n\t\tthis._undo.change()\n\t}\n\n\tchanged() {\n\t\treturn this._undo.changed()\n\t}\n\n\tundo() {\n\t\tthis._undo.undo()\n\t}\n\n\tredo() {\n\t\tthis._undo.redo()\n\t}\n\n\t// moves the entire graph to be aligned top-left of the drawing area\n\t// used to bring back to visible the nodes that end up at negative coordinates\n\talignTopLeft() {\n\t\tconst contentBounds = this.calculateContentBounds()\n\t\tconst padding = 100 // Reasonable padding for viewport\n\t\t\n\t\tconst offsetX = -contentBounds.x + padding\n\t\tconst offsetY = -contentBounds.y + padding\n\t\t\n\t\t// Set flag to prevent React useEffect from calling fitToView during this operation\n\t\tthis._skipAutoFit = true\n\t\t\n\t\tthis._undo.beforeChange()\n\t\t\n\t\tthis.nodesMap.forEach(node => {\n\t\t\tthis.moveNode(node, node.x + offsetX, node.y + offsetY, true, true) // Disable snap and undo during reset\n\t\t})\n\t\t\n\t\tthis.edgeVertices.forEach(vertex => {\n\t\t\tthis.moveEdgeVertex(vertex, vertex.x + offsetX, vertex.y + offsetY, true, true) // Disable snap and undo during reset\n\t\t})\n\t\t\n\t\tthis._undo.change()\n\t\t\n\t\t// DON'T clear view state here - let resetPanTransform handle it to avoid React useEffect recursion\n\t}\n\t\n\t// Reset pan transform to (0,0) while preserving zoom\n\tresetPanTransform() {\n\t\tconst currentZoom = getZoom()\n\t\tconst zoomGroup = svg.querySelector('g.zoom') as SVGGElement\n\t\tif (zoomGroup) {\n\t\t\tzoomGroup.setAttribute('transform', `scale(${currentZoom}) translate(0, 0)`)\n\t\t\tupdatePanningOptimized(this)\n\t\t}\n\t\t\n\t\t// Clear view state so this reset is not overridden\n\t\tclearViewState(this.id)\n\t\t\n\t\t// Reset the skip auto fit flag after reset is complete\n\t\tthis._skipAutoFit = false\n\t}\n\t\n\t// Check if auto-fit should be skipped (used by React useEffect)\n\tshouldSkipAutoFit(): boolean {\n\t\treturn this._skipAutoFit\n\t}\n\n\t// Reset view to default state: 100% zoom, centered at origin\n\tresetView() {\n\t\tconst zoomGroup = svg.querySelector('g.zoom') as SVGGElement\n\t\tif (zoomGroup) {\n\t\t\t// Reset to 100% zoom, centered at origin\n\t\t\tzoomGroup.setAttribute('transform', 'scale(1) translate(0, 0)')\n\t\t\tupdatePanning()\n\t\t}\n\t\t\n\t\t// Clear any saved view state so this reset position is not overridden\n\t\tclearViewState(this.id)\n\t}\n\n\t//redraw connected edges\n\tprivate redrawEdges(n: Node) {\n\t\tthis.edges.forEach(e => (n == e.from || n == e.to) && this.redrawEdge(e))\n\t\tthis.updateEdgesSel()\n\t}\n\n\tredrawEdge(e: Edge) {\n\t\tconst p = e.ref.parentElement;\n\t\tp.removeChild(e.ref)\n\t\te.ref = buildEdge(this, e)\n\t\tp.append(e.ref)\n\t}\n\n\tprivate redrawGroups(node: Node) {\n\t\tthis.groupsMap.forEach(group => {\n\t\t\t//if (group.nodes.indexOf(node) == -1) return\n\t\t\tconst p = group.ref.parentElement\n\t\t\tp.removeChild(group.ref)\n\t\t\tbuildGroup(group)\n\t\t\tp.append(group.ref)\n\t\t})\n\t}\n\n\texportSVG() {\n\t\t// Get the original SVG\n\t\tconst originalSvg: SVGSVGElement = document.querySelector('svg#graph')\n\t\tconst elastic = originalSvg.querySelector('rect.elastic')\n\t\t\n\t\t// Clone the SVG for export (completely separate from the live one)\n\t\tconst exportSvg = originalSvg.cloneNode(true) as SVGSVGElement\n\t\t\n\t\t// Remove elastic element from export\n\t\tconst exportElastic = exportSvg.querySelector('rect.elastic')\n\t\tif (exportElastic) {\n\t\t\texportElastic.remove()\n\t\t}\n\t\t\n\t\t// Calculate actual content bounds including all elements\n\t\tconst contentBounds = this.calculateContentBounds()\n\t\t\n\t\t// Add padding around content\n\t\tconst padding = 50\n\t\t\n\t\t// Calculate final export dimensions (always positive)\n\t\tconst exportWidth = contentBounds.width + (padding * 2)\n\t\tconst exportHeight = contentBounds.height + (padding * 2)\n\t\t\n\t\t// Calculate offset to move content to start at (padding, padding) within the export area\n\t\tconst offsetX = -contentBounds.x + padding\n\t\tconst offsetY = -contentBounds.y + padding\n\t\t\n\t\t// Apply export positioning to the cloned SVG elements\n\t\tconst exportZoomGroup = exportSvg.querySelector('g.zoom') as SVGGElement\n\t\tif (exportZoomGroup) {\n\t\t\t// Reset zoom to 1 and apply offset transform to position content properly\n\t\t\texportZoomGroup.setAttribute('transform', `scale(1) translate(${offsetX}, ${offsetY})`)\n\t\t}\n\t\t\n\t\t// Set proper viewBox and dimensions for export - viewBox always starts at (0,0)\n\t\texportSvg.setAttribute('viewBox', `0 0 ${exportWidth} ${exportHeight}`)\n\t\texportSvg.setAttribute('width', String(exportWidth))\n\t\texportSvg.setAttribute('height', String(exportHeight))\n\t\t\n\t\t// Add required SVG namespace for browser compatibility\n\t\texportSvg.setAttribute('xmlns', 'http://www.w3.org/2000/svg')\n\t\t\n\t\t// Inject metadata with current layout\n\t\tconst script = document.createElement('script')\n\t\tscript.setAttribute('type', 'application/json')\n\t\tthis.metadata.layout = this.exportLayout()\n\t\tscript.append('<![CDATA[' + escapeCdata(JSON.stringify(this.metadata, null, 2)) + ']]>')\n\t\texportSvg.insertBefore(script, exportSvg.firstChild)\n\t\t\n\t\t// Get the export SVG as string\n\t\tconst src = exportSvg.outerHTML\n\t\t\n\t\t// No restoration needed since we never touched the original SVG!\n\t\treturn src\n\t}\n\n\t// Calculate the actual bounds of all content including nodes, edges, and groups\n\tcalculateContentBounds(): BBox {\n\t\tlet minX = Infinity, minY = Infinity, maxX = -Infinity, maxY = -Infinity\n\t\t\n\t\t// Process nodes (including their actual dimensions)\n\t\tthis.nodes().forEach(node => {\n\t\t\tconst left = node.x - node.width / 2\n\t\t\tconst right = node.x + node.width / 2\n\t\t\tconst top = node.y - node.height / 2\n\t\t\tconst bottom = node.y + node.height / 2\n\t\t\t\n\t\t\tminX = Math.min(minX, left)\n\t\t\tmaxX = Math.max(maxX, right)\n\t\t\tminY = Math.min(minY, top)\n\t\t\tmaxY = Math.max(maxY, bottom)\n\t\t})\n\t\t\n\t\t// Process edge vertices (much faster than complex label calculations)\n\t\tthis.edgeVertices.forEach(vertex => {\n\t\t\tminX = Math.min(minX, vertex.x - 5)\n\t\t\tmaxX = Math.max(maxX, vertex.x + 5)\n\t\t\tminY = Math.min(minY, vertex.y - 5)\n\t\t\tmaxY = Math.max(maxY, vertex.y + 5)\n\t\t})\n\t\t\n\t\t// Process groups\n\t\tthis.groupsMap.forEach(group => {\n\t\t\tconst left = group.x - group.width / 2\n\t\t\tconst right = group.x + group.width / 2\n\t\t\tconst top = group.y - group.height / 2\n\t\t\tconst bottom = group.y + group.height / 2\n\t\t\t\n\t\t\tminX = Math.min(minX, left)\n\t\t\tmaxX = Math.max(maxX, right)\n\t\t\tminY = Math.min(minY, top)\n\t\t\tmaxY = Math.max(maxY, bottom)\n\t\t})\n\t\t\n\t\t// Process edges (simplified - just endpoints and vertices, skip complex label calculations)\n\t\tthis.edges.forEach(edge => {\n\t\t\t// Edge endpoints\n\t\t\tminX = Math.min(minX, edge.from.x - 10, edge.to.x - 10)\n\t\t\tmaxX = Math.max(maxX, edge.from.x + 10, edge.to.x + 10)\n\t\t\tminY = Math.min(minY, edge.from.y - 10, edge.to.y - 10)\n\t\t\tmaxY = Math.max(maxY, edge.from.y + 10, edge.to.y + 10)\n\t\t\t\n\t\t\t// Edge vertices (if any)\n\t\t\tif (edge.vertices) {\n\t\t\t\tedge.vertices.forEach(vertex => {\n\t\t\t\t\tminX = Math.min(minX, vertex.x - 10)\n\t\t\t\t\tmaxX = Math.max(maxX, vertex.x + 10)\n\t\t\t\t\tminY = Math.min(minY, vertex.y - 10)\n\t\t\t\t\tmaxY = Math.max(maxY, vertex.y + 10)\n\t\t\t\t})\n\t\t\t}\n\t\t\t\n\t\t\t// Simplified label bounds (avoid expensive path calculations)\n\t\t\tif (edge.label && edge.label.trim()) {\n\t\t\t\t// Just use approximate center between from and to nodes\n\t\t\t\tconst centerX = (edge.from.x + edge.to.x) / 2\n\t\t\t\tconst centerY = (edge.from.y + edge.to.y) / 2\n\t\t\t\tconst approxLabelSize = edge.label.length * 10 + 50 // Rough estimate\n\t\t\t\t\n\t\t\t\tminX = Math.min(minX, centerX - approxLabelSize)\n\t\t\t\tmaxX = Math.max(maxX, centerX + approxLabelSize)\n\t\t\t\tminY = Math.min(minY, centerY - 25)\n\t\t\t\tmaxY = Math.max(maxY, centerY + 25)\n\t\t\t}\n\t\t})\n\t\t\n\t\t// Handle empty graph\n\t\tif (minX === Infinity) {\n\t\t\treturn { x: 0, y: 0, width: 100, height: 100 }\n\t\t}\n\t\t\n\t\treturn {\n\t\t\tx: minX,\n\t\t\ty: minY,\n\t\t\twidth: maxX - minX,\n\t\t\theight: maxY - minY\n\t\t}\n\t}\n\n\n\n\t/**\n\t * @param full when true, the edges without vertices are saved too, used for undo buffer\n\t *        for saving, full is false\n\t */\n\texportLayout(full = false) {\n\t\tconst ret: Layout = {}\n\t\tthis.nodes().forEach(n => ret[n.id] = {x: n.x, y: n.y})\n\t\tthis.edges.forEach(e => {\n\t\t\tif (!e.vertices) return\n\t\t\tconst lst = e.vertices.filter(v => !v.auto).map(v => ({x: v.x, y: v.y, label: v.label}));\n\t\t\t(lst.length || full) && (ret[`e-${e.id}`] = lst)\n\t\t})\n\t\treturn ret\n\t}\n\n\tsetSaved() {\n\t\tthis._undo.setSaved()\n\t}\n\n\timportLayout(layout: { [key: string]: any }, rerender = false) {\n\t\t// First pass: collect all coordinate values to find bounds\n\t\tconst coordinates: Array<{x: number, y: number}> = [];\n\t\t\n\t\tObject.entries(layout).forEach(([k, v]) => {\n\t\t\tif (!k.startsWith('e-') && v.x !== undefined && v.y !== undefined) {\n\t\t\t\t// Node coordinates\n\t\t\t\tcoordinates.push({x: v.x, y: v.y});\n\t\t\t} else if (k.startsWith('e-') && Array.isArray(v)) {\n\t\t\t\t// Edge vertex coordinates\n\t\t\t\tv.forEach((vertex: any) => {\n\t\t\t\t\tif (vertex.x !== undefined && vertex.y !== undefined) {\n\t\t\t\t\t\tcoordinates.push({x: vertex.x, y: vertex.y});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t\t\n\t\t// Calculate normalization offset if we have coordinates\n\t\tlet offsetX = 0;\n\t\tlet offsetY = 0;\n\t\t\n\t\tif (coordinates.length > 0) {\n\t\t\tconst minX = Math.min(...coordinates.map(c => c.x));\n\t\t\tconst minY = Math.min(...coordinates.map(c => c.y));\n\t\t\t\n\t\t\t// Only normalize if coordinates are problematic (negative or very large)\n\t\t\tif (minX < -100 || minY < -100 || Math.max(...coordinates.map(c => c.x)) > 3000 || Math.max(...coordinates.map(c => c.y)) > 2000) {\n\t\t\t\tconst padding = 50;\n\t\t\t\toffsetX = -minX + padding;\n\t\t\t\toffsetY = -minY + padding;\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Second pass: apply coordinates with normalization\n\t\tObject.entries(layout).forEach(([k, v]) => {\n\t\t\t// nodes\n\t\t\tconst n = this.nodesMap.get(k)\n\t\t\tif (n) {\n\t\t\t\tn.x = v.x + offsetX\n\t\t\t\tn.y = v.y + offsetY\n\t\t\t} else\n\t\t\t\t// edge vertices\n\t\t\tif (k.startsWith('e-')) {\n\t\t\t\tconst edge = this.edges.find(e => e.id == k.slice(2))\n\t\t\t\tif (!edge) return;\n\t\t\t\tedge.vertices && edge.vertices.forEach(v => this.edgeVertices.delete(v.id))\n\t\t\t\tedge.vertices = v.map((p: Point) => {\n\t\t\t\t\tconst normalizedPoint = { \n\t\t\t\t\t\tx: p.x + offsetX, \n\t\t\t\t\t\ty: p.y + offsetY \n\t\t\t\t\t} as Point;\n\t\t\t\t\t// Preserve any additional properties like 'label'\n\t\t\t\t\tObject.assign(normalizedPoint, p, { x: p.x + offsetX, y: p.y + offsetY });\n\t\t\t\t\treturn edge.initVertex(normalizedPoint);\n\t\t\t\t})\n\t\t\t\treturn;\n\t\t\t}\n\t\t})\n\t\tif (rerender) {\n\t\t\tthis.nodes().forEach(n => setPosition(n.ref, n.x, n.y))\n\t\t\tthis.edges.forEach(e => this.redrawEdge(e))\n\t\t\tthis.updateEdgesSel()\n\t\t\tthis.redrawGroups(null)\n\t\t}\n\t}\n\n\tasync autoLayout(options?: import('./layout').LayoutOptions) {\n\t\ttry {\n\t\t\tconst auto = await autoLayout(this, options)\n\t\t\t\n\t\t\tthis._undo.beforeChange()\n\t\t\t\n\t\t\t// Apply node positions\n\t\t\tauto.nodes.forEach(an => {\n\t\t\t\tconst n = this.nodesMap.get(an.id)\n\t\t\t\tif (n) {\n\t\t\t\t\tthis.moveNode(n, an.x, an.y, false, true) // Skip undo for individual moves\n\t\t\t\t}\n\t\t\t})\n\t\t\t\n\t\t\t// Clear existing edge vertices before applying new layout\n\t\t\tthis.edgeVertices.clear()\n\t\t\t\n\t\t\t// Apply edge routing from ELK layout\n\t\t\tauto.edges.forEach(ae => {\n\t\t\t\tconst edge = this.edges.find(e => e.id == ae.id)\n\t\t\t\tif (edge) {\n\t\t\t\t\t// Clear existing vertices\n\t\t\t\t\tedge.vertices = []\n\t\t\t\t\t\n\t\t\t\t\t// Add routing vertices from ELK (these are proper bend points, not nodes)\n\t\t\t\t\tif (ae.vertices && ae.vertices.length > 0) {\n\t\t\t\t\t\tedge.vertices = ae.vertices.map(p => {\n\t\t\t\t\t\t\tconst vertex = edge.initVertex(p)\n\t\t\t\t\t\t\tvertex.auto = true // Mark as auto-generated\n\t\t\t\t\t\t\treturn vertex\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// Handle edge label positioning\n\t\t\t\t\tif (ae.label) {\n\t\t\t\t\t\tconst labelVertex = edge.initVertex(ae.label)\n\t\t\t\t\t\tlabelVertex.label = true\n\t\t\t\t\t\tlabelVertex.auto = true\n\t\t\t\t\t\tedge.vertices.push(labelVertex)\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// Redraw the edge with new routing\n\t\t\t\t\tthis.redrawEdge(edge)\n\t\t\t\t}\n\t\t\t})\n\t\t\t\n\t\t\t// Fit the layout to the viewport with optimal positioning\n\t\t\tthis.fitToView()\n\t\t\t\n\t\t\tthis._undo.change()\n\t\t\t\n\t\t} catch (error) {\n\t\t\tconsole.error('Auto layout failed:', error)\n\t\t\t// Could show user notification here\n\t\t}\n\t}\n\n\talignSelectionV() {\n\t\tconst lst: Point[] = this.nodes().filter(n => n.selected)\n\t\tlst.push(...Array.from(this.edgeVertices.values()).filter(v => v.selected))\n\t\tlet minY = Math.min(...lst.map(p => p.y))\n\t\tthis.nodesMap.forEach(n => n.selected && this.moveNode(n, n.x, minY, false, false))\n\t\tthis.edgeVertices.forEach(v => v.selected && this.moveEdgeVertex(v, v.x, minY, false, false))\n\t}\n\n\talignSelectionH() {\n\t\tconst lst: Point[] = this.nodes().filter(n => n.selected)\n\t\tlst.push(...Array.from(this.edgeVertices.values()).filter(v => v.selected))\n\t\tlet minX = Math.min(...lst.map(p => p.x))\n\t\tthis.nodesMap.forEach(n => n.selected && this.moveNode(n, minX, n.y, false, false))\n\t\tthis.edgeVertices.forEach(v => v.selected && this.moveEdgeVertex(v, minX, v.y, false, false))\n\t}\n\n\tdistributeSelectionH() {\n\t\tconst selectedNodes = this.nodes().filter(n => n.selected)\n\t\tconst selectedVertices = Array.from(this.edgeVertices.values()).filter(v => v.selected)\n\t\t\n\t\tif (selectedNodes.length + selectedVertices.length < 3) return // Need at least 3 elements to distribute\n\t\t\n\t\tthis._undo.beforeChange()\n\t\t\n\t\t// Combine and sort by X coordinate\n\t\tconst allElements = [...selectedNodes, ...selectedVertices]\n\t\tallElements.sort((a, b) => a.x - b.x)\n\t\t\n\t\tconst minX = allElements[0].x\n\t\tconst maxX = allElements[allElements.length - 1].x\n\t\tconst spacing = (maxX - minX) / (allElements.length - 1)\n\t\t\n\t\t// Distribute elements evenly between leftmost and rightmost\n\t\tallElements.forEach((element, index) => {\n\t\t\tconst newX = minX + (index * spacing)\n\t\t\tif ('title' in element) {\n\t\t\t\t// It's a Node\n\t\t\t\tthis.moveNode(element as Node, newX, element.y, false, true)\n\t\t\t} else {\n\t\t\t\t// It's an EdgeVertex\n\t\t\t\tthis.moveEdgeVertex(element as EdgeVertex, newX, element.y, false, true)\n\t\t\t}\n\t\t})\n\t\t\n\t\tthis._undo.change()\n\t}\n\n\tdistributeSelectionV() {\n\t\tconst selectedNodes = this.nodes().filter(n => n.selected)\n\t\tconst selectedVertices = Array.from(this.edgeVertices.values()).filter(v => v.selected)\n\t\t\n\t\tif (selectedNodes.length + selectedVertices.length < 3) return // Need at least 3 elements to distribute\n\t\t\n\t\tthis._undo.beforeChange()\n\t\t\n\t\t// Combine and sort by Y coordinate\n\t\tconst allElements = [...selectedNodes, ...selectedVertices]\n\t\tallElements.sort((a, b) => a.y - b.y)\n\t\t\n\t\tconst minY = allElements[0].y\n\t\tconst maxY = allElements[allElements.length - 1].y\n\t\tconst spacing = (maxY - minY) / (allElements.length - 1)\n\t\t\n\t\t// Distribute elements evenly between topmost and bottommost\n\t\tallElements.forEach((element, index) => {\n\t\t\tconst newY = minY + (index * spacing)\n\t\t\tif ('title' in element) {\n\t\t\t\t// It's a Node\n\t\t\t\tthis.moveNode(element as Node, element.x, newY, false, true)\n\t\t\t} else {\n\t\t\t\t// It's an EdgeVertex\n\t\t\t\tthis.moveEdgeVertex(element as EdgeVertex, element.x, newY, false, true)\n\t\t\t}\n\t\t})\n\t\t\n\t\tthis._undo.change()\n\t}\n\n\t// Set edge selection state\n\tsetEdgeSelected(edge: Edge, selected: boolean) {\n\t\t// Mark the edge as selected by selecting its connected nodes\n\t\tif (selected) {\n\t\t\tthis.setNodeSelected(edge.from, true)\n\t\t\tthis.setNodeSelected(edge.to, true)\n\t\t}\n\t\t// Update visual selection\n\t\tthis.updateEdgesSel()\n\t}\n\n\t// Fit the entire graph to the current viewport\n\tfitToView() {\n\t\tconst contentBounds = this.calculateContentBounds()\n\t\t\n\t\t// Handle edge case where there's no content\n\t\tif (contentBounds.width === 0 || contentBounds.height === 0) {\n\t\t\treturn\n\t\t}\n\t\t\n\t\t// Get viewport dimensions\n\t\tconst viewportWidth = svg.parentElement?.clientWidth || 800\n\t\tconst viewportHeight = svg.parentElement?.clientHeight || 600\n\t\t\n\t\t// Add padding around content\n\t\tconst padding = 40\n\t\t\n\t\t// Calculate zoom to fit content with padding\n\t\tconst zoomX = (viewportWidth - padding * 2) / contentBounds.width\n\t\tconst zoomY = (viewportHeight - padding * 2) / contentBounds.height\n\t\tconst optimalZoom = Math.min(zoomX, zoomY)\n\t\t\n\t\t// Clamp zoom between reasonable bounds\n\t\tconst finalZoom = Math.max(Math.min(optimalZoom, 2), 0.1)\n\t\t\n\t\t// Calculate content center in drawing coordinates\n\t\tconst contentCenterX = contentBounds.x + contentBounds.width / 2\n\t\tconst contentCenterY = contentBounds.y + contentBounds.height / 2\n\t\t\n\t\t// Calculate viewport center in screen coordinates\n\t\tconst viewportCenterX = viewportWidth / 2\n\t\tconst viewportCenterY = viewportHeight / 2\n\t\t\n\t\t// Calculate translation needed to center content in viewport\n\t\t// With translate(x,y) scale(zoom), translation is in screen coordinates\n\t\tconst translateX = viewportCenterX - (contentCenterX * finalZoom)\n\t\tconst translateY = viewportCenterY - (contentCenterY * finalZoom)\n\t\t\n\t\t// Apply zoom and translation transform\n\t\tconst zoomGroup = svg.querySelector('g.zoom') as SVGGElement\n\t\tif (zoomGroup) {\n\t\t\tzoomGroup.setAttribute('transform', `translate(${translateX}, ${translateY}) scale(${finalZoom})`)\n\t\t}\n\t\t\n\t\t// Update panning\n\t\tupdatePanning()\n\t\t\n\t\t// Save view state so this fit position is preserved after reload\n\t\tsaveViewState(this.id)\n\t}\n\n\t// Save current layout state for restoration\n\tprivate saveLayoutState(): Layout {\n\t\treturn this.exportLayout(true) // Include all vertices for complete state\n\t}\n\n\t// Restore layout state\n\tprivate restoreLayoutState(state: Layout) {\n\t\tthis.importLayout(state, true) // Rerender after restoring\n\t}\n\n\t// Grid functionality\n\tisGridVisible(): boolean {\n\t\treturn this._gridVisible;\n\t}\n\n\tisSnapToGrid(): boolean {\n\t\treturn this._snapToGrid;\n\t}\n\n\tgetGridSize(): number {\n\t\treturn this._gridSize;\n\t}\n\n\ttoggleGrid() {\n\t\tthis._gridVisible = !this._gridVisible;\n\t\tthis.updateGridDisplay();\n\t\t// Force toolbar update by dispatching a custom event\n\t\twindow.dispatchEvent(new CustomEvent('gridStateChanged'));\n\t}\n\n\ttoggleSnapToGrid() {\n\t\tthis._snapToGrid = !this._snapToGrid;\n\t\t// Force toolbar update by dispatching a custom event\n\t\twindow.dispatchEvent(new CustomEvent('gridStateChanged'));\n\t}\n\n\tsnapAllToGrid() {\n\t\tif (!this._snapToGrid) return;\n\t\t\n\t\tthis._undo.beforeChange();\n\t\tthis.nodes().forEach(node => {\n\t\t\tconst snappedX = Math.round(node.x / this._gridSize) * this._gridSize;\n\t\t\tconst snappedY = Math.round(node.y / this._gridSize) * this._gridSize;\n\t\t\tthis.moveNode(node, snappedX, snappedY, false, true);\n\t\t});\n\t\tthis._undo.change();\n\t}\n\n\t// Helper method to snap a point to grid\n\tprivate snapToGrid(x: number, y: number): { x: number, y: number } {\n\t\treturn {\n\t\t\tx: Math.round(x / this._gridSize) * this._gridSize,\n\t\t\ty: Math.round(y / this._gridSize) * this._gridSize\n\t\t};\n\t}\n\n\tupdateGridDisplay() {\n\t\tif (!svg) return;\n\n\t\t// Remove existing grid pattern and background\n\t\tconst existingGrid = svg.querySelector('#grid-pattern');\n\t\tif (existingGrid) {\n\t\t\texistingGrid.remove();\n\t\t}\n\n\t\tconst existingGridRect = svg.querySelector('#grid-background');\n\t\tif (existingGridRect) {\n\t\t\texistingGridRect.remove();\n\t\t}\n\n\t\tif (!this._gridVisible) return;\n\n\t\t// Create grid pattern in defs\n\t\tlet defs = svg.querySelector('defs');\n\t\tif (!defs) {\n\t\t\tdefs = document.createElementNS('http://www.w3.org/2000/svg', 'defs');\n\t\t\tsvg.insertBefore(defs, svg.firstChild);\n\t\t}\n\n\t\tconst pattern = document.createElementNS('http://www.w3.org/2000/svg', 'pattern');\n\t\tpattern.id = 'grid-pattern';\n\t\tpattern.setAttribute('width', this._gridSize.toString());\n\t\tpattern.setAttribute('height', this._gridSize.toString());\n\t\tpattern.setAttribute('patternUnits', 'userSpaceOnUse');\n\n\t\tconst path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n\t\tpath.setAttribute('d', `M ${this._gridSize} 0 L 0 0 0 ${this._gridSize}`);\n\t\tpath.setAttribute('fill', 'none');\n\t\tpath.setAttribute('stroke', '#d0d0d0');\n\t\tpath.setAttribute('stroke-width', '1');\n\t\tpath.setAttribute('opacity', '0.8');\n\n\t\tpattern.appendChild(path);\n\t\tdefs.appendChild(pattern);\n\n\t\t// Create grid background rectangle\n\t\tconst rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n\t\trect.id = 'grid-background';\n\t\trect.setAttribute('x', '-10000');\n\t\trect.setAttribute('y', '-10000');\n\t\trect.setAttribute('width', '20000');\n\t\trect.setAttribute('height', '20000');\n\t\trect.setAttribute('fill', 'url(#grid-pattern)');\n\t\trect.setAttribute('pointer-events', 'none');\n\n\t\t// Insert grid as first child of zoom group so it transforms with content\n\t\tconst zoomGroup = svg.querySelector('g.zoom');\n\t\tif (zoomGroup) {\n\t\t\tzoomGroup.insertBefore(rect, zoomGroup.firstChild);\n\t\t}\n\t}\n}\n\nfunction escapeCdata(code: string) {\n\treturn code.replace(/]]>/g, ']]]>]><![CDATA[')\n}\n\n\n\nlet svg: SVGSVGElement = document.querySelector('svg#graph')\nif (!svg) {\n\tsvg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n\tsvg.setAttribute('id', 'graph')\n\tsvg.addEventListener('click', e => clickListener(e))\n\t// addCursorInteraction(svg) // Call will be updated in buildGraph\n}\nsvg.setAttribute('width', '100%')\nsvg.setAttribute('height', '100%')\n\nlet clickListener: (e: MouseEvent) => void\nlet dragging = false;\nlet selectListener: (n: Node) => void\n\n\nexport const buildGraph = (data: GraphData, onNodeSelect: (n: Node) => void, dragMode: 'pan' | 'select') => {\n\t// empty svg\n\tsvg.innerHTML = defs\n\tdocument.body.append(svg) // make sure svg element is connected, we will measure texts sizes\n\t// @ts-ignore\n\tsvg.__data = data\n\n\tselectListener = onNodeSelect\n\n\t//use event delegation\n\tclickListener = e => {\n\t\tif (dragging) {\n\t\t\treturn;\n\t\t}\n\t\t// const el = (e.target as any).closest('.node > .expand');\n\t}\n\n\t_buildGraph(data)\n\tconst elasticEl = create.rect(300, 300, 50, 50, 0, 'elastic')\n\tsvg.append(elasticEl)\n\n\t// Initialize grid display now that the zoom group exists\n\tdata.updateGridDisplay()\n\n\t// Call addCursorInteraction with dragMode\n\taddCursorInteraction(svg, dragMode)\n\n\treturn {\n\t\tsvg,\n\t\tsetZoom,\n\t}\n}\n\nexport const buildGraphView = (data: GraphData) => {\n\tsvg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n\tsvg.setAttribute('id', 'graph')\n\t_buildGraph(data)\n\treturn svg\n}\n\nconst _buildGraph = (data: GraphData) => {\n\t//toplevel groups\n\tconst zoomG = create.element('g', {}, 'zoom') as SVGGElement\n\tconst nodesG = create.element('g', {}, 'nodes') as SVGGElement\n\tconst edgesG = create.element('g', {}, 'edges') as SVGGElement\n\tconst groupsG = create.element('g', {}, 'groups') as SVGGElement\n\tzoomG.append(groupsG, edgesG, nodesG)\n\n\n\tdata.nodesMap.forEach((n) => {\n\t\tbuildNode(n, data)\n\t\tnodesG.append(n.ref)\n\t})\n\n\tdata.edges.forEach(e => {\n\t\tbuildEdge(data, e)\n\t\tedgesG.append(e.ref)\n\t})\n\n\tdata.groupsMap.forEach((group) => {\n\t\tbuildGroup(group)\n\t\tgroupsG.append(group.ref)\n\t})\n\n\tsvg.append(zoomG)\n}\n\nfunction buildEdge(data: GraphData, edge: Edge) {\n\tconst n1 = edge.from, n2 = edge.to;\n\n\tconst g = create.element('g', {}, 'edge') as SVGGElement\n\tg.setAttribute('id', edge.id)\n\tg.setAttribute('data-from', edge.from.id)\n\tg.setAttribute('data-to', edge.to.id)\n\n\tconst position = (edge.style.position || 50) / 100\n\n\t// if vertices exists, follow them\n\tlet vertices: Point[] = edge.vertices ? edge.vertices.concat() : [];\n\t// remove auto vertices, they will be regenerated\n\tconst tmp = (vertices as EdgeVertex[]);\n\ttmp.forEach(v => v.auto && data.edgeVertices.delete(v.id))\n\tvertices = tmp.filter(v => !v.auto)\n\n\tif (vertices.length == 0) {\n\t\t// for edges with same \"from\" and \"to\", we must spread the labels so they don't overlap\n\t\t// lookup the other \"same\" edges\n\t\tconst sameEdges = data.edges.filter(e => e.from == edge.from && e.to == edge.to)\n\t\tlet spreadPos = 0\n\t\tif (sameEdges.length > 1) {\n\t\t\tconst idx = sameEdges.indexOf(edge) // my index in the list of same edges\n\t\t\tspreadPos = idx - (sameEdges.length - 1) / 2\n\n\t\t\tlet spreadX = 0, spreadY = 0;\n\t\t\tif (Math.abs(n1.x - n2.x) > Math.abs(n1.y - n2.y)) {\n\t\t\t\tspreadY = spreadPos * 70\n\t\t\t} else {\n\t\t\t\tspreadX = spreadPos * 200\n\t\t\t}\n\t\t\tconst v = edge.initVertex({\n\t\t\t\tx: (n1.x + n2.x) / 2 + spreadX,\n\t\t\t\ty: (n1.y + n2.y) / 2 + spreadY\n\t\t\t})\n\t\t\tv.label = true\n\t\t\tv.auto = true\n\t\t\tvertices.push(v)\n\t\t} else {\n\t\t\t// If there are no user-defined vertices and not a multi-edge scenario,\n\t\t\t// we don't create any auto-vertices here. AutoLayout will provide them.\n\t\t\t// The path will be a straight line between n1 and n2 (after intersection points are calculated).\n\t\t\t// ELK/autoLayout is responsible for providing bend points for non-straight lines.\n\t\t}\n\t}\n\n\tvertices.unshift(n1)\n\tvertices.push(n2)\n\n\tvertices[0] = n1.intersect(vertices[1])\n\tvertices[vertices.length - 1] = n2.intersect(vertices[vertices.length - 2])\n\n\t// where along the edge is the label?\n\t// position of label\n\tlet pLabel: Point = vertices.find(v => (v as EdgeVertex).label)\n\tif (!pLabel) {\n\t\tconst distance = (p1: Point, p2: Point) =>\n\t\t\tMath.sqrt((p2.x - p1.x) * (p2.x - p1.x) + (p2.y - p1.y) * (p2.y - p1.y))\n\n\t\tlet sum = 0 // total length of the edge, sum of segments\n\t\tfor (let i = 1; i < vertices.length; i++) {\n\t\t\tsum += distance(vertices[i - 1], vertices[i])\n\t\t}\n\t\tpLabel = {x: n1.x, y: n1.y} // fallback for corner cases\n\t\tlet acc = 0\n\t\tfor (let i = 1; i < vertices.length; i++) {\n\t\t\tconst d = distance(vertices[i - 1], vertices[i])\n\t\t\tif (acc + d > sum * position) {\n\t\t\t\tconst pos = (sum * position - acc) / d\n\t\t\t\tpLabel = {\n\t\t\t\t\tx: vertices[i - 1].x + (vertices[i].x - vertices[i - 1].x) * pos,\n\t\t\t\t\ty: vertices[i - 1].y + (vertices[i].y - vertices[i - 1].y) * pos\n\t\t\t\t}\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tacc += d\n\t\t}\n\t}\n\n\tconst {bg, txt, bbox} = buildEdgeLabel(pLabel, edge)\n\tg.append(bg, txt)\n\n\tconst segments: Segment[] = []\n\tfor (let i = 1; i < vertices.length; i++) {\n\t\tsegments.push({p: vertices[i - 1], q: vertices[i]})\n\t}\n\t// splice edge over label box\n\tintersectPolylineBox(segments, bbox)\n\n\t// Generate path based on routing style - SIMPLIFIED\n\tlet path: string\n\t\n\t// Always draw a polyline through the segments.\n\t// If segments.length is 1 (meaning direct connection or only label vertex), it will be a straight line.\n\t// If autoLayout provided bend points, those will be in `segments`.\n\tif (segments.length > 0) {\n\t\tpath = `M${segments[0].p.x},${segments[0].p.y}`\n\t\tfor (let i = 0; i < segments.length; i++) {\n\t\t\tconst s = segments[i]\n\t\t\t// For polylines, we just draw line segments to each vertex point.\n\t\t\t// The ELK 'POLYLINE' routing should give us the necessary bend points.\n\t\t\tpath += ` L${s.q.x},${s.q.y}`\n\t\t}\n\t} else {\n\t\t// Fallback for edges with no segments (should ideally not happen if n1 and n2 are defined)\n\t\t// Draw a straight line between n1 and n2 directly if no vertices/segments exist.\n\t\t// Note: Intersection points are calculated before this, so n1/n2 are already adjusted.\n\t\tpath = `M${n1.x},${n1.y} L${n2.x},${n2.y}`\n\t}\n\n\tconst p = create.path(path, {'marker-end': 'url(#arrow)'}, 'edge')\n\tp.setAttribute('fill', 'none')\n\tp.setAttribute('stroke', edge.style.color)\n\tp.setAttribute('stroke-width', String(edge.style.thickness))\n\tp.setAttribute('stroke-linecap', 'round')\n\tedge.style.dashed && p.setAttribute('stroke-dasharray', '8')\n\tg.append(p)\n\n\t// drag handlers\n\tedge.vertices = vertices.slice(1, -1).map(p => edge.initVertex(p))\n\tedge.vertices.forEach((p, i) => {\n\t\tconst v = p as EdgeVertex\n\t\tv.ref = create.element('circle', {id: v.id, cx: p.x, cy: p.y, r: 7, fill: 'none'}, 'v-dot')\n\t\tv.selected && v.ref.classList.add('selected')\n\t\tv.auto && v.ref.classList.add('auto')\n\t\tg.append(v.ref)\n\t})\n\n\tedge.ref = g\n\treturn g\n}\n\nfunction buildEdgeLabel(pLabel: Point, edge: Edge) {\n\t// label\n\tconst fontSize = edge.style.fontSize\n\tlet {txt, dy, maxW} = create.textArea(edge.label, 200, fontSize, false, pLabel.x, pLabel.y, 'middle')\n\t//move text up to center relative to the edge\n\tdy -= fontSize / 2\n\ttxt.setAttribute('y', String(pLabel.y - dy / 2))\n\n\tmaxW += fontSize\n\tapplyStyle(txt, styles.edgeText)\n\ttxt.setAttribute('stroke', 'none')\n\ttxt.setAttribute('font-size', String(edge.style.fontSize))\n\ttxt.setAttribute('fill', edge.style.color)\n\n\tconst bbox = {x: pLabel.x - maxW / 2, y: pLabel.y - dy / 2, width: maxW, height: dy}\n\tconst bg = create.rect(bbox.width, bbox.height, bbox.x, bbox.y)\n\tapplyStyle(bg, styles.edgeRect)\n\ttxt.setAttribute('data-field', 'label')\n\n\tbbox.x += bbox.width / 2\n\tbbox.y += bbox.height / 2\n\treturn {bg, txt, bbox}\n}\n\n\nfunction buildNode(n: Node, data: GraphData) {\n\t// @ts-ignore\n\twindow.gdata = data\n\n\t// Use the pre-calculated dimensions from addNode\n\tconst w = n.width;\n\tconst h = n.height;\n\n\tconst g = create.element('g', {}, 'node') as SVGGElement\n\tg.setAttribute('id', n.id)\n\tn.selected && g.classList.add('selected')\n\tsetPosition(g, n.x, n.y)\n\n\t// Ensure we use the correct shape from style, defaulting to Box\n\tconst shapeType = n.style.shape || 'Box';\n\tconst shapeFn = shapes[shapeType.toLowerCase()] || shapes.box\n\tconst shape: SVGElement = shapeFn(g, n);\n\n\tshape.classList.add('nodeBorder')\n\n\tapplyStyle(shape, styles.nodeBorder)\n\tshape.setAttribute('fill', n.style.background)\n\tshape.setAttribute('stroke', n.style.stroke)\n\t// Consistent border width for all elements\n\tshape.setAttribute('stroke-width', '3')\n\tshape.setAttribute('opacity', String(n.style.opacity))\n\tsetBorderStyle(shape, n.style.border)\n\n\tconst tg = create.element('g') as SVGGElement\n\tlet cy = Number(g.getAttribute('label-offset-y')) || 0\n\t\n\t// Consistent text width calculation for all shapes\n\tconst textPadding = 12; // Standard padding\n\tconst maxTextWidth = Math.max(w - (textPadding * 2), 80); // Ensure reasonable minimum width\n\t\n\t{\n\t\tconst fontSize = n.style.fontSize\n\t\t// Use 95% of available width for titles - much more aggressive\n\t\tconst {txt, dy} = create.textArea(n.title, maxTextWidth * 0.95, fontSize, true, 0, cy, 'middle')\n\t\tapplyStyle(txt, styles.nodeText)\n\t\ttxt.setAttribute('fill', n.style.color)\n\t\ttxt.setAttribute('data-field', 'name')\n\n\t\ttg.append(txt)\n\t\tcy += dy + 6 // Reduced spacing after title\n\t}\n\t{\n\t\tconst txt = create.text(`[${n.sub}]`, {x: 0, y: cy, 'text-anchor': 'middle'})\n\t\tapplyStyle(txt, styles.nodeText)\n\t\ttxt.setAttribute('fill', n.style.color)\n\t\ttxt.setAttribute('font-size', String(0.75 * n.style.fontSize))\n\t\ttg.append(txt)\n\t\tcy += 12 // Reduced spacing\n\t}\n\t{\n\t\tcy += 6 // Reduced spacing before description\n\t\tconst fontSize = Math.min(n.style.fontSize * 0.8, 16) // Keep smaller description text\n\t\t// Use 95% of available width for descriptions too - much more aggressive\n\t\tconst {txt, dy} = create.textArea(n.description, maxTextWidth * 0.95, fontSize, false, 0, cy, 'middle')\n\t\tapplyStyle(txt, styles.nodeText)\n\t\ttxt.setAttribute('fill', n.style.color)\n\t\ttxt.setAttribute('data-field', 'description')\n\t\ttg.append(txt)\n\t\tcy += dy\n\t}\n\n\t// Better vertical centering with improved padding\n\tsetPosition(tg, 0, -cy / 2)\n\tg.append(tg)\n\n\t// @ts-ignore\n\tg.__data = n;\n\tn.ref = g;\n\n\treturn g\n}\n\n\nfunction buildGroup(group: Group) {\n\tif (group.nodes.length == 0) {\n\t\treturn\n\t}\n\tconst g = create.element('g', {}, 'group') as SVGGElement\n\n\tlet p0: Point = {x: 1e100, y: 1e100}, p1: Point = {x: 0, y: 0}\n\tgroup.nodes.forEach(n => {\n\t\tconst b = {x: n.x - n.width / 2, y: n.y - n.height / 2, width: n.width, height: n.height}\n\t\tp0.x = Math.min(p0.x, b.x)\n\t\tp0.y = Math.min(p0.y, b.y)\n\t\tp1.x = Math.max(p1.x, b.x + b.width)\n\t\tp1.y = Math.max(p1.y, b.y + b.height)\n\t})\n\tconst pad = 25\n\tconst w = Math.max(p1.x - p0.x, 200)\n\tconst h = p1.y - p0.y + pad * 1.5\n\tconst bb = {\n\t\tx: p0.x - pad,\n\t\ty: p0.y - pad,\n\t\twidth: w + pad * 2,\n\t\theight: h + pad * 2,\n\t}\n\tconst r = create.rect(bb.width, bb.height, bb.x, bb.y)\n\tgroup.x = bb.x + bb.width / 2\n\tgroup.y = bb.y + bb.height / 2\n\tgroup.width = bb.width\n\tgroup.height = bb.height\n\tapplyStyle(r, styles.groupRect)\n\tgroup.style.stroke && r.setAttribute('stroke', group.style.stroke)\n\tgroup.style.background && r.setAttribute('fill', group.style.background)\n\n\tconst txt = create.text(group.name, {x: p0.x, y: bb.y + bb.height - styles.groupText[\"font-size\"]})\n\tapplyStyle(txt, styles.groupText)\n\tgroup.style.color && txt.setAttribute('fill', group.style.color)\n\n\tg.append(r, txt)\n\tgroup.ref = g\n}\n\nfunction findClosestSegment(graph: GraphData, p: Point) {\n\t// find the closest point on a segment\n\tlet fnd = {dst: Number.POSITIVE_INFINITY, pos: -1, edge: null as Edge, prj: null as Point}\n\tgraph.edges.forEach(edge => {\n\t\tconst vertices = edge.vertices || []\n\t\tconst pts = [edge.from, ...vertices, edge.to]\n\t\tfor (let i = 1; i < pts.length; i++) {\n\t\t\tconst prj = project(p, pts[i - 1], pts[i])\n\t\t\tconst dst = cabDistance(p, prj)\n\t\t\tif (dst > 50) continue\n\t\t\tif (dst < fnd.dst) {\n\t\t\t\tfnd = {dst, pos: i, prj, edge}\n\t\t\t}\n\t\t}\n\t})\n\treturn fnd.edge ? fnd : null\n}\n\nfunction mouseToDrawing(e: MouseEvent): Point {\n\t// transform event coords to drawing coords\n\tconst b = svg.getBoundingClientRect()\n\tconst z = getZoom()\n\t\n\t// Get current pan transform\n\tconst currentTransform = getCurrentTransform()\n\t\n\t// Convert screen coordinates to drawing coordinates accounting for zoom and pan\n\t// The transform values are in screen coordinates, so we need to divide by zoom and subtract\n\treturn {\n\t\tx: (e.clientX - b.x - currentTransform.x) / z,\n\t\ty: (e.clientY - b.y - currentTransform.y) / z\n\t}\n}\n\ninterface Handle extends Point {\n\tid: string\n\tselected?: boolean\n\tref?: SVGElement\n}\n\n// Custom cursor interaction that prioritizes panning over selection\nfunction addCustomCursorInteraction(svg: SVGSVGElement, conn: {\n\tnodeFromEvent(e: MouseEvent): Handle | null;\n\tsetSelection(handles: Handle[]): void;\n\tsetDragging(dragging: boolean): void;\n\tisSelected(handle: Handle): boolean;\n\tgetSelection(): Handle[];\n\tgetZoom(): number;\n\tmoveNode(h: Handle, x: number, y: number): void;\n\tboxSelection(box: DOMRect, add: boolean): void;\n\tupdatePanning(): void;\n}, dragMode: 'pan' | 'select') {\n\tlet ini: { x: number; y: number; n: Handle }[] = []\n\tlet elastic: any = null\n\tlet isPanning = false\n\tlet panStartX = 0\n\tlet panStartY = 0\n\tlet initialTransform = { x: 0, y: 0 }\n\tlet pendingSelectionChange: { node: Handle; shiftKey: boolean } | null = null\n\tlet hasDragged = false\n\t\n\t// Store event listeners for cleanup\n\tconst eventListeners: Array<{ element: Element | Window, event: string, handler: EventListener }> = []\n\n\t// Simple elastic selection box implementation - use mouseToDrawing for proper coordinate conversion\n\tfunction createElastic() {\n\t\tlet startDrawingX = 0, startDrawingY = 0, rect: SVGRectElement | null = null\n\t\t\n\t\treturn {\n\t\t\tini(e: MouseEvent) {\n\t\t\t\t// Use mouseToDrawing to get proper drawing coordinates (accounts for zoom and pan)\n\t\t\t\tconst pt = mouseToDrawing(e)\n\t\t\t\tstartDrawingX = pt.x\n\t\t\t\tstartDrawingY = pt.y\n\t\t\t\t\n\t\t\t\trect = document.createElementNS(\"http://www.w3.org/2000/svg\", \"rect\")\n\t\t\t\trect.setAttribute('fill', 'rgba(0, 100, 255, 0.1)')\n\t\t\t\trect.setAttribute('stroke', 'rgba(0, 100, 255, 0.5)')\n\t\t\t\trect.setAttribute('stroke-width', '1')\n\t\t\t\trect.setAttribute('stroke-dasharray', '3,3')\n\t\t\t\trect.setAttribute('x', String(startDrawingX))\n\t\t\t\trect.setAttribute('y', String(startDrawingY))\n\t\t\t\trect.setAttribute('width', '0')\n\t\t\t\trect.setAttribute('height', '0')\n\t\t\t\t\n\t\t\t\t// Add to the zoom group so it transforms with the content\n\t\t\t\tconst zoomGroup = svg.querySelector('g.zoom')\n\t\t\t\tif (zoomGroup) {\n\t\t\t\t\tzoomGroup.appendChild(rect)\n\t\t\t\t} else {\n\t\t\t\t\tsvg.appendChild(rect)\n\t\t\t\t}\n\t\t\t},\n\t\t\tupdate(e: MouseEvent) {\n\t\t\t\tif (!rect) return\n\t\t\t\t\n\t\t\t\t// Convert current mouse position to drawing coordinates (accounts for zoom and pan)\n\t\t\t\tconst currentPt = mouseToDrawing(e)\n\t\t\t\tconst currentDrawingX = currentPt.x\n\t\t\t\tconst currentDrawingY = currentPt.y\n\t\t\t\t\n\t\t\t\t// Calculate rectangle bounds in drawing coordinates\n\t\t\t\tconst x = Math.min(startDrawingX, currentDrawingX)\n\t\t\t\tconst y = Math.min(startDrawingY, currentDrawingY)\n\t\t\t\tconst width = Math.abs(currentDrawingX - startDrawingX)\n\t\t\t\tconst height = Math.abs(currentDrawingY - startDrawingY)\n\t\t\t\t\n\t\t\t\trect.setAttribute('x', String(x))\n\t\t\t\trect.setAttribute('y', String(y))\n\t\t\t\trect.setAttribute('width', String(width))\n\t\t\t\trect.setAttribute('height', String(height))\n\t\t\t},\n\t\t\tend(): DOMRect | null {\n\t\t\t\tif (!rect) return null\n\t\t\t\t\n\t\t\t\t// Get final rectangle bounds in drawing coordinates\n\t\t\t\tconst x = parseFloat(rect.getAttribute('x') || '0')\n\t\t\t\tconst y = parseFloat(rect.getAttribute('y') || '0')\n\t\t\t\tconst width = parseFloat(rect.getAttribute('width') || '0')\n\t\t\t\tconst height = parseFloat(rect.getAttribute('height') || '0')\n\t\t\t\t\n\t\t\t\trect.remove()\n\t\t\t\trect = null\n\t\t\t\t\n\t\t\t\t// Return drawing coordinates directly for boxSelection since we're now working in the same coordinate system\n\t\t\t\tif (width > 5 && height > 5) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tx: x, y: y, width: width, height: height,\n\t\t\t\t\t\tleft: x, top: y, right: x + width, bottom: y + height\n\t\t\t\t\t} as DOMRect\n\t\t\t\t}\n\t\t\t\treturn null\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction getCurrentTransformLocal() {\n\t\tconst zoomGroup = svg.querySelector('g.zoom') as SVGGElement\n\t\tif (!zoomGroup) return { x: 0, y: 0 }\n\t\t\n\t\tconst transform = zoomGroup.getAttribute('transform') || ''\n\t\tconst translateMatch = transform.match(/translate\\(([^,]+),([^)]+)\\)/)\n\t\tif (translateMatch) {\n\t\t\treturn {\n\t\t\t\tx: parseFloat(translateMatch[1]) || 0,\n\t\t\t\ty: parseFloat(translateMatch[2]) || 0\n\t\t\t}\n\t\t}\n\t\treturn { x: 0, y: 0 }\n\t}\n\n\tfunction setTransform(x: number, y: number) {\n\t\tconst zoomGroup = svg.querySelector('g.zoom') as SVGGElement\n\t\tif (!zoomGroup) return\n\t\t\n\t\tconst zoom = getZoom()\n\t\tzoomGroup.setAttribute('transform', `translate(${x}, ${y}) scale(${zoom})`)\n\t}\n\n\tfunction onMouseDown(e: MouseEvent) {\n\t\te.preventDefault(); \n\t\thasDragged = false\n\t\tpendingSelectionChange = null\n\n\t\tconst node = conn.nodeFromEvent(e)\n\t\t\n\t\tif (!node) { // Clicked on empty space\n\t\t\tif (dragMode === 'pan') {\n\t\t\t\t// Pan mode: pan and deselect\n\t\t\t\tisPanning = true;\n\t\t\t\telastic = null;\n\t\t\t\tpanStartX = e.clientX;\n\t\t\t\tpanStartY = e.clientY;\n\t\t\t\tinitialTransform = getCurrentTransformLocal();\n\t\t\t\tini = [];\n\t\t\t\t// Deselect all elements when clicking empty space in pan mode\n\t\t\t\tconn.setSelection([]);\n\t\t\t} else {\n\t\t\t\t// Select mode: ONLY select, no panning\n\t\t\t\tisPanning = false;\n\t\t\t\telastic = createElastic();\n\t\t\t\tif (elastic) elastic.ini(e);\n\t\t\t\tini = [];\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t// Clicked on a node/vertex - selection/drag logic (works in both modes)\n\t\tisPanning = false; // Ensure no panning if a node is clicked\n\t\telastic = null; // Ensure no selection box if a node is clicked\n\t\tconst nodes = conn.getSelection()\n\t\t\n\t\tif (e.shiftKey) {\n\t\t\t// Shift+click: immediately change selection (no dragging expected)\n\t\t\tif (conn.isSelected(node)) {\n\t\t\t\tconst index = nodes.findIndex(n => n.id === node.id)\n\t\t\t\tif (index >= 0) nodes.splice(index, 1)\n\t\t\t} else {\n\t\t\t\tnodes.push(node)\n\t\t\t}\n\t\t\tconn.setSelection(nodes)\n\t\t\tini = nodes.map(n => ({ x: n.x, y: n.y, n }))\n\t\t} else {\n\t\t\t// Regular click: defer selection change until we know if it's a drag or click\n\t\t\tif (conn.isSelected(node) && nodes.length > 1) {\n\t\t\t\t// Clicking on a selected node in a multi-selection - prepare to drag all\n\t\t\t\tini = nodes.map(n => ({ x: n.x, y: n.y, n }))\n\t\t\t\t// Don't change selection yet - wait to see if user drags\n\t\t\t} else if (!conn.isSelected(node)) {\n\t\t\t\t// Clicking on an unselected node - defer selection change\n\t\t\t\tpendingSelectionChange = { node, shiftKey: e.shiftKey }\n\t\t\t\t// For now, prepare to drag just this node\n\t\t\t\tini = [{ x: node.x, y: node.y, n: node }]\n\t\t\t} else {\n\t\t\t\t// Clicking on the only selected node - prepare to drag it\n\t\t\t\tini = [{ x: node.x, y: node.y, n: node }]\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction onMouseMove(e: MouseEvent, dx: number, dy: number) {\n\t\t// Check if we've moved enough to consider this a drag\n\t\tconst dragThreshold = 3 // pixels\n\t\tif (!hasDragged && (Math.abs(dx) > dragThreshold || Math.abs(dy) > dragThreshold)) {\n\t\t\thasDragged = true\n\t\t\t\n\t\t\t// If we have a pending selection change and we're now dragging, apply it\n\t\t\tif (pendingSelectionChange) {\n\t\t\t\tconst nodes = conn.getSelection()\n\t\t\t\tnodes.length = 0\n\t\t\t\tnodes.push(pendingSelectionChange.node)\n\t\t\t\tconn.setSelection(nodes)\n\t\t\t\tini = [{ x: pendingSelectionChange.node.x, y: pendingSelectionChange.node.y, n: pendingSelectionChange.node }]\n\t\t\t\tpendingSelectionChange = null\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (isPanning) {\n\t\t\t// Pan the view - apply mouse delta directly (no zoom division needed)\n\t\t\t// setTransform expects screen coordinates, dx/dy are already screen pixel deltas\n\t\t\tconst newX = initialTransform.x + dx\n\t\t\tconst newY = initialTransform.y + dy\n\t\t\tsetTransform(newX, newY)\n\t\t} else if (ini.length > 0 && hasDragged) {\n\t\t\t// Move selected nodes/vertices (only if we've actually started dragging)\n\t\t\t// dx, dy are screen pixel deltas, convert to drawing coordinate deltas\n\t\t\tconst zoom = conn.getZoom()\n\t\t\tconst drawingDx = dx / zoom\n\t\t\tconst drawingDy = dy / zoom\n\t\t\tini.forEach(item => {\n\t\t\t\t// item.x, item.y are initial drawing coordinates\n\t\t\t\t// Add the drawing coordinate delta to get new position\n\t\t\t\tconn.moveNode(item.n, item.x + drawingDx, item.y + drawingDy)\n\t\t\t})\n\t\t\tconn.setDragging(true)\n\t\t} else if (elastic) {\n\t\t\t// Update selection box\n\t\t\telastic.update(e)\n\t\t\tconn.setDragging(true)\n\t\t}\n\t}\n\n\tfunction onMouseUp(e: MouseEvent) {\n\t\tconn.setDragging(false)\n\t\t\n\t\t// If we have a pending selection change and didn't drag, apply it now (it was just a click)\n\t\tif (pendingSelectionChange && !hasDragged) {\n\t\t\tconst nodes = conn.getSelection()\n\t\t\tnodes.length = 0\n\t\t\tnodes.push(pendingSelectionChange.node)\n\t\t\tconn.setSelection(nodes)\n\t\t}\n\t\t\n\t\tif (elastic) {\n\t\t\tconst box = elastic.end()\n\t\t\tif (box) {\n\t\t\t\tconn.boxSelection(box, e.shiftKey)\n\t\t\t} else if (!ini.length) {\n\t\t\t\t// Deselect if no box was drawn\n\t\t\t\tconn.setSelection([])\n\t\t\t}\n\t\t\telastic = null\n\t\t}\n\t\t\n\t\t// Save view state if user was panning (user-initiated view change)\n\t\tif (isPanning && hasDragged) {\n\t\t\tconst graphData = (svg as any).__data as GraphData\n\t\t\tif (graphData && graphData.id) {\n\t\t\t\tsaveViewState(graphData.id)\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Reset state\n\t\tpendingSelectionChange = null\n\t\thasDragged = false\n\t\tisPanning = false\n\t\tconn.updatePanning()\n\t}\n\n\t// Add drag and drop functionality\n\tfunction addDnd(element: SVGSVGElement) {\n\t\tlet md: { ex: number; ey: number } | null = null\n\n\t\tfunction convertEvent(e: MouseEvent | TouchEvent): MouseEvent {\n\t\t\tif ('changedTouches' in e && e.changedTouches) {\n\t\t\t\treturn e.changedTouches[0] as any\n\t\t\t}\n\t\t\treturn e as MouseEvent\n\t\t}\n\n\t\tfunction onMouseMoveHandler(e: MouseEvent | TouchEvent) {\n\t\t\tif (!md) return\n\t\t\te = convertEvent(e)\n\t\t\tonMouseMove(e, e.clientX - md.ex, e.clientY - md.ey)\n\t\t}\n\n\t\tfunction removeListeners() {\n\t\t\tdocument.removeEventListener('touchmove', onMouseMoveHandler as any)\n\t\t\tdocument.removeEventListener('mousemove', onMouseMoveHandler as any)\n\t\t\tdocument.removeEventListener('mouseup', onMouseUpHandler)\n\t\t\tdocument.removeEventListener('touchend', onMouseUpHandler)\n\t\t}\n\n\t\tfunction onMouseUpHandler(e: MouseEvent | TouchEvent) {\n\t\t\tremoveListeners()\n\t\t\tonMouseUp(convertEvent(e))\n\t\t\tmd = null\n\t\t}\n\n\t\tfunction onMouseDownHandler(e: MouseEvent | TouchEvent) {\n\t\t\te = convertEvent(e)\n\t\t\tmd = { ex: e.clientX, ey: e.clientY }\n\t\t\tonMouseDown(e)\n\t\t\tdocument.addEventListener('touchmove', onMouseMoveHandler as any)\n\t\t\tdocument.addEventListener('mousemove', onMouseMoveHandler as any)\n\t\t\tdocument.addEventListener('mouseup', onMouseUpHandler)\n\t\t\tdocument.addEventListener('touchend', onMouseUpHandler)\n\t\t}\n\n\t\telement.addEventListener('mousedown', onMouseDownHandler as any)\n\t\telement.addEventListener('touchstart', onMouseDownHandler as any)\n\t\t\n\t\t// Track these listeners for cleanup\n\t\teventListeners.push(\n\t\t\t{ element, event: 'mousedown', handler: onMouseDownHandler as any },\n\t\t\t{ element, event: 'touchstart', handler: onMouseDownHandler as any }\n\t\t)\n\t}\n\n\taddDnd(svg)\n\t\n\t// Return cleanup function\n\treturn () => {\n\t\teventListeners.forEach(({ element, event, handler }) => {\n\t\t\telement.removeEventListener(event, handler)\n\t\t})\n\t}\n}\n\nexport function addCursorInteraction(svg: SVGSVGElement, dragMode: 'pan' | 'select') {\n\t// Clean up any existing event listeners to prevent conflicts\n\tconst existingCleanup = (svg as any).__cursorInteractionCleanup\n\tif (existingCleanup) {\n\t\texistingCleanup()\n\t}\n\n\tfunction getData(el: SVGElement) {\n\t\t// @ts-ignore\n\t\treturn el.__data\n\t}\n\n\tconst gd = () => (getData(svg) as GraphData)\n\t\n\t// Store event listeners for cleanup\n\tconst eventListeners: Array<{ element: Element | Window, event: string, handler: EventListener }> = []\n\n\tconst beforeUnloadHandler = (e: BeforeUnloadEvent) => {\n\t\tif (!gd().changed()) return\n\t\te.preventDefault()\n\t\te.returnValue = ''\n\t}\n\twindow.addEventListener(\"beforeunload\", beforeUnloadHandler)\n\teventListeners.push({ element: window, event: 'beforeunload', handler: beforeUnloadHandler })\n\n\tfunction setDotSelected(d: Handle, selected: boolean) {\n\t\td.selected = selected\n\t\tconst dotEl = svg.querySelector('#' + d.id)\n\t\td.selected ? dotEl.classList.add('selected') : dotEl.classList.remove('selected')\n\t}\n\n\t// show moving dot along edge when ALT is pressed\n\tconst mouseMoveHandler = (e: MouseEvent) => {\n\t\tif (!e.altKey) return\n\t\tconst fnd = findClosestSegment(gd(), mouseToDrawing(e))\n\t\tif (fnd) {\n\t\t\tconst {prj} = fnd\n\t\t\tconst parent = svg.querySelector('g.edges')\n\t\t\tlet dot = parent.querySelector('#prj')\n\t\t\tif (!dot) {\n\t\t\t\tdot = create.element('circle', {id: 'prj', cx: prj.x, cy: prj.y, r: 7})\n\t\t\t\tparent.append(dot)\n\t\t\t}\n\t\t\tdot.setAttribute('cx', String(prj.x))\n\t\t\tdot.setAttribute('cy', String(prj.y))\n\t\t} else {\n\t\t\tremovePrjDot()\n\t\t}\n\t}\n\tsvg.addEventListener('mousemove', mouseMoveHandler)\n\teventListeners.push({ element: svg, event: 'mousemove', handler: mouseMoveHandler })\n\n\tconst keyUpHandler = (e: KeyboardEvent) => {\n\t\tconst key = findShortcut(e, true)\n\t\tif (key == ADD_VERTEX || key == ADD_LABEL_VERTEX) return\n\t\tremovePrjDot()\n\t}\n\twindow.addEventListener('keyup', keyUpHandler)\n\teventListeners.push({ element: window, event: 'keyup', handler: keyUpHandler })\n\n\tfunction removePrjDot() {\n\t\tconst el = svg.querySelector('g.edges #prj')\n\t\tel && el.parentElement.removeChild(el)\n\t}\n\n\tconst clickHandler = (e: MouseEvent) => {\n\t\tconst key = findShortcut(e, true)\n\t\tif (key != ADD_LABEL_VERTEX && key != ADD_VERTEX) return\n\t\tconst fnd = findClosestSegment(gd(), mouseToDrawing(e))\n\t\tif (fnd) {\n\t\t\tconst {edge, pos, prj} = fnd\n\t\t\t// depending on keyboard modifier, make it label position\n\t\t\tgd().insertEdgeVertex(edge, prj, pos, key == ADD_LABEL_VERTEX)\n\t\t\tremovePrjDot()\n\t\t}\n\t}\n\tsvg.addEventListener('click', clickHandler)\n\teventListeners.push({ element: svg, event: 'click', handler: clickHandler })\n\n\tconst wheelHandler = (e: WheelEvent) => {\n\t\t// Handle wheel zoom directly without relying on shortcuts\n\t\t// deltaY > 0 means scrolling down (zoom out), deltaY < 0 means scrolling up (zoom in)\n\t\tconst delta = Math.sign(e.deltaY) * 0.1 // Normalize to 0.1 zoom steps\n\t\tconst currentZoom = getZoom()\n\t\tconst newZoom = Math.max(0.1, Math.min(5, currentZoom - delta)) // Clamp zoom between 0.1 and 5\n\t\t\n\t\tif (newZoom !== currentZoom) {\n\t\t\t// Convert absolute screen coordinates to SVG-relative coordinates\n\t\t\tconst rect = svg.getBoundingClientRect()\n\t\t\tconst svgX = e.clientX - rect.left\n\t\t\tconst svgY = e.clientY - rect.top\n\t\t\tsetZoomCentered(newZoom, svgX, svgY)\n\t\t\te.preventDefault()\n\t\t\t\n\t\t\t// Save view state after user wheel zoom\n\t\t\tconst graphData = (svg as any).__data as GraphData\n\t\t\tif (graphData && graphData.id) {\n\t\t\t\tsaveViewState(graphData.id)\n\t\t\t}\n\t\t}\n\t}\n\tsvg.addEventListener('wheel', wheelHandler)\n\teventListeners.push({ element: svg, event: 'wheel', handler: wheelHandler })\n\n\tconst keyDownHandler = (e: KeyboardEvent) => {\n\t\tconst shortcut = findShortcut(e)\n\t\tif (shortcut) {\n\t\t\te.preventDefault() // Prevent browser default for all recognized shortcuts\n\t\t}\n\t\t\n\t\tswitch (shortcut) {\n\t\t\tcase DEL_VERTEX:\n\t\t\t\tArray.from(gd().edgeVertices.values()).filter(v => v.selected).forEach(v => {\n\t\t\t\t\tgd().deleteEdgeVertex(v)\n\t\t\t\t})\n\t\t\t\tbreak\n\t\t\tcase UNDO:\n\t\t\t\tgd().undo()\n\t\t\t\tbreak\n\t\t\tcase REDO:\n\t\t\t\tgd().redo()\n\t\t\t\tbreak\n\t\t\tcase ZOOM_IN:\n\t\t\t\tconst newZoomIn = Math.min(5, getZoom() * 1.2)\n\t\t\t\t// Center zoom on viewport center like mouse wheel\n\t\t\t\tsetZoomCentered(newZoomIn)\n\t\t\t\tsaveViewState(gd().id) // Save after user keyboard zoom\n\t\t\t\tbreak\n\t\t\tcase ZOOM_OUT:\n\t\t\t\tconst newZoomOut = Math.max(0.1, getZoom() / 1.2)\n\t\t\t\t// Center zoom on viewport center like mouse wheel\n\t\t\t\tsetZoomCentered(newZoomOut)\n\t\t\t\tsaveViewState(gd().id) // Save after user keyboard zoom\n\t\t\t\tbreak\n\t\t\tcase ZOOM_100:\n\t\t\t\t// Center zoom on viewport center like mouse wheel\n\t\t\t\tsetZoomCentered(1)\n\t\t\t\tsaveViewState(gd().id) // Save after user keyboard zoom\n\t\t\t\tbreak\n\t\t\tcase ZOOM_FIT:\n\t\t\t\tgd().fitToView()\n\t\t\t\t// Don't save view state here - fitToView should not be persisted\n\t\t\t\tbreak\n\t\t\tcase SELECT_ALL:\n\t\t\t\tgd().nodes().forEach(n => gd().setNodeSelected(n, true))\n\t\t\t\tgd().edgeVertices.forEach(v => setDotSelected(v, true))\n\t\t\t\tbreak\n\t\t\tcase DESELECT:\n\t\t\t\tgd().nodes().forEach(n => gd().setNodeSelected(n, false))\n\t\t\t\tgd().edgeVertices.forEach(v => setDotSelected(v, false))\n\t\t\t\tbreak\n\t\t}\n\t}\n\twindow.addEventListener('keydown', keyDownHandler)\n\teventListeners.push({ element: window, event: 'keydown', handler: keyDownHandler })\n\n\t// Custom cursor interaction with pan-first behavior\n\tconst customInteractionCleanup = addCustomCursorInteraction(svg, {\n\t\tnodeFromEvent(e: MouseEvent): Handle {\n\t\t\te.preventDefault()\n\t\t\t// node clicked\n\t\t\tlet el = (e.target as SVGElement).closest('g.nodes g.node') as SVGElement\n\t\t\tif (el) return getData(el)\n\t\t\t// vertex dot clicked\n\t\t\tel = (e.target as SVGElement).closest('g.edges g.edge .v-dot') as SVGElement\n\t\t\tif (el) {\n\t\t\t\treturn gd().edgeVertices.get(el.id)\n\t\t\t}\n\t\t\treturn null\n\t\t},\n\t\tsetSelection(handles: Handle[]) {\n\t\t\t// nodes\n\t\t\tgd().nodes().forEach(n => gd().setNodeSelected(n, handles.some(h => h.id == n.id)))\n\t\t\t// dots\n\t\t\tgd().edgeVertices.forEach(d => setDotSelected(d, handles.some(h => h.id == d.id)))\n\t\t\tselectListener(gd().nodes().find(n => n.selected))\n\t\t},\n\t\tsetDragging(d: boolean) {\n\t\t\tdragging = d\n\t\t},\n\t\tisSelected(handle: Handle): boolean {\n\t\t\treturn handle.selected\n\t\t},\n\t\tgetSelection(): Handle[] {\n\t\t\tconst ret: Handle[] = gd().nodes().filter(n => n.selected)\n\t\t\tgd().edgeVertices.forEach(d => d.selected && ret.push(d))\n\t\t\treturn ret\n\t\t},\n\t\tgetZoom: getZoom,\n\t\tmoveNode(h: Handle, x: number, y: number) {\n\t\t\tif (gd().nodesMap.has(h.id))\n\t\t\t\tgd().moveNode(h as Node, x, y)\n\t\t\telse {\n\t\t\t\t(h as EdgeVertex).auto = false\n\t\t\t\tgd().moveEdgeVertex(h as EdgeVertex, x, y)\n\t\t\t}\n\t\t},\n\t\tboxSelection(box: DOMRect, add) {\n\t\t\t// Box is now already in drawing coordinates, no need to scale\n\t\t\t// nodes\n\t\t\tgd().nodesMap.forEach(n => {\n\t\t\t\tconst inBox = boxesOverlap(uncenterBox(n), box)\n\t\t\t\tif (inBox) {\n\t\t\t\t\t// Toggle selection for elements in the box\n\t\t\t\t\tgd().setNodeSelected(n, !n.selected)\n\t\t\t\t} else if (!add) {\n\t\t\t\t\t// If not holding shift and element is outside box, deselect it\n\t\t\t\t\tgd().setNodeSelected(n, false)\n\t\t\t\t}\n\t\t\t})\n\t\t\t// dots\n\t\t\tgd().edgeVertices.forEach(d => {\n\t\t\t\tconst inBox = insideBox(d, box, false)\n\t\t\t\tif (inBox) {\n\t\t\t\t\t// Toggle selection for elements in the box\n\t\t\t\t\tsetDotSelected(d, !d.selected)\n\t\t\t\t} else if (!add) {\n\t\t\t\t\t// If not holding shift and element is outside box, deselect it\n\t\t\t\t\tsetDotSelected(d, false)\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tselectListener(gd().nodes().find(n => n.selected))\n\t\t},\n\t\tupdatePanning: updatePanning,\n\t}, dragMode)\n\t\n\t// Store cleanup function on the SVG element for later use\n\tconst cleanup = () => {\n\t\teventListeners.forEach(({ element, event, handler }) => {\n\t\t\telement.removeEventListener(event, handler)\n\t\t})\n\t\tif (customInteractionCleanup) {\n\t\t\tcustomInteractionCleanup()\n\t\t}\n\t}\n\t\n\t// Store cleanup function on SVG element\n\t;(svg as any).__cursorInteractionCleanup = cleanup\n}\n\nexport function getZoom() {\n\tif (!svg) return 1\n\tconst el = svg.querySelector('g.zoom') as SVGGElement\n\tif (!el) return 1\n\t\n\t// Parse zoom from transform attribute to match how we set it\n\tconst transform = el.getAttribute('transform') || ''\n\tconst scaleMatch = transform.match(/scale\\(([^)]+)\\)/)\n\tif (scaleMatch) {\n\t\treturn parseFloat(scaleMatch[1]) || 1\n\t}\n\treturn 1\n}\n\nconst svgPadding = 20\n\nexport function setZoom(zoom: number) {\n\tif (!svg) return\n\tconst el = svg.querySelector('g.zoom') as SVGGElement\n\tif (!el) return\n\t\n\t// Preserve existing translation when setting zoom\n\tconst currentTransform = getCurrentTransform()\n\tel.setAttribute('transform', `translate(${currentTransform.x}, ${currentTransform.y}) scale(${zoom})`)\n\t\n\t// also set panning size\n\tupdatePanning()\n}\n\nexport function setZoomCentered(newZoom: number, centerX?: number, centerY?: number) {\n\tconst el = svg.querySelector('g.zoom') as SVGGElement\n\tconst oldZoom = getZoom()\n\t\n\t// If no center point provided, use viewport center\n\tif (centerX === undefined || centerY === undefined) {\n\t\t// Use the parent container's dimensions for the visible viewport\n\t\t// The SVG might be larger than the visible area due to overflow\n\t\tconst container = svg.parentElement\n\t\tif (container) {\n\t\t\tcenterX = container.clientWidth / 2\n\t\t\tcenterY = container.clientHeight / 2\n\t\t} else {\n\t\t\t// Fallback to SVG dimensions if no parent\n\t\t\tcenterX = svg.clientWidth / 2\n\t\t\tcenterY = svg.clientHeight / 2\n\t\t}\n\t}\n\t\n\t// Get current transform\n\tconst currentTransform = getCurrentTransform()\n\t\n\t// Convert screen coordinates to drawing coordinates\n\t// For transform order translate(tx, ty) scale(s):\n\t// screen_point = (drawing_point * scale) + translation\n\t// So: drawing_point = (screen_point - translation) / scale\n\tconst drawingX = (centerX - currentTransform.x) / oldZoom\n\tconst drawingY = (centerY - currentTransform.y) / oldZoom\n\t\n\t// Calculate new translation to keep the same drawing point at the same screen position\n\t// screen_point = (drawing_point * new_scale) + new_translation\n\t// So: new_translation = screen_point - (drawing_point * new_scale)\n\tconst newTranslateX = centerX - (drawingX * newZoom)\n\tconst newTranslateY = centerY - (drawingY * newZoom)\n\t\n\t// Apply the new transform\n\tel.setAttribute('transform', `translate(${newTranslateX}, ${newTranslateY}) scale(${newZoom})`)\n\t\n\t// Update panning\n\tupdatePanning()\n}\n\nfunction getCurrentTransform() {\n\tif (!svg) return { x: 0, y: 0 }\n\tconst el = svg.querySelector('g.zoom') as SVGGElement\n\tif (!el) return { x: 0, y: 0 }\n\t\n\tconst transform = el.getAttribute('transform') || ''\n\tconst translateMatch = transform.match(/translate\\(([^,]+),([^)]+)\\)/)\n\tif (translateMatch) {\n\t\treturn {\n\t\t\tx: parseFloat(translateMatch[1]) || 0,\n\t\t\ty: parseFloat(translateMatch[2]) || 0\n\t\t}\n\t}\n\treturn { x: 0, y: 0 }\n}\n\nfunction updatePanning() {\n\tif (!svg) return\n\tconst el = svg.querySelector('g.zoom') as SVGGElement\n\tif (!el) return\n\tconst bb = el.getBBox()\n\tconst zoom = getZoom()\n\tif (!svg.parentElement) return\n\tconst w = Math.max(svg.parentElement.clientWidth / zoom, bb.x + bb.width + svgPadding)\n\tconst h = Math.max(svg.parentElement.clientHeight / zoom, bb.y + bb.height + svgPadding)\n\tsvg.setAttribute('width', String(w * zoom))\n\tsvg.setAttribute('height', String(h * zoom))\n\t\n\t// Note: View state saving removed from here to prevent interference with reset/fit functions\n\t// View state is now only saved on user interactions and page unload\n}\n\n// Optimized version that uses pre-calculated content bounds instead of expensive getBBox()\nfunction updatePanningOptimized(graphData: GraphData) {\n\tconst bb = graphData.calculateContentBounds() // Use already calculated bounds\n\tconst zoom = getZoom()\n\tconst w = Math.max(svg.parentElement.clientWidth / zoom, bb.x + bb.width + svgPadding)\n\tconst h = Math.max(svg.parentElement.clientHeight / zoom, bb.y + bb.height + svgPadding)\n\tsvg.setAttribute('width', String(w * zoom))\n\tsvg.setAttribute('height', String(h * zoom))\n}\n\nexport const getZoomAuto = () => {\n\t// Get the graph data to calculate proper content bounds\n\tconst graphData = (svg as any).__data as GraphData\n\tif (!graphData) {\n\t\treturn 1 // Default zoom if no graph data\n\t}\n\t\n\t// Use proper content bounds calculation\n\tconst contentBounds = graphData.calculateContentBounds()\n\tconst viewportWidth = svg.parentElement?.clientWidth || 800\n\tconst viewportHeight = svg.parentElement?.clientHeight || 600\n\t\n\t// Add padding around content\n\tconst padding = 40\n\t\n\t// Calculate zoom to fit content with padding\n\tconst zoomX = (viewportWidth - padding * 2) / contentBounds.width\n\tconst zoomY = (viewportHeight - padding * 2) / contentBounds.height\n\tconst zoom = Math.min(zoomX, zoomY)\n\t\n\t// Clamp zoom between reasonable bounds\n\treturn Math.max(Math.min(zoom, 2), 0.1)\n}\n\nconst setBorderStyle = (el: SVGElement, style: string) => {\n\tif (style == 'Dashed') el.setAttribute('stroke-dasharray', '4')\n\telse if (style == 'Dotted') el.setAttribute('stroke-dasharray', '2')\n}\n\nconst styles = {\n\t//node styles\n\tnodeBorder: {\n\t\tfill: \"rgba(255, 255, 255, 0.86)\",\n\t\tstroke: \"#aaa\",\n\t\tfilter: 'url(#shadow)',\n\t},\n\tnodeText: {\n\t\t'font-family': 'Arial, sans-serif',\n\t\tstroke: \"none\"\n\t},\n\n\t//edge styles\n\tedgeText: {\n\t\t'font-family': 'Arial, sans-serif',\n\t\tstroke: \"none\"\n\t},\n\n\tedgeRect: {\n\t\tfill: \"none\",\n\t\tstroke: \"none\",\n\t},\n\n\t//group styles\n\tgroupRect: {\n\t\t//fill: \"none\",\n\t\tfill: \"rgba(0, 0, 0, 0.02)\",\n\t\tstroke: \"#666\",\n\t\t'stroke-width': 3,\n\t\t\"stroke-dasharray\": 4,\n\t},\n\tgroupText: {\n\t\tfill: \"#666\",\n\t\t\"font-size\": 22,\n\t\tcursor: \"default\"\n\t}\n}\n\nconst applyStyle = (el: SVGElement, style: { [key: string]: string | number }) => {\n\tObject.keys(style).forEach(name => {\n\t\tif (name == 'font-size') {\n\t\t\tif (typeof (style[name]) != 'number') {\n\t\t\t\tconsole.error(`All font-sizes in styles have to be numbers representing px! Found:`, style)\n\t\t\t}\n\t\t\tel.setAttribute(name, style[name] + 'px')\n\t\t} else {\n\t\t\tel.setAttribute(name, String(style[name]))\n\t\t}\n\t})\n}\n\n// View state persistence - similar to undo cache but for zoom/pan\nconst viewStateCache = new Map<string, { zoom: number; transform: { x: number; y: number } }>();\n\n// Save current view state (zoom and pan)\nexport function saveViewState(graphId: string) {\n\tif (!svg) return;\n\t\n\tconst zoom = getZoom();\n\tconst transform = getCurrentTransform();\n\t\n\tconst state = {\n\t\tzoom,\n\t\ttransform: { x: transform.x, y: transform.y }\n\t};\n\t\n\tviewStateCache.set(graphId, state);\n}\n\n// Restore view state if it exists\nexport function restoreViewState(graphId: string): boolean {\n\tif (!svg || !viewStateCache.has(graphId)) {\n\t\treturn false;\n\t}\n\t\n\tconst state = viewStateCache.get(graphId);\n\tif (!state) {\n\t\treturn false;\n\t}\n\t\n\t// Restore zoom and transform\n\tconst zoomGroup = svg.querySelector('g.zoom') as SVGGElement;\n\tif (zoomGroup) {\n\t\tzoomGroup.setAttribute('transform', `scale(${state.zoom}) translate(${state.transform.x}, ${state.transform.y})`);\n\t\tupdatePanning();\n\t}\n\t\n\treturn true;\n}\n\n// Clear view state for a graph\nexport function clearViewState(graphId: string) {\n\tviewStateCache.delete(graphId);\n}","export const defs = `\n<defs>\n\t<marker id=\"arrow\" viewBox=\"0 0 5 5\" refX=\"4\" refY=\"2.5\" \n\t\tmarkerWidth=\"5\" markerHeight=\"5\" orient=\"auto\" markerUnits=\"strokeWidth\">\n\t\t<path fill=\"#aaa\" stroke-width=\"1\" stroke=\"none\" d=\"M0,0 L5,2.5 L0,5 Z\" class=\"arrowHead\"/>\n\t</marker>\n\t<g id=\"icon-circle\" transform=\"translate(0,-12)\" class=\"icon\">\n\t\t<circle cx=\"7\" cy=\"7\" r=\"7\"/>\n\t</g>\n\t<g id=\"icon-cube\" transform=\"translate(0, -14)\" class=\"icon\">\n\t\t<path d=\"M 5 0 h 10 v 10 l -5 5 h -10 v -10 l 5 -5 M 0 5 h 10 v 10 M 15 0 l -5 5\"/>\n\t</g>\n\t<filter id=\"shadow\">\n\t\t<feDropShadow dx=\"3\" dy=\"3\" stdDeviation=\"5\" flood-color=\"#00000030\" flood-opacity=\"1\"></feDropShadow>\n\t</filter>\n</defs>`","/**\n * Robust platform detection utilities\n */\n\n/**\n * Detects if the user is on a Mac platform using multiple detection methods\n * for maximum compatibility across browsers and future-proofing.\n */\nexport const isMac = (): boolean => {\n  if (typeof navigator === 'undefined') return false;\n  \n  // Method 1: Check userAgentData (modern browsers, most reliable)\n  if ('userAgentData' in navigator && (navigator as any).userAgentData) {\n    const platform = (navigator as any).userAgentData.platform;\n    if (platform && platform.toLowerCase().includes('mac')) {\n      return true;\n    }\n  }\n  \n  // Method 2: Check userAgent string (widely supported)\n  const userAgent = navigator.userAgent.toLowerCase();\n  if (userAgent.includes('mac os') || userAgent.includes('macintosh')) {\n    return true;\n  }\n  \n  // Method 3: Check platform (fallback, deprecated but still widely supported)\n  if (navigator.platform) {\n    const platform = navigator.platform.toLowerCase();\n    if (platform.includes('mac') || platform.includes('darwin')) {\n      return true;\n    }\n  }\n  \n  // Method 4: Check for Mac-specific features as additional validation\n  try {\n    const testEvent = new KeyboardEvent('keydown', { metaKey: true });\n    if (testEvent.metaKey !== undefined) {\n      // Additional heuristic: Mac typically has different key layouts\n      return /mac|darwin|os x/i.test(navigator.userAgent);\n    }\n  } catch (e) {\n    // Ignore errors in older browsers\n  }\n  \n  return false;\n};\n\n/**\n * Gets the appropriate modifier key name for the current platform\n */\nexport const getModifierKeyName = (): string => {\n  return isMac() ? 'Cmd' : 'Ctrl';\n};\n\n/**\n * Gets the appropriate modifier key property for keyboard events\n */\nexport const getModifierKeyProperty = (event: KeyboardEvent): boolean => {\n  return isMac() ? event.metaKey : event.ctrlKey;\n};\n\n/**\n * Gets the appropriate Alt key name for the current platform\n */\nexport const getAltKeyName = (): string => {\n  return isMac() ? 'Option' : 'Alt';\n}; ","import React, {FC} from \"react\";\nimport { isMac, getModifierKeyName, getModifierKeyProperty } from './utils/platform';\n\ninterface Combination {\n\tctrl?: boolean;\n\tshift?: boolean;\n\talt?: boolean;\n\twheel?: boolean\n\tkey?: string;\n\tclick?: boolean;\n}\n\ninterface Shortcut {\n\tid: string,\n\thelp: string,\n\tcombinations: Combination[]\n}\n\nexport const SAVE = 'save'\n\nexport const UNDO = 'undo'\nexport const REDO = 'redo'\nexport const ADD_VERTEX = 'add-vertex'\nexport const ADD_LABEL_VERTEX = 'add-label-vertex'\nexport const DEL_VERTEX = 'del-vertex'\n\nexport const ZOOM_IN = 'zoom-in'\nexport const ZOOM_OUT = 'zoom-out'\nexport const ZOOM_FIT = 'zoom-fit'\nexport const ZOOM_100 = 'zoom-100'\n\nexport const SELECT_ALL = 'select-all'\nexport const DESELECT = 'deselect'\n\nexport const MOVE_LEFT = 'move-left'\nexport const MOVE_RIGHT = 'move-right'\nexport const MOVE_UP = 'move-up'\nexport const MOVE_DOWN = 'move-down'\nexport const MOVE_LEFT_FINE = 'move-left-fine'\nexport const MOVE_RIGHT_FINE = 'move-right-fine'\nexport const MOVE_UP_FINE = 'move-up-fine'\nexport const MOVE_DOWN_FINE = 'move-down-fine'\n\nexport const PAN_VIEW = 'pan-view'\nexport const SELECT_ELEMENT = 'select-element'\nexport const MULTI_SELECT = 'multi-select'\nexport const BOX_SELECT = 'box-select'\nexport const MOVE_ELEMENTS = 'move-elements'\n\nexport const HELP = 'help'\n\n// New shortcuts for toolbar buttons\nexport const TOGGLE_DRAG_MODE = 'toggle_drag_mode'\nexport const ALIGN_HORIZONTAL = 'align_horizontal'\nexport const ALIGN_VERTICAL = 'align_vertical'\nexport const DISTRIBUTE_HORIZONTAL = 'distribute_horizontal'\nexport const DISTRIBUTE_VERTICAL = 'distribute_vertical'\nexport const AUTO_LAYOUT = 'auto_layout'\nexport const RESET_POSITION = 'reset_position'\nexport const TOGGLE_GRID = 'toggle_grid'\nexport const TOGGLE_SNAP_TO_GRID = 'toggle_snap_to_grid'\nexport const SNAP_ALL_TO_GRID = 'snap_all_to_grid'\n\nconst shortcuts: { name: string; list: Shortcut[] }[] = [\n\t{\n\t\tname: 'Help',\n\t\tlist: [\n\t\t\t{\n\t\t\t\tid: HELP,\n\t\t\t\thelp: 'Show/hide this help',\n\t\t\t\tcombinations: [\n\t\t\t\t\t{key: '?', shift: true},\n\t\t\t\t\t{key: 'F1', shift: true}\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: 'File',\n\t\tlist: [\n\t\t\t{\n\t\t\t\tid: SAVE,\n\t\t\t\thelp: 'Save',\n\t\t\t\tcombinations: [{key: 's', ctrl: true}]\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: 'History',\n\t\tlist: [\n\t\t\t{\n\t\t\t\tid: UNDO,\n\t\t\t\thelp: 'Undo',\n\t\t\t\tcombinations: [\n\t\t\t\t\t{ctrl: true, key: 'z'},\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: REDO,\n\t\t\t\thelp: 'Redo',\n\t\t\t\tcombinations: [\n\t\t\t\t\t{ctrl: true, shift: true, key: 'z'},\n\t\t\t\t\t{ctrl: true, key: 'y'},\n\t\t\t\t]\n\t\t\t}\n\n\t\t],\n\t},\n\t{\n\t\tname: 'Relationship editing',\n\t\tlist: [\n\t\t\t{\n\t\t\t\tid: ADD_VERTEX,\n\t\t\t\thelp: 'Add relationship vertex',\n\t\t\t\tcombinations: [\n\t\t\t\t\t{alt: true, click: true},\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: ADD_LABEL_VERTEX,\n\t\t\t\thelp: 'Add label anchor relationship vertex',\n\t\t\t\tcombinations: [\n\t\t\t\t\t{alt: true, shift: true, click: true},\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: DEL_VERTEX,\n\t\t\t\thelp: 'Remove relationship vertex',\n\t\t\t\tcombinations: [\n\t\t\t\t\t{key: 'DELETE'},\n\t\t\t\t\t{key: 'BACKSPACE'}\n\t\t\t\t]\n\t\t\t},\n\t\t]\n\t},\n\t{\n\t\tname: 'Zoom',\n\t\tlist: [\n\t\t\t{\n\t\t\t\tid: ZOOM_IN,\n\t\t\t\thelp: 'Zoom in',\n\t\t\t\tcombinations: [\n\t\t\t\t\t{ctrl: true, key: '='}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: ZOOM_OUT,\n\t\t\t\thelp: 'Zoom out',\n\t\t\t\tcombinations: [\n\t\t\t\t\t{ctrl: true, key: '-'}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: ZOOM_FIT,\n\t\t\t\thelp: 'Zoom - fit',\n\t\t\t\tcombinations: [{ctrl: true, key: '9'}]\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: ZOOM_100,\n\t\t\t\thelp: 'Zoom 100%',\n\t\t\t\tcombinations: [{ctrl: true, key: '0'}]\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: 'wheel_zoom',\n\t\t\t\thelp: 'Zoom in/out with mouse wheel',\n\t\t\t\tcombinations: [{wheel: true}]\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: 'Mouse Interactions',\n\t\tlist: [\n\t\t\t{\n\t\t\t\tid: PAN_VIEW,\n\t\t\t\thelp: 'Pan view (drag empty space)',\n\t\t\t\tcombinations: [{click: true}]\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: SELECT_ELEMENT,\n\t\t\t\thelp: 'Select element',\n\t\t\t\tcombinations: [{click: true}]\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: MULTI_SELECT,\n\t\t\t\thelp: 'Add/remove from selection',\n\t\t\t\tcombinations: [{shift: true, click: true}]\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: BOX_SELECT,\n\t\t\t\thelp: 'Box selection (drag empty space)',\n\t\t\t\tcombinations: [{shift: true, click: true}]\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: MOVE_ELEMENTS,\n\t\t\t\thelp: 'Move selected elements',\n\t\t\t\tcombinations: [{click: true}]\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: 'Select',\n\t\tlist: [\n\t\t\t{\n\t\t\t\tid: SELECT_ALL,\n\t\t\t\thelp: 'Select All',\n\t\t\t\tcombinations: [{ctrl: true, key: 'a'}]\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: DESELECT,\n\t\t\t\thelp: 'Deselect',\n\t\t\t\tcombinations: [{key: 'ESC'}]\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: 'Move',\n\t\tlist: [\n\t\t\t{\n\t\t\t\tid: MOVE_UP,\n\t\t\t\thelp: 'Move up (grid increment)',\n\t\t\t\tcombinations: [{key: 'UP'}]\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: MOVE_UP_FINE,\n\t\t\t\thelp: 'Move up (1 pixel)',\n\t\t\t\tcombinations: [{key: 'UP', shift: true}]\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: MOVE_RIGHT,\n\t\t\t\thelp: 'Move right (grid increment)',\n\t\t\t\tcombinations: [{key: 'RIGHT'}]\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: MOVE_RIGHT_FINE,\n\t\t\t\thelp: 'Move right (1 pixel)',\n\t\t\t\tcombinations: [{key: 'RIGHT', shift: true}]\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: MOVE_DOWN,\n\t\t\t\thelp: 'Move down (grid increment)',\n\t\t\t\tcombinations: [{key: 'DOWN'}]\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: MOVE_DOWN_FINE,\n\t\t\t\thelp: 'Move down (1 pixel)',\n\t\t\t\tcombinations: [{key: 'DOWN', shift: true}]\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: MOVE_LEFT,\n\t\t\t\thelp: 'Move left (grid increment)',\n\t\t\t\tcombinations: [{key: 'LEFT'}]\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: MOVE_LEFT_FINE,\n\t\t\t\thelp: 'Move left (1 pixel)',\n\t\t\t\tcombinations: [{key: 'LEFT', shift: true}]\n\t\t\t},\n\t\t]\n\t},\n\t\t\t{\n\t\t\tname: 'View',\n\t\t\tlist: [\n\t\t\t\t{\n\t\t\t\t\tid: TOGGLE_DRAG_MODE,\n\t\t\t\t\thelp: 'Toggle between pan and select mode',\n\t\t\t\t\tcombinations: [{key: 't'}]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: RESET_POSITION,\n\t\t\t\t\thelp: 'Reset position and view',\n\t\t\t\t\tcombinations: [{key: 'Home', ctrl: true}]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t{\n\t\tname: 'Alignment',\n\t\tlist: [\n\t\t\t{\n\t\t\t\tid: ALIGN_HORIZONTAL,\n\t\t\t\thelp: 'Align selected elements horizontally',\n\t\t\t\tcombinations: [{key: 'h', ctrl: true, shift: true}]\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: ALIGN_VERTICAL,\n\t\t\t\thelp: 'Align selected elements vertically',\n\t\t\t\tcombinations: [{key: 'a', ctrl: true, shift: true}]\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: DISTRIBUTE_HORIZONTAL,\n\t\t\t\thelp: 'Distribute selected elements horizontally',\n\t\t\t\tcombinations: [{key: 'h', ctrl: true, alt: true}]\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: DISTRIBUTE_VERTICAL,\n\t\t\t\thelp: 'Distribute selected elements vertically',\n\t\t\t\tcombinations: [{key: 'v', ctrl: true, alt: true}]\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: 'Layout',\n\t\tlist: [\n\t\t\t{\n\t\t\t\tid: AUTO_LAYOUT,\n\t\t\t\thelp: 'Auto layout all elements',\n\t\t\t\tcombinations: [{key: 'l', ctrl: true}]\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: 'Grid',\n\t\tlist: [\n\t\t\t{\n\t\t\t\tid: TOGGLE_GRID,\n\t\t\t\thelp: 'Toggle grid visibility',\n\t\t\t\tcombinations: [{key: 'g', ctrl: true}]\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: TOGGLE_SNAP_TO_GRID,\n\t\t\t\thelp: 'Toggle snap to grid',\n\t\t\t\tcombinations: [{key: 'g', ctrl: true, shift: true}]\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: SNAP_ALL_TO_GRID,\n\t\t\t\thelp: 'Snap all elements to grid',\n\t\t\t\tcombinations: [{key: 'g', ctrl: true, alt: true}]\n\t\t\t}\n\t\t]\n\t}\n]\n\nconst shortcutMap = shortcuts\n\t.reduce((lst, s) => lst.concat(s.list), [] as Shortcut[])\n\t.reduce<{ [k: string]: Shortcut }>((map, s) => {\n\t\tmap[s.id] = s;\n\t\treturn map\n\t}, {})\n\nconst checkKey = (e: KeyboardEvent | MouseEvent, shortcut: Shortcut, click: boolean, wheel: boolean) => {\n\treturn shortcut.combinations.some(c => {\n\t\tif (Boolean(c.shift) != e.shiftKey) return false\n\t\t// Use platform-appropriate modifier key\n\t\tif (c.ctrl) {\n\t\t\tconst modifierKey = getModifierKeyProperty(e as KeyboardEvent);\n\t\t\tif (!modifierKey) return false;\n\t\t}\n\t\tif (Boolean(c.alt) != e.altKey) return false\n\t\tif (click) return c.click\n\t\tif (wheel) return c.wheel\n\t\tif (c.key) {\n\t\t\tconst ke = e as KeyboardEvent\n\t\t\tif (c.key == 'DELETE') return ke.key == 'Delete'\n\t\t\tif (c.key == 'BACKSPACE') return ke.key == 'Backspace'\n\t\t\tif (c.key == 'ESC') return ke.key == 'Escape'\n\t\t\tif (c.key == 'UP') return ke.key == 'ArrowUp'\n\t\t\tif (c.key == 'DOWN') return ke.key == 'ArrowDown'\n\t\t\tif (c.key == 'LEFT') return ke.key == 'ArrowLeft'\n\t\t\tif (c.key == 'RIGHT') return ke.key == 'ArrowRight'\n\t\t\treturn c.key && ke.key && c.key.toLowerCase() == ke.key.toLowerCase()\n\t\t}\n\t\treturn false\n\t})\n}\n\nexport const findShortcut = (e: KeyboardEvent | MouseEvent, click = false, wheel = false) => {\n\t// Find all matching shortcuts\n\tconst matches = Object.keys(shortcutMap).filter(k => checkKey(e, shortcutMap[k], click, wheel))\n\t\n\tif (matches.length === 0) return undefined\n\tif (matches.length === 1) return matches[0]\n\t\n\t// If multiple matches, prefer the one with more specific modifiers\n\t// Sort by number of modifiers (shift, ctrl, alt) in descending order\n\tconst sortedMatches = matches.sort((a, b) => {\n\t\tconst aShortcut = shortcutMap[a]\n\t\tconst bShortcut = shortcutMap[b]\n\t\t\n\t\tconst aModifiers = aShortcut.combinations[0]\n\t\tconst bModifiers = bShortcut.combinations[0]\n\t\t\n\t\tconst aCount = (aModifiers.shift ? 1 : 0) + (aModifiers.ctrl ? 1 : 0) + (aModifiers.alt ? 1 : 0)\n\t\tconst bCount = (bModifiers.shift ? 1 : 0) + (bModifiers.ctrl ? 1 : 0) + (bModifiers.alt ? 1 : 0)\n\t\t\n\t\treturn bCount - aCount // Descending order (more modifiers first)\n\t})\n\t\n\treturn sortedMatches[0]\n}\n\nconst comboText = (c: Combination) => {\n\treturn [\n\t\tc.ctrl && getModifierKeyName().toUpperCase(),\n\t\tc.shift && 'SHIFT',\n\t\tc.alt && 'ALT',\n\t\tc.key && (c.key.length > 1 ? c.key : `\"${c.key.toUpperCase()}\"`),\n\t\tc.click && 'CLICK',\n\t\tc.wheel && 'WHEEL'\n\t].filter(Boolean).join(' + ')\n}\n\nexport const Help: FC = () => {\n\treturn <div className=\"popover\">\n\t\t<h1>Shortcuts</h1>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t{\n\t\t\t\tshortcuts.map(section => <>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th colSpan={2}>{section.name}</th>\n\t\t\t\t\t</tr>\n\t\t\t\t\t{section.list.map(item => <tr>\n\t\t\t\t\t\t<td>{item.combinations.map(comboText).join(', ')}</td>\n\t\t\t\t\t\t<td>{item.help}</td>\n\t\t\t\t\t</tr>)}\n\t\t\t\t</>)\n\t\t\t}\n\t\t\t</tbody>\n\t\t</table>\n\t</div>\n}\n","\n      import API from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../node_modules/css-loader/dist/cjs.js!./style.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../node_modules/css-loader/dist/cjs.js!./style.css\";\n       export default content && content.locals ? content.locals : undefined;\n","interface LiveReloadOptions {\n\tminDelay: number;\n\tmaxDelay: number;\n\thandshakeTimeout: number;\n}\n\ninterface LiveReloadMessage {\n\tcommand: string;\n\tprotocols?: string[];\n\tver?: string;\n\tpath?: string;\n}\n\nclass Timer {\n\tprivate readonly callback: () => void;\n\tprivate readonly handler: () => void;\n\tprivate running: boolean = false;\n\tprivate timeoutId: ReturnType<typeof setTimeout> | null = null;\n\n\tconstructor(callback: () => void) {\n\t\tthis.callback = callback;\n\t\tthis.handler = () => {\n\t\t\tthis.running = false;\n\t\t\tthis.timeoutId = null;\n\t\t\tthis.callback();\n\t\t};\n\t}\n\n\tstart(timeout: number): void {\n\t\tif (this.running) {\n\t\t\tthis.stop();\n\t\t}\n\t\tthis.timeoutId = setTimeout(this.handler, timeout);\n\t\tthis.running = true;\n\t}\n\n\tstop(): void {\n\t\tif (this.running && this.timeoutId !== null) {\n\t\t\tclearTimeout(this.timeoutId);\n\t\t\tthis.running = false;\n\t\t\tthis.timeoutId = null;\n\t\t}\n\t}\n\n\tisRunning(): boolean {\n\t\treturn this.running;\n\t}\n}\n\n/**\n * RefreshConnector implements the livereload protocol to listen for file changes via WebSocket\n */\nexport class RefreshConnector {\n\tprivate static readonly DEFAULT_OPTIONS: LiveReloadOptions = {\n\t\tminDelay: 1000,\n\t\tmaxDelay: 60000,\n\t\thandshakeTimeout: 5000\n\t};\n\n\tprivate static readonly LIVERELOAD_PROTOCOLS = [\n\t\t'http://livereload.com/protocols/official-9',\n\t\t'http://livereload.com/protocols/2.x-remote-control'\n\t];\n\n\tprivate readonly uri: string;\n\tprivate readonly options: LiveReloadOptions;\n\tprivate readonly fileChangeHandler: (path: string) => void;\n\t\n\tprivate socket: WebSocket | null = null;\n\tprivate nextDelay: number;\n\tprivate connectionDesired: boolean = false;\n\tprivate disconnectionReason: string = '';\n\t\n\tprivate readonly handshakeTimeout: Timer;\n\tprivate readonly reconnectTimer: Timer;\n\n\tconstructor(fileChangeHandler: (file: string) => void, options?: Partial<LiveReloadOptions>) {\n\t\tthis.fileChangeHandler = fileChangeHandler;\n\t\tthis.options = { ...RefreshConnector.DEFAULT_OPTIONS, ...options };\n\t\tthis.uri = 'ws://localhost:35729/livereload';\n\t\tthis.nextDelay = this.options.minDelay;\n\n\t\tthis.handshakeTimeout = new Timer(() => this.handleHandshakeTimeout());\n\t\tthis.reconnectTimer = new Timer(() => this.attemptReconnection());\n\t}\n\n\tconnect(): void {\n\t\tthis.connectionDesired = true;\n\n\t\tif (this.isSocketConnected()) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.prepareForConnection();\n\t\tthis.createWebSocket();\n\t}\n\n\tdisconnect(): void {\n\t\tthis.connectionDesired = false;\n\t\tthis.reconnectTimer.stop();\n\n\t\tif (this.isSocketConnected()) {\n\t\t\tthis.disconnectionReason = 'manual';\n\t\t\tthis.socket!.close();\n\t\t}\n\t}\n\n\tprivate isSocketConnected(): boolean {\n\t\treturn this.socket !== null && this.socket.readyState === WebSocket.OPEN;\n\t}\n\n\tprivate prepareForConnection(): void {\n\t\tthis.reconnectTimer.stop();\n\t\tthis.disconnectionReason = 'cannot-connect';\n\t}\n\n\tprivate createWebSocket(): void {\n\t\tthis.socket = new WebSocket(this.uri);\n\t\tthis.socket.onopen = () => this.handleOpen();\n\t\tthis.socket.onclose = () => this.handleClose();\n\t\tthis.socket.onmessage = (event) => this.handleMessage(event);\n\t\tthis.socket.onerror = () => this.handleError();\n\t}\n\n\tprivate handleOpen(): void {\n\t\tthis.disconnectionReason = 'handshake-failed';\n\t\tthis.startHandshake();\n\t}\n\n\tprivate handleClose(): void {\n\t\tconsole.log(`WebSocket disconnected: ${this.disconnectionReason}. Retry in ${this.nextDelay}ms`);\n\t\tthis.scheduleReconnection();\n\t}\n\n\tprivate handleMessage(event: MessageEvent): void {\n\t\ttry {\n\t\t\tconst message: LiveReloadMessage = JSON.parse(event.data);\n\t\t\tthis.processMessage(message);\n\t\t} catch (error) {\n\t\t\tconsole.error('Failed to parse WebSocket message:', error);\n\t\t}\n\t}\n\n\tprivate handleError(): void {\n\t\t// Error handling is done in onclose\n\t}\n\n\tprivate processMessage(message: LiveReloadMessage): void {\n\t\tswitch (message.command) {\n\t\t\tcase 'hello':\n\t\t\t\tthis.handleHelloMessage();\n\t\t\t\tbreak;\n\t\t\tcase 'reload':\n\t\t\t\tthis.handleReloadMessage(message);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tconsole.log('Unknown WebSocket message received:', message);\n\t\t}\n\t}\n\n\tprivate handleHelloMessage(): void {\n\t\tthis.handshakeTimeout.stop();\n\t\tthis.nextDelay = this.options.minDelay;\n\t}\n\n\tprivate handleReloadMessage(message: LiveReloadMessage): void {\n\t\t// The livereload server closes connection after sending reload\n\t\t// We must reconnect\n\t\tthis.reconnectTimer.stop();\n\t\tthis.connect();\n\n\t\tif (message.path) {\n\t\t\tthis.fileChangeHandler(message.path);\n\t\t}\n\t}\n\n\tprivate startHandshake(): void {\n\t\tconst helloMessage: LiveReloadMessage = {\n\t\t\tcommand: 'hello',\n\t\t\tprotocols: RefreshConnector.LIVERELOAD_PROTOCOLS,\n\t\t\tver: '3.3.1'\n\t\t};\n\t\t\n\t\tthis.sendCommand(helloMessage);\n\t\tthis.handshakeTimeout.start(this.options.handshakeTimeout);\n\t}\n\n\tprivate handleHandshakeTimeout(): void {\n\t\tif (this.isSocketConnected()) {\n\t\t\tthis.disconnectionReason = 'handshake-timeout';\n\t\t\tthis.socket!.close();\n\t\t}\n\t}\n\n\tprivate attemptReconnection(): void {\n\t\tif (this.connectionDesired) {\n\t\t\tthis.connect();\n\t\t}\n\t}\n\n\tprivate scheduleReconnection(): void {\n\t\tif (!this.connectionDesired) {\n\t\t\treturn; // Don't reconnect after manual disconnection\n\t\t}\n\n\t\tif (!this.reconnectTimer.isRunning()) {\n\t\t\tthis.reconnectTimer.start(this.nextDelay);\n\t\t\tthis.nextDelay = Math.min(this.options.maxDelay, this.nextDelay * 2);\n\t\t}\n\t}\n\n\tprivate sendCommand(command: LiveReloadMessage): void {\n\t\tif (this.isSocketConnected()) {\n\t\t\tthis.socket!.send(JSON.stringify(command));\n\t\t}\n\t}\n}","import { createRoot } from 'react-dom/client';\nimport React, { Suspense, lazy, useEffect, useState } from 'react';\nimport { refreshGraph } from \"./Root\";\nimport './style.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { RefreshConnector } from \"./websocket\";\n\nconst Root = lazy(() => import('./Root').then(module => ({ default: module.Root })));\n\ninterface ModelData {\n\tmodel: any;\n\tlayout: any;\n}\n\ninterface AppState {\n\tdata: ModelData | null;\n\terror: string | null;\n\tloading: boolean;\n}\n\nconst App: React.FC = () => {\n\tconst [state, setState] = useState<AppState>({\n\t\tdata: null,\n\t\terror: null,\n\t\tloading: true\n\t});\n\n\tconst loadData = async () => {\n\t\tsetState(prev => ({ ...prev, loading: true, error: null }));\n\t\t\n\t\ttry {\n\t\t\tconst [modelResponse, layoutResponse] = await Promise.all([\n\t\t\t\tfetch('data/model.json'),\n\t\t\t\tfetch('data/layout.json')\n\t\t\t]);\n\n\t\t\tif (!modelResponse.ok) {\n\t\t\t\tthrow new Error(`Failed to fetch model: ${modelResponse.statusText}`);\n\t\t\t}\n\t\t\t\n\t\t\tif (!layoutResponse.ok) {\n\t\t\t\tthrow new Error(`Failed to fetch layout: ${layoutResponse.statusText}`);\n\t\t\t}\n\n\t\t\tconst [model, layout] = await Promise.all([\n\t\t\t\tmodelResponse.json(),\n\t\t\t\tlayoutResponse.json()\n\t\t\t]);\n\n\t\t\tsetState({\n\t\t\t\tdata: { model, layout },\n\t\t\t\terror: null,\n\t\t\t\tloading: false\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tconsole.error('Failed to load data:', error);\n\t\t\tsetState({\n\t\t\t\tdata: null,\n\t\t\t\terror: error instanceof Error ? error.message : 'Unknown error occurred',\n\t\t\t\tloading: false\n\t\t\t});\n\t\t}\n\t};\n\n\tconst handleFileChange = (path: string) => {\n\t\tif (path.endsWith('.svg')) {\n\t\t\treturn; // Ignore SVG changes to avoid infinite loops\n\t\t}\n\t\t\n\t\tconsole.log('File changed:', path);\n\t\trefreshGraph();\n\t\tloadData();\n\t};\n\n\tuseEffect(() => {\n\t\t// Setup refresh connector\n\t\tconst refreshConnector = new RefreshConnector(handleFileChange);\n\t\trefreshConnector.connect();\n\n\t\t// Initial data load\n\t\tloadData();\n\n\t\t// Cleanup function\n\t\treturn () => {\n\t\t\t// RefreshConnector cleanup would go here if it had a disconnect method\n\t\t};\n\t}, []);\n\n\tif (state.loading) {\n\t\treturn <LoadingScreen />;\n\t}\n\n\tif (state.error) {\n\t\treturn <ErrorScreen error={state.error} onRetry={loadData} />;\n\t}\n\n\tif (!state.data) {\n\t\treturn <ErrorScreen error=\"No data available\" onRetry={loadData} />;\n\t}\n\n\treturn (\n\t\t<Suspense fallback={<LoadingScreen />}>\n\t\t\t<Root model={state.data.model} layout={state.data.layout} />\n\t\t</Suspense>\n\t);\n};\n\nconst LoadingScreen: React.FC = () => (\n\t<div style={{\n\t\tdisplay: 'flex',\n\t\tjustifyContent: 'center',\n\t\talignItems: 'center',\n\t\theight: '100vh',\n\t\tfontFamily: 'Arial, sans-serif'\n\t}}>\n\t\t<div>Loading...</div>\n\t</div>\n);\n\nconst ErrorScreen: React.FC<{ error: string; onRetry: () => void }> = ({ error, onRetry }) => (\n\t<div style={{\n\t\tpadding: '20px',\n\t\tcolor: 'red',\n\t\tfontFamily: 'monospace',\n\t\twhiteSpace: 'pre-wrap',\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'column',\n\t\talignItems: 'center',\n\t\tjustifyContent: 'center',\n\t\theight: '100vh'\n\t}}>\n\t\t<h2>Error loading application</h2>\n\t\t<p>{error}</p>\n\t\t<button \n\t\t\tonClick={onRetry}\n\t\t\tstyle={{\n\t\t\t\tpadding: '10px 20px',\n\t\t\t\tfontSize: '16px',\n\t\t\t\tcursor: 'pointer',\n\t\t\t\tbackgroundColor: '#007bff',\n\t\t\t\tcolor: 'white',\n\t\t\t\tborder: 'none',\n\t\t\t\tborderRadius: '4px'\n\t\t\t}}\n\t\t>\n\t\t\tRetry\n\t\t</button>\n\t</div>\n);\n\n// Initialize the application\nconst container = document.getElementById('root');\nif (!container) {\n\tthrow new Error('Root container not found');\n}\n\nconst root = createRoot(container);\nroot.render(<App />);","import {GraphData} from \"./graph-view/graph\";\n\n\ninterface Model {\n\tname: string\n\tdescription: string\n\tversion: string\n\tmodel: {\n\t\tenterprise: {\n\t\t\tname: string\n\t\t}\n\t\tpeople: Element[]\n\t\tsoftwareSystems: Element[]\n\t\tdeploymentNodes: Element[]\n\t}\n\tviews: {\n\t\tsystemLandscapeViews: View[]\n\t\tcontainerViews: View[]\n\t\tcomponentViews: View[]\n\t\tdynamicViews: View[]\n\t\tdeploymentViews: View[]\n\t\tstyles: {\n\t\t\telements: {\n\t\t\t\t[key: string]: string\n\t\t\t}[];\n\t\t\trelationships: {\n\t\t\t\t[key: string]: string\n\t\t\t}[]\n\t\t}\n\t}\n}\n\ninterface Layouts {\n\t[key: string]: { // keyed by view key\n\t\t[key: string]: { x: number; y: number } // keyed by element id\n\t}\n}\n\ninterface Element {\n\tid: string;\n\tname: string;\n\ttechnology?: string;\n\tdescription?: string;\n\tparent?: Element;\n\ttags?: string;\n\tlocation?: string;\n\tcontainers?: Element[];\n\tcomponents?: Element[];\n\trelationships?: Relation[];\n\tproperties?: { [key: string]: string }\n\tchildren?: Element[];\n\tinfrastructureNodes?: Element[];\n}\n\ninterface Relation {\n\tid: string;\n\tdescription: string;\n\ttags: string;\n\tsourceId: string;\n\tdestinationId: string;\n\ttechnology: string;\n\tinteractionStyle: string;\n}\n\ninterface View {\n\tkey: string;\n\ttitle: string;\n\tdescription: string\n\telements: {\n\t\tid: string\n\t}[];\n\trelationships: {\n\t\tid: string;\n\t\tvertices: { x: number; y: number }[];\n\t\trouting: string; // takes priority over style\n\t}[];\n\tsoftwareSystemId: string;\n}\n\ninterface Metadata {\n\tname: string\n\tdescription: string\n\tversion: string\n\telements: {\n\t\tid: string\n\t\ttags?: string;\n\t\tlocation?: string;\n\t\tproperties?: { [key: string]: string };\n\t\telementViewKey?: string;\n\t\ttechnology?: string;\n\t}[]\n}\n\nexport type ViewsList = {\n\tkey: string;\n\ttitle: string;\n\tsection: string;\n}[]\n\nexport const parseView = (model: Model, layouts: Layouts, viewKey: string) => {\n\n\tconst elements = new Map<string, Element>();\n\tconst relations = new Map<string, Relation>();\n\n\tconst collectRels = (el: Element) => {\n\t\tif (Array.isArray(el.relationships)) {\n\t\t\tel.relationships.forEach(rel => {\n\t\t\t\trelations.set(rel.id, rel)\n\t\t\t})\n\t\t}\n\t}\n\n\t// People\n\tmodel.model.people && model.model.people.forEach((el: Element) => {\n\t\telements.set(el.id, el)\n\t\tif (Array.isArray(el.relationships)) {\n\t\t\tel.relationships.forEach(rel => {\n\t\t\t\trelations.set(rel.id, rel)\n\t\t\t})\n\t\t}\n\t})\n\t// Software Systems\n\tmodel.model.softwareSystems && model.model.softwareSystems.forEach((el: Element) => {\n\t\telements.set(el.id, el)\n\t\tcollectRels(el)\n\n\t\tif (Array.isArray(el.containers)) {\n\t\t\tel.containers.forEach((el1: Element) => {\n\t\t\t\tel1.parent = el;\n\t\t\t\telements.set(el1.id, el1)\n\t\t\t\tcollectRels(el1)\n\t\t\t\tif (Array.isArray(el1.components)) {\n\t\t\t\t\tel1.components.forEach((el2: Element) => {\n\t\t\t\t\t\tel2.parent = el1;\n\t\t\t\t\t\telements.set(el2.id, el2)\n\t\t\t\t\t\tcollectRels(el2)\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t})\n\n\t// Deployment Nodes\n\tif (model.model.deploymentNodes) {\n\t\tconst containerInstances = (el: any) => {\n\t\t\tel.containerInstances && el.containerInstances.forEach((item: any) => {\n\t\t\t\tconst el1 = {...elements.get(item.containerId), id: item.id}\n\t\t\t\telements.set(el1.id, el1)\n\t\t\t\tel1.parent = el\n\t\t\t\tcollectRels(item)\n\t\t\t})\n\t\t}\n\n\t\tconst recAddNodes = (el: Element, parent: Element) => {\n\t\t\tel.parent = parent;\n\t\t\telements.set(el.id, el)\n\t\t\tcollectRels(el)\n\t\t\tcontainerInstances(el)\n\t\t\tel.children && el.children.forEach((el1: Element) => recAddNodes(el1, el))\n\t\t\tel.infrastructureNodes && el.infrastructureNodes.forEach((el1: Element) => recAddNodes(el1, el))\n\t\t}\n\n\t\tmodel.model.deploymentNodes.forEach((el: Element) => recAddNodes(el, null))\n\t}\n\n\t// Create graph from selected view\n\tconst {view, section} = getView(model, viewKey)\n\n\tif (!view) return null\n\n\tconst graph = new GraphData(view.key, view.title || view.key)\n\tconst metadata: Metadata = {name: graph.name, description: view.description, version: model.version, elements: []}\n\tgraph.metadata = metadata\n\n\tif (!view.elements) return graph\n\n\t//grouping rules - elements that are groups will not be nodes\n\tconst groupingIDs: { [key: string]: boolean } = {}\n\tif (section == 'deploymentViews' || section == 'containerViews') {\n\t\tview.elements.forEach(ref => {\n\t\t\tconst el = elements.get(ref.id)\n\t\t\tif (el?.parent) {\n\t\t\t\tgroupingIDs[el.parent.id] = true\n\t\t\t}\n\t\t})\n\t} else if (view.softwareSystemId) {\n\t\t//don't show grouping if the element is listed in the view\n\t\tif (!view.elements.find(ref => ref.id == view.softwareSystemId))\n\t\t\tgroupingIDs[view.softwareSystemId] = true\n\t} else if (section == 'systemLandscapeViews') {\n\t\t// create a virtual parent element from enterprise\n\t\tconst p: Element = {id: '__enterprise__', ...model.model.enterprise}\n\t\telements.set(p.id, p)\n\t\tif (model.model.people) model.model.people.filter(el => el.location != 'External').forEach(el => el.parent = p)\n\t\tif (model.model.softwareSystems) model.model.softwareSystems.filter(el => el.location != 'External').forEach(el => el.parent = p)\n\t\tgroupingIDs[p.id] = true\n\t}\n\n\tconst styles = model.views.styles\n\n\t//nodes\n\tview.elements.forEach((ref) => {\n\t\t// except grouping elements\n\t\tif (groupingIDs[ref.id]) return\n\n\t\tconst el = elements.get(ref.id)\n\n\t\tlet sub = ''\n\t\tlet style = {}\n\t\tif (el) {\n\t\t\tconst tags = el.tags.split(',')\n\t\t\tsub = tags[tags.length - 1] // subtitle is [<last tag>]\n\t\t\tif (el.technology)\n\t\t\t\tsub += ': ' + el.technology // or [<technology>: <last tag>]\n\n\t\t\ttags.forEach(tag => {\n\t\t\t\tconst s = styles && styles.elements && styles.elements.find(s => s.tag == tag)\n\t\t\t\ts && (style = {...style, ...s})\n\t\t\t})\n\t\t}\n\n\t\tgraph.addNode(\n\t\t\tref.id,\n\t\t\tel ? (el.name || ref.id) : ref.id,\n\t\t\tsub,\n\t\t\t(el && el.description) ? el.description : '',\n\t\t\tstyle\n\t\t)\n\t\tel && metadata.elements.push({\n\t\t\tid: el.id,\n\t\t\ttags: el.tags,\n\t\t\tlocation: el.location,\n\t\t\tproperties: el.properties,\n\t\t\telementViewKey: lookupElementKeyView(model, el.id),\n\t\t\ttechnology: el.technology\n\t\t})\n\t})\n\t//edges\n\tif (Array.isArray(view.relationships)) {\n\t\tview.relationships.forEach(ref => {\n\t\t\tconst rel = relations.get(ref.id)\n\t\t\tif (!rel) return;\n\n\t\t\tif (!graph.nodesMap.has(rel.sourceId)) {\n\t\t\t\tif (elements.has(rel.sourceId)) {\n\t\t\t\t\tconst el = elements.get(rel.sourceId)\n\t\t\t\t\tconsole.warn('Element not found in this view: ', el.id, el.name)\n\t\t\t\t} else {\n\t\t\t\t\tconsole.warn('Element not found: ', rel.sourceId)\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (!graph.nodesMap.has(rel.destinationId)) {\n\t\t\t\tif (elements.has(rel.destinationId)) {\n\t\t\t\t\tconst el = elements.get(rel.destinationId)\n\t\t\t\t\tconsole.warn('Element not found in this view: ', el.id, el.name)\n\t\t\t\t} else {\n\t\t\t\t\tconsole.warn('Element not found: ', rel.destinationId)\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet style: any = {}\n\t\t\trel.tags.split(',').forEach(tag => {\n\t\t\t\tconst s = styles && styles.relationships && styles.relationships.find(s => s.tag == tag)\n\t\t\t\ts && (style = {...style, ...s})\n\t\t\t})\n\t\t\tif (ref.routing) style.routing = ref.routing\n\n\t\t\tgraph.addEdge(rel.id, rel.sourceId, rel.destinationId, rel.description, ref.vertices, style)\n\t\t})\n\t}\n\n\t//groups\n\t//sort by depth to solve dependency\n\tconst level = (el: Element) => {\n\t\tlet i = 0\n\t\tfor (let p = el.parent; p; p = p.parent) i++;\n\t\treturn i\n\t}\n\tconst gElements = Object.keys(groupingIDs)\n\t\t.map(id => elements.get(id))\n\t\t.sort((a, b) => level(a) > level(b) ? -1 : 1)\n\n\tgElements.forEach(parent => {\n\t\tlet style = {}\n\t\tif (section == 'deploymentViews') {\n\t\t\tconst el = elements.get(parent.id)\n\t\t\tconst tags = el.tags.split(',')\n\t\t\ttags.forEach(tag => {\n\t\t\t\tconst s = styles && styles.elements && styles.elements.find(s => s.tag == tag)\n\t\t\t\ts && (style = {...style, ...s})\n\t\t\t})\n\t\t}\n\t\t\n\t\t// Filter group members more carefully to respect boundaries\n\t\tconst groupMembers = view.elements\n\t\t\t.map(ref => elements.get(ref.id))\n\t\t\t.filter(el => {\n\t\t\t\tif (!el || el.parent !== parent) return false;\n\t\t\t\t\n\t\t\t\t// For system landscape views, respect the location-based grouping\n\t\t\t\tif (section === 'systemLandscapeViews' && parent.id === '__enterprise__') {\n\t\t\t\t\t// Only include elements that are explicitly non-external\n\t\t\t\t\treturn el.location !== 'External';\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// For other view types, include if parent matches\n\t\t\t\treturn true;\n\t\t\t})\n\t\t\t.map(el => el.id);\n\t\t\n\t\t// Only create group if it has members\n\t\tif (groupMembers.length > 0) {\n\t\t\tgraph.addGroup(\n\t\t\t\tparent.id,\n\t\t\t\tparent.name,\n\t\t\t\tgroupMembers,\n\t\t\t\tstyle\n\t\t\t)\n\t\t}\n\t})\n\n\t//layout if any and init graph\n\tgraph.init(layouts[graph.id])\n\treturn graph\n}\n\n// lookup the view in all Views sections in the model. return the view and the section\nfunction getView(model: Model, viewKey: string) {\n\tlet view: View = null, section: string = ''\n\tObject.keys(model.views).filter(s => s.endsWith('Views')).some((s: string) => {\n\t\treturn ((model.views as any)[s]).some((v: View) => {\n\t\t\tif (v.key == viewKey) {\n\t\t\t\tview = v\n\t\t\t\tsection = s\n\t\t\t\treturn true\n\t\t\t}\n\t\t})\n\t})\n\treturn {view, section}\n}\n\n\nfunction lookupElementKeyView(model: any, softwareSystemId: string) {\n\tlet key: string = undefined\n\tObject.keys(model.views).filter(s => s.endsWith('Views')).some((s: string) => {\n\t\treturn ((model.views as any)[s]).some((v: View) => {\n\t\t\tif (v.softwareSystemId == softwareSystemId) {\n\t\t\t\tkey = v.key\n\t\t\t\treturn true\n\t\t\t}\n\t\t})\n\t})\n\treturn key\n}\n\nexport const listViews = (model: any) => {\n\tconst viewsList: ViewsList = []\n\tconst sections = Object.keys(model.views).filter(section => section.endsWith('Views'))\n\tsections.forEach(s => {\n\t\tmodel.views[s].forEach((v: View) => {\n\t\t\tviewsList.push({key: v.key, title: v.title || v.key, section: s})\n\t\t})\n\t})\n\treturn viewsList;\n}\n","import { useState, useCallback, useEffect } from 'react';\nimport { GraphData } from './graph-view/graph';\nimport { parseView } from './parseModel';\nimport { LayoutOptions } from './graph-view/layout';\nimport { \n  findShortcut, \n  HELP, \n  SAVE, \n  TOGGLE_DRAG_MODE,\n  ALIGN_HORIZONTAL,\n  ALIGN_VERTICAL,\n  DISTRIBUTE_HORIZONTAL,\n  DISTRIBUTE_VERTICAL,\n  AUTO_LAYOUT,\n  RESET_POSITION,\n  TOGGLE_GRID,\n  TOGGLE_SNAP_TO_GRID,\n  SNAP_ALL_TO_GRID,\n  MOVE_LEFT,\n  MOVE_RIGHT,\n  MOVE_UP,\n  MOVE_DOWN,\n  MOVE_LEFT_FINE,\n  MOVE_RIGHT_FINE,\n  MOVE_UP_FINE,\n  MOVE_DOWN_FINE\n} from './shortcuts';\n\n// Global state for graphs to preserve edits\nconst graphs: { [key: string]: GraphData } = {};\n\n// Custom hook for graph management\nexport const useGraph = (model: any, layouts: any, currentID: string): GraphData | null => {\n  if (graphs[currentID]) {\n    return graphs[currentID];\n  }\n  \n  const graph = parseView(model, layouts, currentID);\n  if (graph) {\n    graphs[currentID] = graph;\n  }\n  \n  return graph;\n};\n\n// Custom hook for auto layout functionality\nexport const useAutoLayout = (graph: GraphData) => {\n  const [layouting, setLayouting] = useState(false);\n\n  const handleAutoLayout = useCallback(async () => {\n    setLayouting(true);\n    try {\n      const options: LayoutOptions = {\n        direction: 'DOWN',\n        compactLayout: true\n      };\n      await graph.autoLayout(options);\n    } catch (error) {\n      console.error('Layout failed:', error);\n      alert('Layout failed. See console for details.');\n    } finally {\n      setLayouting(false);\n    }\n  }, [graph]);\n\n  return { layouting, handleAutoLayout };\n};\n\n// Custom hook for save functionality\nexport const useSave = (graph: GraphData, currentID: string) => {\n  const [saving, setSaving] = useState(false);\n\n  const handleSave = useCallback(async () => {\n    setSaving(true);\n    \n    try {\n      const response = await fetch('data/save?id=' + encodeURIComponent(currentID), {\n        method: 'post',\n        body: graph.exportSVG()\n      });\n      \n      if (response.status !== 202) {\n        alert('Error saving\\nSee terminal output.');\n      } else {\n        graph.setSaved();\n      }\n    } catch (error) {\n      console.error('Save failed:', error);\n      alert('Save failed. See console for details.');\n    } finally {\n      setSaving(false);\n    }\n  }, [graph, currentID]);\n\n  return { saving, handleSave };\n};\n\n// Custom hook for keyboard shortcuts\nexport const useKeyboardShortcuts = (\n  toggleHelp: () => void,\n  saveLayout: () => void,\n  graph?: GraphData,\n  dragMode?: 'pan' | 'select',\n  setDragMode?: (mode: 'pan' | 'select') => void,\n  onAutoLayout?: () => void\n) => {\n  useEffect(() => {\n    const handleKeyDown = (e: KeyboardEvent) => {\n      const shortcut = findShortcut(e);\n      \n      // Prevent browser default for all recognized shortcuts\n      if (shortcut) {\n        e.preventDefault();\n      }\n      \n      if (shortcut === HELP) {\n        toggleHelp();\n      } else if (shortcut === SAVE) {\n        saveLayout();\n      } else if (shortcut === TOGGLE_DRAG_MODE && setDragMode && dragMode) {\n        setDragMode(dragMode === 'pan' ? 'select' : 'pan');\n      } else if (graph) {\n        // Graph-dependent shortcuts\n        if (shortcut === ALIGN_HORIZONTAL) {\n          graph.alignSelectionH();\n        } else if (shortcut === ALIGN_VERTICAL) {\n          graph.alignSelectionV();\n        } else if (shortcut === DISTRIBUTE_HORIZONTAL) {\n          graph.distributeSelectionH();\n        } else if (shortcut === DISTRIBUTE_VERTICAL) {\n          graph.distributeSelectionV();\n        } else if (shortcut === AUTO_LAYOUT && onAutoLayout) {\n          onAutoLayout();\n        } else if (shortcut === RESET_POSITION) {\n          graph.resetView();\n        } else if (shortcut === TOGGLE_GRID) {\n          graph.toggleGrid();\n        } else if (shortcut === TOGGLE_SNAP_TO_GRID) {\n          graph.toggleSnapToGrid();\n        } else if (shortcut === SNAP_ALL_TO_GRID) {\n          graph.snapAllToGrid();\n        } else if (shortcut === MOVE_LEFT) {\n          graph.moveSelected(-graph.getGridSize(), 0);\n        } else if (shortcut === MOVE_LEFT_FINE) {\n          graph.moveSelected(-1, 0, true); // Disable snap for fine movement\n        } else if (shortcut === MOVE_RIGHT) {\n          graph.moveSelected(graph.getGridSize(), 0);\n        } else if (shortcut === MOVE_RIGHT_FINE) {\n          graph.moveSelected(1, 0, true); // Disable snap for fine movement\n        } else if (shortcut === MOVE_UP) {\n          graph.moveSelected(0, -graph.getGridSize());\n        } else if (shortcut === MOVE_UP_FINE) {\n          graph.moveSelected(0, -1, true); // Disable snap for fine movement\n        } else if (shortcut === MOVE_DOWN) {\n          graph.moveSelected(0, graph.getGridSize());\n        } else if (shortcut === MOVE_DOWN_FINE) {\n          graph.moveSelected(0, 1, true); // Disable snap for fine movement\n        }\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  }, [toggleHelp, saveLayout, graph, dragMode, setDragMode, onAutoLayout]);\n};\n\n// Utility function to clear graph cache\nexport const clearGraphCache = (currentID?: string) => {\n  if (currentID) {\n    delete graphs[currentID];\n  } else {\n    Object.keys(graphs).forEach(key => delete graphs[key]);\n  }\n}; ","// Helper functions for the application\n\nexport function removeEmptyProps(obj: any) {\n  return JSON.parse(JSON.stringify(obj));\n}\n\nexport function camelToWords(camel: string) {\n  const split = camel.replace(/([A-Z])/g, \" $1\");\n  return split.charAt(0).toUpperCase() + split.slice(1);\n}\n\nexport function getCurrentViewID() {\n  const params = new URLSearchParams(document.location.search);\n  return params.get('id') || '';\n} ","import React, { FC, useState, useEffect } from 'react';\nimport { getZoomAuto, GraphData, setZoom, getZoom, setZoomCentered } from '../graph-view/graph';\nimport { listViews } from '../parseModel';\nimport { camelToWords } from '../utils';\nimport { getModifierKeyName } from '../utils/platform';\n\n// Types\ninterface ToolbarProps {\n  model: any;\n  currentID: string;\n  onViewChange: (id: string) => void;\n  graph: GraphData;\n  onAutoLayout: () => void;\n  onSave: () => void;\n  onToggleHelp: () => void;\n  saving: boolean;\n  layouting: boolean;\n  dragMode: 'pan' | 'select';\n  setDragMode: (mode: 'pan' | 'select') => void;\n}\n\nexport const Toolbar: FC<ToolbarProps> = ({\n  model, currentID, onViewChange, graph, \n  onAutoLayout, onSave, onToggleHelp, saving, layouting,\n  dragMode, setDragMode\n}) => {\n  const views = listViews(model);\n  \n  return (\n    <div className=\"toolbar\">\n      <ViewSelector \n        views={views}\n        currentID={currentID}\n        onViewChange={onViewChange}\n      />\n      <ToolbarActions\n        graph={graph}\n        onAutoLayout={onAutoLayout}\n        onSave={onSave}\n        onToggleHelp={onToggleHelp}\n        saving={saving}\n        layouting={layouting}\n        dragMode={dragMode}\n        setDragMode={setDragMode}\n      />\n    </div>\n  );\n};\n\nconst ViewSelector: FC<{\n  views: any[];\n  currentID: string;\n  onViewChange: (id: string) => void;\n}> = ({ views, currentID, onViewChange }) => (\n  <div>\n    View:\n    {views.length > 1 ? (\n      <select onChange={e => onViewChange(e.target.value)} value={currentID}>\n        <option disabled value=\"\" hidden>...</option>\n        {views.map(view => (\n          <option key={view.key} value={view.key}>\n            {camelToWords(view.section) + ': ' + view.title}\n          </option>\n        ))}\n      </select>\n    ) : (\n      <span style={{ marginLeft: '8px', fontWeight: 'bold' }}>\n        {views[0] ? camelToWords(views[0].section) + ': ' + views[0].title : 'No views available'}\n      </span>\n    )}\n  </div>\n);\n\nconst ToolbarActions: FC<{\n  graph: GraphData;\n  onAutoLayout: () => void;\n  onSave: () => void;\n  onToggleHelp: () => void;\n  saving: boolean;\n  layouting: boolean;\n  dragMode: 'pan' | 'select';\n  setDragMode: (mode: 'pan' | 'select') => void;\n}> = ({\n  graph, onAutoLayout, onSave, onToggleHelp, saving, layouting,\n  dragMode, setDragMode\n}) => (\n  <div style={{ display: 'flex', alignItems: 'center' }}>\n    <div className=\"toolbar-group\">\n      <DragModeButton dragMode={dragMode} setDragMode={setDragMode} />\n    </div>\n    <div className=\"toolbar-group\">\n      <UndoRedoButtons graph={graph} />\n    </div>\n    <div className=\"toolbar-group\">\n      <AlignmentButtons graph={graph} />\n    </div>\n    <div className=\"toolbar-group\">\n      <LayoutControls onAutoLayout={onAutoLayout} layouting={layouting} />\n    </div>\n    <div className=\"toolbar-group\">\n      <GridControls graph={graph} />\n    </div>\n    <div className=\"toolbar-group\">\n      <ZoomControls graph={graph} />\n    </div>\n    <div className=\"toolbar-group\">\n      <SaveButton onSave={onSave} saving={saving} graph={graph} />\n    </div>\n    <div className=\"toolbar-group\">\n      <HelpButton onToggleHelp={onToggleHelp} />\n    </div>\n  </div>\n);\n\nconst DragModeButton: FC<{\n  dragMode: 'pan' | 'select';\n  setDragMode: (mode: 'pan' | 'select') => void;\n}> = ({ dragMode, setDragMode }) => (\n  <button \n    className={`mode-toggle ${dragMode === 'select' ? 'select-mode' : 'pan-mode'}`}\n    onClick={() => setDragMode(dragMode === 'pan' ? 'select' : 'pan')} \n    data-tooltip={dragMode === 'pan' ? \"Pan Mode: Drag to pan the view (T)\" : \"Select Mode: Drag to select elements, Shift+click to add/remove selection (T)\"}\n  >\n    {dragMode === 'pan' ? <i className=\"fas fa-hand-paper\"></i> : <i className=\"fas fa-mouse-pointer\"></i>}\n  </button>\n);\n\nconst UndoRedoButtons: FC<{ graph: GraphData }> = ({ graph }) => {\n  const modKey = getModifierKeyName();\n  return (\n    <>\n      <button onClick={() => graph.undo()} data-tooltip={`Undo the last change made to the diagram (${modKey}+Z)`}>\n        <i className=\"fas fa-undo\"></i>\n      </button>\n      <button onClick={() => graph.redo()} data-tooltip={`Redo the last undone action (${modKey}+Shift+Z / ${modKey}+Y)`}>\n        <i className=\"fas fa-redo\"></i>\n      </button>\n    </>\n  );\n};\n\nconst AlignmentButtons: FC<{ graph: GraphData }> = ({ graph }) => {\n  const modKey = getModifierKeyName();\n  return (\n    <>\n      <button onClick={() => graph.alignSelectionH()} data-tooltip={`Align all selected elements horizontally (left edges) (${modKey}+Shift+H)`}>\n        <i className=\"fas fa-align-left\"></i>\n      </button>\n      <button onClick={() => graph.alignSelectionV()} data-tooltip={`Align all selected elements vertically (top edges) (${modKey}+Shift+A)`}>\n        <i className=\"fas fa-align-left\" style={{transform: 'rotate(90deg)'}}></i>\n      </button>\n      <button onClick={() => graph.distributeSelectionH()} data-tooltip={`Distribute selected elements evenly horizontally (equal spacing) (${modKey}+Alt+H)`}>\n        <i className=\"fas fa-ellipsis-h\"></i>\n      </button>\n      <button onClick={() => graph.distributeSelectionV()} data-tooltip={`Distribute selected elements evenly vertically (equal spacing) (${modKey}+Alt+V)`}>\n        <i className=\"fas fa-ellipsis-v\"></i>\n      </button>\n    </>\n  );\n};\n\nconst LayoutControls: FC<{\n  onAutoLayout: () => void;\n  layouting: boolean;\n}> = ({ onAutoLayout, layouting }) => {\n  const modKey = getModifierKeyName();\n  return (\n    <button \n      onClick={onAutoLayout} \n      disabled={layouting} \n      data-tooltip={`Automatically arrange all elements using the Layered algorithm (${modKey}+L)`}\n    >\n      {layouting ? <i className=\"fas fa-spinner fa-spin\"></i> : <i className=\"fas fa-magic\"></i>}\n    </button>\n  );\n};\n\nconst GridControls: FC<{ graph: GraphData }> = ({ graph }) => {\n  const [gridVisible, setGridVisible] = useState(graph.isGridVisible());\n  const [snapToGrid, setSnapToGrid] = useState(graph.isSnapToGrid());\n  const modKey = getModifierKeyName();\n  \n  // Update state when graph changes or when grid state changes via shortcuts\n  React.useEffect(() => {\n    const updateGridState = () => {\n      setGridVisible(graph.isGridVisible());\n      setSnapToGrid(graph.isSnapToGrid());\n    };\n    \n    // Initial update\n    updateGridState();\n    \n    // Listen for grid state changes from keyboard shortcuts\n    window.addEventListener('gridStateChanged', updateGridState);\n    \n    return () => {\n      window.removeEventListener('gridStateChanged', updateGridState);\n    };\n  }, [graph]);\n  \n  const handleToggleGrid = () => {\n    graph.toggleGrid();\n    setGridVisible(graph.isGridVisible());\n  };\n  \n  const handleToggleSnap = () => {\n    graph.toggleSnapToGrid();\n    setSnapToGrid(graph.isSnapToGrid());\n  };\n  \n  const handleSnapAll = () => {\n    graph.snapAllToGrid();\n  };\n  \n  return (\n    <>\n      <button \n        className={gridVisible ? 'active-toggle' : 'inactive-toggle'}\n        onClick={handleToggleGrid} \n        data-tooltip={`Toggle grid visibility (${modKey}+G)`}\n      >\n        <i className=\"fas fa-th\"></i>\n      </button>\n      <button \n        className={snapToGrid ? 'active-toggle' : 'inactive-toggle'}\n        onClick={handleToggleSnap} \n        data-tooltip={`Toggle snap to grid (${modKey}+Shift+G)`}\n      >\n        <i className=\"fas fa-magnet\"></i>\n      </button>\n      <button \n        onClick={handleSnapAll} \n        disabled={!snapToGrid}\n        data-tooltip={`Snap all elements to grid (${modKey}+Alt+G)`}\n      >\n        <i className=\"fas fa-border-all\"></i>\n      </button>\n    </>\n  );\n};\n\nconst ZoomDisplay: FC = () => {\n  const [zoom, setZoomState] = useState(100);\n\n  useEffect(() => {\n    const updateZoom = () => {\n      const currentZoom = Math.round(getZoom() * 100);\n      setZoomState(currentZoom);\n    };\n\n    // Update zoom initially\n    updateZoom();\n\n    // Update zoom every 100ms to catch changes from wheel/keyboard/etc\n    const interval = setInterval(updateZoom, 100);\n\n    return () => clearInterval(interval);\n  }, []);\n\n  return (\n    <button \n      onClick={() => setZoomCentered(1)} \n      className=\"zoom-display\"\n      data-tooltip=\"Click to reset zoom to 100%\"\n    >\n      {zoom}%\n    </button>\n  );\n};\n\nconst ZoomControls: FC<{ graph: GraphData }> = ({ graph }) => {\n  const modKey = getModifierKeyName();\n  return (\n    <>\n      <button onClick={() => {\n        setZoomCentered(Math.max(0.1, getZoom() / 1.2));\n      }} data-tooltip={`Zoom out to see more of the diagram (${modKey}+-)`}>\n        <i className=\"fas fa-search-minus\"></i>\n      </button>\n      <ZoomDisplay />\n      <button onClick={() => {\n        setZoomCentered(Math.min(5, getZoom() * 1.2));\n      }} data-tooltip={`Zoom in to see details more clearly (${modKey}+=)`}>\n        <i className=\"fas fa-search-plus\"></i>\n      </button>\n      <button onClick={() => { graph.fitToView(); }} data-tooltip={`Fit diagram to view (${modKey}+9)`}>\n        <i className=\"fas fa-expand\"></i>\n      </button>\n    </>\n  );\n};\n\nconst SaveButton: FC<{\n  onSave: () => void;\n  saving: boolean;\n  graph: GraphData;\n}> = ({ onSave, saving, graph }) => {\n  const [hasChanges, setHasChanges] = useState(false);\n  const modKey = getModifierKeyName();\n  \n  // Check for changes periodically\n  useEffect(() => {\n    const checkChanges = () => {\n      setHasChanges(graph.changed());\n    };\n    \n    // Initial check\n    checkChanges();\n    \n    // Check every 100ms for changes\n    const interval = setInterval(checkChanges, 100);\n    \n    return () => clearInterval(interval);\n  }, [graph]);\n  \n  return (\n    <button \n      className={hasChanges ? \"grp\" : \"action\"} \n      disabled={saving} \n      onClick={onSave} \n      data-tooltip={`Save the current diagram layout (${modKey}+S)`}\n    >\n      {saving ? <i className=\"fas fa-spinner fa-spin\"></i> : <i className=\"fas fa-save\"></i>}\n    </button>\n  );\n};\n\nconst HelpButton: FC<{\n  onToggleHelp: () => void;\n}> = ({ onToggleHelp }) => {\n  return (\n    <button onClick={onToggleHelp} data-tooltip=\"Show keyboard shortcuts and help information (Shift+? / Shift+F1)\">\n      <i className=\"fas fa-question-circle\"></i>\n    </button>\n  );\n};","import React, { FC, useState, useCallback, useEffect, Suspense, lazy } from \"react\";\nimport { GraphData } from \"./graph-view/graph\";\nimport { BrowserRouter as Router, Routes, Route, useSearchParams } from 'react-router-dom';\nimport { listViews } from \"./parseModel\";\nimport { useGraph, useAutoLayout, useSave, useKeyboardShortcuts, clearGraphCache } from \"./hooks\";\nimport { Toolbar } from \"./components/Toolbar\";\nimport { removeEmptyProps, getCurrentViewID } from \"./utils\";\n\nconst Help = lazy(() => import(\"./shortcuts\").then(module => ({ default: module.Help })));\nconst Graph = lazy(() => import(\"./graph-view/graph-react\").then(module => ({ default: module.Graph })));\n\n// Types\ninterface ModelData {\n  model: any;\n  layout: any;\n}\n\nexport const Root: FC<ModelData> = ({ model, layout }) => (\n  <Router>\n    <Routes>\n      <Route path=\"/\" element={<ModelPane model={model} layouts={layout} />} />\n    </Routes>\n  </Router>\n);\n\nexport const refreshGraph = () => {\n  const currentID = getCurrentViewID();\n  clearGraphCache(currentID);\n};\n\nconst ModelPane: FC<{ model: any; layouts: any }> = ({ model, layouts }) => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const currentID = decodeURI(searchParams.get('id') || '');\n  \n  // UI State\n  const [helpVisible, setHelpVisible] = useState(false);\n  const [dragMode, setDragMode] = useState<'pan' | 'select'>('pan');\n  \n  // Get or create graph for current view\n  const graph = useGraph(model, layouts, currentID);\n  \n  // Custom hooks for functionality\n  const { layouting, handleAutoLayout } = useAutoLayout(graph || ({} as GraphData));\n  const { saving, handleSave } = useSave(graph || ({} as GraphData), currentID);\n  \n  if (!graph) {\n    return <ViewRedirect model={model} />;\n  }\n\n  const handleToggleHelp = useCallback(() => {\n    setHelpVisible(!helpVisible);\n  }, [helpVisible]);\n\n  // Update document title when view changes\n  useEffect(() => {\n    if (graph && graph.name) {\n      document.title = `${graph.name} - Model`;\n    }\n  }, [graph]);\n\n  // Setup keyboard shortcuts\n  useKeyboardShortcuts(handleToggleHelp, handleSave, graph, dragMode, setDragMode, handleAutoLayout);\n\n  const handleViewChange = useCallback((id: string) => {\n    setSearchParams({ id: encodeURIComponent(id) });\n  }, [setSearchParams]);\n\n  const handleSelect = useCallback((id: string | null) => {\n    if (id) {\n      const element = graph.metadata.elements.find((m: any) => m.id === id);\n      console.log(removeEmptyProps(element));\n    }\n  }, [graph]);\n\n\treturn (\n\t\t<>\n\t\t\t<Toolbar\n\t\t\t\tmodel={model}\n\t\t\t\tcurrentID={currentID}\n\t\t\t\tonViewChange={handleViewChange}\n\t\t\t\tgraph={graph}\n\t\t\t\tonAutoLayout={handleAutoLayout}\n\t\t\t\tonSave={handleSave}\n\t\t\t\tonToggleHelp={handleToggleHelp}\n\t\t\t\tsaving={saving}\n\t\t\t\tlayouting={layouting}\n\t\t\t\tdragMode={dragMode}\n\t\t\t\tsetDragMode={setDragMode}\n\t\t\t/>\n\t\t\t<Suspense fallback={<div>Loading graph...</div>}>\n\t\t\t\t<Graph \n\t\t\t\t\tkey={currentID}\n\t\t\t\t\tdata={graph}\n\t\t\t\t\tonSelect={handleSelect}\n\t\t\t\t\tdragMode={dragMode}\n\t\t\t\t/>\n\t\t\t</Suspense>\n\t\t\t{helpVisible && (\n\t\t\t\t<Suspense fallback={<div>Loading help...</div>}>\n\t\t\t\t\t<Help />\n\t\t\t\t</Suspense>\n\t\t\t)}\n\t\t</>\n\t);\n};\n\nconst ViewRedirect: FC<{ model: any }> = ({ model }) => {\n  const views = listViews(model);\n  \n  React.useEffect(() => {\n    // Set default title when no view is selected\n    document.title = 'Model - Architecture Diagrams as Code';\n    \n    if (views.length > 0) {\n      document.location.href = '?id=' + views[0].key;\n    }\n  }, [views]);\n\n  if (views.length > 0) {\n    return <>Redirecting to {views[0].title}</>;\n  }\n  return <>No views available</>;\n};\n\n"],"names":["___CSS_LOADER_EXPORT___","push","module","id","svgTextWrap","text","width","attrs","mt","svg","document","createElementNS","body","appendChild","measure","node","attr","setAttribute","createTextNode","_node$getBBox","getBBox","height","removeChild","clean","textMeasure","maxW","ret","trim","split","map","words","lines","currentLine","forEach","word","length","join","brokenParts","maxWidth","parts","currentPart","i","testPart","breakLongWord","Math","max","newLine","concat","size","reduce","a","v","create","element","type","arguments","undefined","className","el","Object","entries","_ref","_ref2","k","String","classList","add","use","this","setAttributeNS","path","_objectSpread","d","t","textContent","textArea","fontSize","bold","_this","x","y","anchor","_svgTextWrap","txt","line","span","dy","append","rect","r","rx","ry","icon","expand","expanded","g","transform","setPosition","insideBox","p","b","intersectRectFull","p1","p2","box","w","h","q","s","q1","q2","denominator","numerator1","numerator2","result","onLine1","onLine2","segmentIntersection","filter","intersectRect","intersectEllipse","ellCenter","nodeCenter","point","si","c","radicand_sqrt","sqrt","pos","project","atob","len","dot","min","cabDistance","abs","D3Element","_classCallCheck","_el","key","value","name","insertBefore","querySelector","parent","bbox","rounded","shapeSvg","insert","intersect","_ellipse","mobiledeviceportrait","shapes","roundedbox","component","dx","cylinder","shape","cy","person","circle","ellipse","hexagon","sz","n","folder","mobiledevicelandscape","mobiledevice","pipe","robot","headW","webbrowser","e","Symbol","iterator","o","toStringTag","prototype","Generator","u","_regeneratorDefine2","f","G","bind","l","TypeError","call","done","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","setPrototypeOf","__proto__","displayName","_regenerator","m","defineProperty","enumerable","configurable","writable","_invoke","_toConsumableArray","Array","isArray","_arrayLikeToArray","_arrayWithoutHoles","from","_iterableToArray","toString","slice","constructor","test","_unsupportedIterableToArray","_nonIterableSpread","asyncGeneratorStep","Promise","resolve","then","getEffectiveSpacing","_userOptions$nodeSpac","_userOptions$layerSpa","userOptions","isGroup","effectiveConfig","nodeSpacing","layerSpacing","componentSpacing","padding","groupMultiplier","getELKOptions","spacing","_userOptions$directio","direction","_userOptions$compactL","compactLayout","baseOptions","autoLayout","_x","_autoLayout","apply","_callee","graph","options","ELK","elk","rootSpacing","elkGraph","nodeMap","processedGroups","nodeToGroupMap","layoutedGraph","nodes","edges","_extractNodes","_processEdges","minX","minY","offsetX","offsetY","_t","_args","_context","layoutOptions","children","Map","nodesMap","set","Set","groupsMap","group","has","groupSpacing","groupNode","member","nodeIndex","findIndex","splice","edge","_edge$vertices","fromGroup","get","toGroup","to","elkEdge","sources","targets","sections","vertices","startPoint","endPoint","bendPoints","groupContainer","find","layout","extractNodes","container","_container$children","child","processEdges","_container$edges","_container$children2","label","section","bp","midIndex","floor","v1","v2","vertex","console","warn","createFallbackLayout","_next","_throw","maxCols","ceil","col","Undo","exportDoc","importDoc","func","timeout","_defineProperty","change","saveNow","context","clearTimeout","setTimeout","tmpPreviousState","deepClone","versions","Error","doc","structuredClone","JSON","parse","stringify","lastSavedPos","_slicedToArray","_arrayWithHoles","next","_iterableToArrayLimit","_nonIterableRest","ownKeys","keys","getOwnPropertySymbols","getOwnPropertyDescriptor","getOwnPropertyDescriptors","defineProperties","_defineProperties","_toPropertyKey","_typeof","toPrimitive","_toPrimitive","clickListener","defaultEdgeStyle","thickness","color","opacity","dashed","defaultNodeStyle","background","stroke","GraphData","edgeVertices","_undo","exportLayout","lo","importLayout","window","_this2","currentState","sub","description","style","isPersonShape","toLowerCase","cleanStyle","title","values","fromNode","toNode","_this3","initVertex","round","random","nodesOrGroups","_this4","error","Boolean","selected","ref","remove","updateEdgesSel","disableSnap","skipUndo","_snapToGrid","snapped","snapToGrid","beforeChange","redrawEdges","redrawGroups","redrawEdge","_this5","moveNode","moveEdgeVertex","isLabel","auto","indexOf","changed","undo","redo","_this6","contentBounds","calculateContentBounds","_skipAutoFit","bb","zoom","currentZoom","getZoom","zoomGroup","parentElement","clientWidth","svgPadding","clientHeight","clearViewState","updatePanning","_this7","buildEdge","buildGroup","originalSvg","exportSvg","cloneNode","exportElastic","exportWidth","exportHeight","exportZoomGroup","script","createElement","metadata","replace","firstChild","outerHTML","Infinity","maxX","maxY","left","right","top","bottom","centerX","centerY","approxLabelSize","full","lst","setSaved","_this8","rerender","coordinates","startsWith","_ref3","_ref4","normalizedPoint","assign","_this9","an","clear","ae","labelVertex","fitToView","_autoLayout2","_this0","_this1","_this10","selectedNodes","selectedVertices","allElements","sort","index","newX","_this11","newY","setNodeSelected","_svg$parentElement","_svg$parentElement2","viewportWidth","viewportHeight","zoomX","zoomY","optimalZoom","finalZoom","translateX","translateY","saveViewState","state","_gridVisible","_gridSize","updateGridDisplay","dispatchEvent","CustomEvent","_this12","snappedX","snappedY","existingGrid","existingGridRect","defs","pattern","addEventListener","selectListener","buildGraph","data","onNodeSelect","dragMode","innerHTML","__data","_buildGraph","elasticEl","addCursorInteraction","setZoom","zoomG","nodesG","edgesG","groupsG","gdata","shapeType","applyStyle","styles","nodeBorder","setBorderStyle","border","tg","Number","getAttribute","maxTextWidth","textPadding","_create$textArea2","nodeText","_create$textArea3","buildNode","n1","n2","position","tmp","sameEdges","spreadPos","spreadX","spreadY","unshift","pLabel","distance","sum","acc","_buildEdgeLabel","_create$textArea","edgeText","bg","edgeRect","buildEdgeLabel","segments","reverse","s2","intersectPolylineBox","cx","fill","p0","pad","groupRect","groupText","findClosestSegment","fnd","dst","POSITIVE_INFINITY","prj","pts","mouseToDrawing","getBoundingClientRect","z","currentTransform","getCurrentTransform","clientX","clientY","addCustomCursorInteraction","conn","ini","elastic","isPanning","initialTransform","pendingSelectionChange","hasDragged","eventListeners","md","convertEvent","changedTouches","onMouseMoveHandler","getSelection","setSelection","setTransform","drawingDx","drawingDy","item","setDragging","update","onMouseMove","ex","ey","onMouseUpHandler","removeEventListener","end","boxSelection","shiftKey","graphData","onMouseUp","onMouseDownHandler","preventDefault","nodeFromEvent","isSelected","translateMatch","match","parseFloat","getCurrentTransformLocal","startDrawingX","startDrawingY","pt","currentPt","currentDrawingX","currentDrawingY","createElastic","onMouseDown","event","handler","addDnd","_ref5","existingCleanup","__cursorInteractionCleanup","getData","gd","beforeUnloadHandler","returnValue","setDotSelected","dotEl","mouseMoveHandler","altKey","removePrjDot","keyUpHandler","findShortcut","ADD_VERTEX","ADD_LABEL_VERTEX","clickHandler","insertEdgeVertex","wheelHandler","delta","sign","deltaY","newZoom","setZoomCentered","keyDownHandler","shortcut","DEL_VERTEX","deleteEdgeVertex","UNDO","REDO","ZOOM_IN","ZOOM_OUT","ZOOM_100","ZOOM_FIT","SELECT_ALL","DESELECT","customInteractionCleanup","target","closest","handles","some","handle","b1","b2","_ref6","scaleMatch","oldZoom","newTranslateX","newTranslateY","cursor","viewStateCache","graphId","restoreViewState","isMac","navigator","userAgentData","platform","includes","userAgent","KeyboardEvent","metaKey","getModifierKeyName","getModifierKeyProperty","ctrlKey","SAVE","MOVE_LEFT","MOVE_RIGHT","MOVE_UP","MOVE_DOWN","MOVE_LEFT_FINE","MOVE_RIGHT_FINE","MOVE_UP_FINE","MOVE_DOWN_FINE","PAN_VIEW","SELECT_ELEMENT","MULTI_SELECT","BOX_SELECT","MOVE_ELEMENTS","HELP","TOGGLE_DRAG_MODE","ALIGN_HORIZONTAL","ALIGN_VERTICAL","DISTRIBUTE_HORIZONTAL","DISTRIBUTE_VERTICAL","AUTO_LAYOUT","RESET_POSITION","TOGGLE_GRID","TOGGLE_SNAP_TO_GRID","SNAP_ALL_TO_GRID","shortcuts","list","help","combinations","shift","ctrl","alt","click","wheel","shortcutMap","matches","ke","checkKey","aShortcut","bShortcut","aModifiers","bModifiers","aCount","comboText","toUpperCase","Help","React","colSpan","styleTagTransform","setAttributes","domAPI","insertStyleElement","locals","Timer","_createClass","callback","running","timeoutId","stop","RefreshConnector","fileChangeHandler","DEFAULT_OPTIONS","uri","nextDelay","minDelay","handshakeTimeout","handleHandshakeTimeout","reconnectTimer","attemptReconnection","connectionDesired","isSocketConnected","prepareForConnection","createWebSocket","disconnectionReason","socket","close","readyState","WebSocket","OPEN","onopen","handleOpen","onclose","handleClose","onmessage","handleMessage","onerror","handleError","startHandshake","log","scheduleReconnection","message","processMessage","command","handleHelloMessage","handleReloadMessage","connect","helloMessage","protocols","LIVERELOAD_PROTOCOLS","ver","sendCommand","start","isRunning","maxDelay","send","Root","lazy","default","App","_useState2","useState","loading","setState","loadData","_yield$Promise$all","_yield$Promise$all2","modelResponse","layoutResponse","_yield$Promise$all3","_yield$Promise$all4","model","prev","all","fetch","ok","statusText","json","handleFileChange","endsWith","refreshGraph","useEffect","LoadingScreen","ErrorScreen","onRetry","Suspense","fallback","display","justifyContent","alignItems","fontFamily","whiteSpace","flexDirection","onClick","backgroundColor","borderRadius","getElementById","createRoot","render","lookupElementKeyView","softwareSystemId","views","listViews","viewsList","_asyncToGenerator","graphs","camelToWords","camel","charAt","Toolbar","currentID","onViewChange","onAutoLayout","onSave","onToggleHelp","saving","layouting","setDragMode","ViewSelector","ToolbarActions","onChange","disabled","hidden","view","marginLeft","fontWeight","DragModeButton","UndoRedoButtons","AlignmentButtons","LayoutControls","GridControls","ZoomControls","SaveButton","HelpButton","modKey","alignSelectionH","alignSelectionV","distributeSelectionH","distributeSelectionV","_ref7","_ref8","isGridVisible","gridVisible","setGridVisible","_useState4","isSnapToGrid","setSnapToGrid","updateGridState","toggleGrid","toggleSnapToGrid","snapAllToGrid","ZoomDisplay","_useState6","setZoomState","updateZoom","interval","setInterval","clearInterval","_ref9","_ref0","_useState8","hasChanges","setHasChanges","checkChanges","_ref1","Graph","Router","Routes","Route","ModelPane","layouts","URLSearchParams","location","search","_useSearchParams2","useSearchParams","searchParams","setSearchParams","decodeURI","helpVisible","setHelpVisible","viewKey","elements","relations","collectRels","relationships","rel","people","softwareSystems","containers","el1","components","el2","deploymentNodes","recAddNodes","containerInstances","containerId","infrastructureNodes","_getView","getView","version","groupingIDs","enterprise","tags","technology","tag","addNode","properties","elementViewKey","sourceId","destinationId","routing","addEdge","level","groupMembers","addGroup","init","parseView","useGraph","_useAutoLayout","setLayouting","handleAutoLayout","useCallback","alert","useAutoLayout","_useSave","setSaving","handleSave","_callee2","_t2","_context2","encodeURIComponent","method","exportSVG","status","useSave","ViewRedirect","handleToggleHelp","toggleHelp","saveLayout","handleKeyDown","resetView","moveSelected","getGridSize","useKeyboardShortcuts","handleViewChange","handleSelect","obj","onSelect","href"],"sourceRoot":""}