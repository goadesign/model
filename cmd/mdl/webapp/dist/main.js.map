{"version":3,"file":"main.js","mappings":";wIAGIA,E,MAA0B,GAA4B,KAE1DA,EAAwBC,KAAK,CAACC,EAAOC,GAAI,kxQAoYrC,GAAG,CAAC,QAAU,EAAE,QAAU,CAAC,6BAA6B,MAAQ,GAAG,SAAW,0oGAA0oG,eAAiB,CAAC,mxQAAqxQ,WAAa,MAEhhX,S,2CCnYO,IAAMC,EAAQ,WACnB,GAAyB,oBAAdC,UAA2B,OAAO,EAG7C,GAAI,kBAAmBA,WAAcA,UAAkBC,cAAe,CACpE,IAAMC,EAAYF,UAAkBC,cAAcC,SAClD,GAAIA,GAAYA,EAASC,cAAcC,SAAS,OAC9C,OAAO,CAEX,CAGA,IAAMC,EAAYL,UAAUK,UAAUF,cACtC,GAAIE,EAAUD,SAAS,WAAaC,EAAUD,SAAS,aACrD,OAAO,EAIT,GAAIJ,UAAUE,SAAU,CACtB,IAAMA,EAAWF,UAAUE,SAASC,cACpC,GAAID,EAASE,SAAS,QAAUF,EAASE,SAAS,UAChD,OAAO,CAEX,CAGA,IAEE,QAA0BE,IADR,IAAIC,cAAc,UAAW,CAAEC,SAAS,IAC5CA,QAEZ,MAAO,mBAAmBC,KAAKT,UAAUK,UAE7C,CAAE,MAAOK,GACP,CAGF,OAAO,CACT,EAKaC,EAAqB,WAChC,OAAOZ,IAAU,MAAQ,MAC3B,EAKaa,EAAyB,SAACC,GACrC,OAAOd,IAAUc,EAAML,QAAUK,EAAMC,OACzC,C,quBCzCaC,EAAO,OAEPC,EAAO,OACPC,EAAO,OACPC,EAAa,aACbC,EAAmB,mBACnBC,EAAa,aAEbC,EAAU,UACVC,EAAW,WACXC,EAAW,WACXC,EAAW,WAEXC,EAAa,aACbC,EAAW,WAEXC,EAAY,YACZC,EAAa,aACbC,EAAU,UACVC,EAAY,YACZC,EAAiB,iBACjBC,EAAkB,kBAClBC,EAAe,eACfC,EAAiB,iBAEjBC,EAAW,WACXC,EAAiB,iBACjBC,EAAe,eACfC,EAAa,aACbC,EAAgB,gBAEhBC,EAAO,OAGPC,EAAmB,mBACnBC,EAAmB,mBACnBC,EAAiB,iBACjBC,EAAwB,wBACxBC,EAAsB,sBACtBC,EAAc,cACdC,EAAiB,iBACjBC,EAAc,cACdC,EAAsB,sBACtBC,EAAmB,mBAE1BC,EAAkD,CACvD,CACCC,KAAM,OACNC,KAAM,CACL,CACCvD,GAAI0C,EACJc,KAAM,sBACNC,aAAc,CACb,CAACC,IAAK,IAAKC,OAAO,GAClB,CAACD,IAAK,KAAMC,OAAO,OAKvB,CACCL,KAAM,OACNC,KAAM,CACL,CACCvD,GAAIiB,EACJuC,KAAM,OACNC,aAAc,CAAC,CAACC,IAAK,IAAKE,MAAM,OAInC,CACCN,KAAM,UACNC,KAAM,CACL,CACCvD,GAAIkB,EACJsC,KAAM,OACNC,aAAc,CACb,CAACG,MAAM,EAAMF,IAAK,OAGpB,CACC1D,GAAImB,EACJqC,KAAM,OACNC,aAAc,CACb,CAACG,MAAM,EAAMD,OAAO,EAAMD,IAAK,KAC/B,CAACE,MAAM,EAAMF,IAAK,SAMtB,CACCJ,KAAM,uBACNC,KAAM,CACL,CACCvD,GAAIoB,EACJoC,KAAM,0BACNC,aAAc,CACb,CAACI,KAAK,EAAMC,OAAO,KAGrB,CACC9D,GAAIqB,EACJmC,KAAM,uCACNC,aAAc,CACb,CAACI,KAAK,EAAMF,OAAO,EAAMG,OAAO,KAGlC,CACC9D,GAAIsB,EACJkC,KAAM,6BACNC,aAAc,CACb,CAACC,IAAK,UACN,CAACA,IAAK,iBAKV,CACCJ,KAAM,OACNC,KAAM,CACL,CACCvD,GAAIuB,EACJiC,KAAM,UACNC,aAAc,CACb,CAACG,MAAM,EAAMF,IAAK,OAGpB,CACC1D,GAAIwB,EACJgC,KAAM,WACNC,aAAc,CACb,CAACG,MAAM,EAAMF,IAAK,OAGpB,CACC1D,GAAIyB,EACJ+B,KAAM,aACNC,aAAc,CAAC,CAACG,MAAM,EAAMF,IAAK,OAElC,CACC1D,GAAI0B,EACJ8B,KAAM,YACNC,aAAc,CAAC,CAACG,MAAM,EAAMF,IAAK,OAElC,CACC1D,GAAI,aACJwD,KAAM,+BACNC,aAAc,CAAC,CAACM,OAAO,OAI1B,CACCT,KAAM,qBACNC,KAAM,CACL,CACCvD,GAAIqC,EACJmB,KAAM,8BACNC,aAAc,CAAC,CAACK,OAAO,KAExB,CACC9D,GAAIsC,EACJkB,KAAM,iBACNC,aAAc,CAAC,CAACK,OAAO,KAExB,CACC9D,GAAIuC,EACJiB,KAAM,4BACNC,aAAc,CAAC,CAACE,OAAO,EAAMG,OAAO,KAErC,CACC9D,GAAIwC,EACJgB,KAAM,mCACNC,aAAc,CAAC,CAACE,OAAO,EAAMG,OAAO,KAErC,CACC9D,GAAIyC,EACJe,KAAM,yBACNC,aAAc,CAAC,CAACK,OAAO,OAI1B,CACCR,KAAM,SACNC,KAAM,CACL,CACCvD,GAAI2B,EACJ6B,KAAM,aACNC,aAAc,CAAC,CAACG,MAAM,EAAMF,IAAK,OAElC,CACC1D,GAAI4B,EACJ4B,KAAM,WACNC,aAAc,CAAC,CAACC,IAAK,WAIxB,CACCJ,KAAM,OACNC,KAAM,CACL,CACCvD,GAAI+B,EACJyB,KAAM,2BACNC,aAAc,CAAC,CAACC,IAAK,QAEtB,CACC1D,GAAImC,EACJqB,KAAM,oBACNC,aAAc,CAAC,CAACC,IAAK,KAAMC,OAAO,KAEnC,CACC3D,GAAI8B,EACJ0B,KAAM,8BACNC,aAAc,CAAC,CAACC,IAAK,WAEtB,CACC1D,GAAIkC,EACJsB,KAAM,uBACNC,aAAc,CAAC,CAACC,IAAK,QAASC,OAAO,KAEtC,CACC3D,GAAIgC,EACJwB,KAAM,6BACNC,aAAc,CAAC,CAACC,IAAK,UAEtB,CACC1D,GAAIoC,EACJoB,KAAM,sBACNC,aAAc,CAAC,CAACC,IAAK,OAAQC,OAAO,KAErC,CACC3D,GAAI6B,EACJ2B,KAAM,6BACNC,aAAc,CAAC,CAACC,IAAK,UAEtB,CACC1D,GAAIiC,EACJuB,KAAM,sBACNC,aAAc,CAAC,CAACC,IAAK,OAAQC,OAAO,OAIrC,CACAL,KAAM,OACNC,KAAM,CACL,CACCvD,GAAI2C,EACJa,KAAM,qCACNC,aAAc,CAAC,CAACC,IAAK,OAEtB,CACC1D,GAAIiD,EACJO,KAAM,0BACNC,aAAc,CAAC,CAACC,IAAK,OAAQE,MAAM,OAIvC,CACCN,KAAM,YACNC,KAAM,CACL,CACCvD,GAAI4C,EACJY,KAAM,uCACNC,aAAc,CAAC,CAACC,IAAK,IAAKE,MAAM,EAAMD,OAAO,KAE9C,CACC3D,GAAI6C,EACJW,KAAM,qCACNC,aAAc,CAAC,CAACC,IAAK,IAAKE,MAAM,EAAMD,OAAO,KAE9C,CACC3D,GAAI8C,EACJU,KAAM,4CACNC,aAAc,CAAC,CAACC,IAAK,IAAKE,MAAM,EAAMC,KAAK,KAE5C,CACC7D,GAAI+C,EACJS,KAAM,0CACNC,aAAc,CAAC,CAACC,IAAK,IAAKE,MAAM,EAAMC,KAAK,OAI9C,CACCP,KAAM,SACNC,KAAM,CACL,CACCvD,GAAIgD,EACJQ,KAAM,2BACNC,aAAc,CAAC,CAACC,IAAK,IAAKE,MAAM,OAInC,CACCN,KAAM,OACNC,KAAM,CACL,CACCvD,GAAIkD,EACJM,KAAM,yBACNC,aAAc,CAAC,CAACC,IAAK,IAAKE,MAAM,KAEjC,CACC5D,GAAImD,EACJK,KAAM,sBACNC,aAAc,CAAC,CAACC,IAAK,IAAKE,MAAM,EAAMD,OAAO,KAE9C,CACC3D,GAAIoD,EACJI,KAAM,4BACNC,aAAc,CAAC,CAACC,IAAK,IAAKE,MAAM,EAAMC,KAAK,QAMzCG,EAAcX,EAClBY,OAAO,SAACC,EAAKC,GAAC,OAAKD,EAAIE,OAAOD,EAAEZ,KAAK,EAAE,IACvCU,OAAkC,SAACI,EAAKF,GAExC,OADAE,EAAIF,EAAEnE,IAAMmE,EACLE,CACR,EAAG,CAAC,GA4BQC,EAAe,SAAC1D,GAAgE,IAAjCkD,EAAKS,UAAAC,OAAA,QAAAhE,IAAA+D,UAAA,IAAAA,UAAA,GAAUR,EAAKQ,UAAAC,OAAA,QAAAhE,IAAA+D,UAAA,IAAAA,UAAA,GAEzEE,EAAUC,OAAOC,KAAKX,GAAaY,OAAO,SAAAC,GAAC,OA5BjC,SAACjE,EAA+BkE,EAAoBhB,EAAgBC,GACpF,OAAOe,EAASrB,aAAasB,KAAK,SAAAC,GACjC,GAAIC,QAAQD,EAAErB,QAAU/C,EAAEsE,SAAU,OAAO,EAE3C,GAAIF,EAAEpB,QACe9C,EAAAA,EAAAA,IAAuBF,GACzB,OAAO,EAE1B,GAAIqE,QAAQD,EAAEnB,MAAQjD,EAAEuE,OAAQ,OAAO,EACvC,GAAIrB,EAAO,OAAOkB,EAAElB,MACpB,GAAIC,EAAO,OAAOiB,EAAEjB,MACpB,GAAIiB,EAAEtB,IAAK,CACV,IAAM0B,EAAKxE,EACX,MAAa,UAAToE,EAAEtB,IAAkC,UAAV0B,EAAG1B,IACpB,aAATsB,EAAEtB,IAAqC,aAAV0B,EAAG1B,IACvB,OAATsB,EAAEtB,IAA+B,UAAV0B,EAAG1B,IACjB,MAATsB,EAAEtB,IAA8B,WAAV0B,EAAG1B,IAChB,QAATsB,EAAEtB,IAAgC,aAAV0B,EAAG1B,IAClB,QAATsB,EAAEtB,IAAgC,aAAV0B,EAAG1B,IAClB,SAATsB,EAAEtB,IAAiC,cAAV0B,EAAG1B,IACzBsB,EAAEtB,KAAO0B,EAAG1B,KAAOsB,EAAEtB,IAAIrD,eAAiB+E,EAAG1B,IAAIrD,aACzD,CACA,OAAO,CACR,EACD,CAIsDgF,CAASzE,EAAGoD,EAAYa,GAAIf,EAAOC,EAAM,GAE9F,GAAuB,IAAnBU,EAAQD,OACZ,OAAuB,IAAnBC,EAAQD,OAAqBC,EAAQ,GAInBA,EAAQa,KAAK,SAACC,EAAGC,GACtC,IAAMC,EAAYzB,EAAYuB,GACxBG,EAAY1B,EAAYwB,GAExBG,EAAaF,EAAUhC,aAAa,GACpCmC,EAAaF,EAAUjC,aAAa,GAEpCoC,GAAUF,EAAWhC,MAAQ,EAAI,IAAMgC,EAAW/B,KAAO,EAAI,IAAM+B,EAAW9B,IAAM,EAAI,GAG9F,OAFgB+B,EAAWjC,MAAQ,EAAI,IAAMiC,EAAWhC,KAAO,EAAI,IAAMgC,EAAW/B,IAAM,EAAI,GAE9EgC,CACjB,GAEqB,EACtB,EAEMC,EAAY,SAACd,GAClB,MAAO,CACNA,EAAEpB,OAAQ/C,EAAAA,EAAAA,MAAqBkF,cAC/Bf,EAAErB,OAAS,QACXqB,EAAEnB,KAAO,MACTmB,EAAEtB,MAAQsB,EAAEtB,IAAIc,OAAS,EAAIQ,EAAEtB,IAAM,IAAHU,OAAOY,EAAEtB,IAAIqC,cAAa,MAC5Df,EAAElB,OAAS,QACXkB,EAAEjB,OAAS,SACVa,OAAOK,SAASe,KAAK,MACxB,EAEaC,EAAW,WACvB,OAAOC,EAAAA,cAAA,OAAKC,UAAU,WACrBD,EAAAA,cAAA,UAAI,aACJA,EAAAA,cAAA,aACCA,EAAAA,cAAA,aAEC7C,EAAUgB,IAAI,SAAA+B,GAAO,OAAIF,EAAAA,cAAAA,EAAAA,SAAA,KACxBA,EAAAA,cAAA,UACCA,EAAAA,cAAA,MAAIG,QAAS,GAAID,EAAQ9C,OAEzB8C,EAAQ7C,KAAKc,IAAI,SAAAiC,GAAI,OAAIJ,EAAAA,cAAA,UACzBA,EAAAA,cAAA,UAAKI,EAAK7C,aAAaY,IAAIyB,GAAWE,KAAK,OAC3CE,EAAAA,cAAA,UAAKI,EAAK9C,MACN,GACH,KAKP,C,kKCxZI+C,EAAU,CAAC,E,kiDAEfA,EAAQC,kBAAoB,IAC5BD,EAAQE,cAAgB,IACxBF,EAAQG,OAAS,SAAc,KAAM,QACrCH,EAAQI,OAAS,IACjBJ,EAAQK,mBAAqB,IAEhB,IAAI,IAASL,GAKJ,KAAW,IAAQM,QAAS,IAAQA,O,WCXpDC,EAAK,WAaT,OAAAC,EAPD,SAAAD,EAAYE,GAAsB,IAAAC,EAAA,KAAAC,EAAA,KAAAJ,GAAAK,EAAA,gBAHP,GAAKA,EAAA,iBAC0B,MAGzDC,KAAKJ,SAAWA,EAChBI,KAAKC,QAAU,WACdJ,EAAKK,SAAU,EACfL,EAAKM,UAAY,KACjBN,EAAKD,UACN,CACD,EAAC,EAAAtD,IAAA,QAAA8D,MAED,SAAMC,GACDL,KAAKE,SACRF,KAAKM,OAENN,KAAKG,UAAYI,WAAWP,KAAKC,QAASI,GAC1CL,KAAKE,SAAU,CAChB,GAAC,CAAA5D,IAAA,OAAA8D,MAED,WACKJ,KAAKE,SAA8B,OAAnBF,KAAKG,YACxBK,aAAaR,KAAKG,WAClBH,KAAKE,SAAU,EACfF,KAAKG,UAAY,KAEnB,GAAC,CAAA7D,IAAA,YAAA8D,MAED,WACC,OAAOJ,KAAKE,OACb,IAAC,CAjCS,GAuCEO,EAAgB,WAwB5B,SAAAA,EAAYC,EAA2CvB,GAAsC,IAAAwB,EAAA,KAAAb,EAAA,KAAAW,GAAAV,EAAA,cAR1D,MAAIA,EAAA,0BAEF,GAAKA,EAAA,2BACJ,IAMrCC,KAAKU,kBAAoBA,EACzBV,KAAKb,QAAOyB,EAAAA,EAAA,GAAQH,EAAiBI,iBAAoB1B,GACzDa,KAAKc,IAAM,kCACXd,KAAKe,UAAYf,KAAKb,QAAQ6B,SAE9BhB,KAAKiB,iBAAmB,IAAIvB,EAAM,kBAAMiB,EAAKO,wBAAwB,GACrElB,KAAKmB,eAAiB,IAAIzB,EAAM,kBAAMiB,EAAKS,qBAAqB,EACjE,CAAC,OAAAzB,EAAAc,EAAA,EAAAnE,IAAA,UAAA8D,MAED,WACCJ,KAAKqB,mBAAoB,EAErBrB,KAAKsB,sBAITtB,KAAKuB,uBACLvB,KAAKwB,kBACN,GAAC,CAAAlF,IAAA,aAAA8D,MAED,WACCJ,KAAKqB,mBAAoB,EACzBrB,KAAKmB,eAAeb,OAEhBN,KAAKsB,sBACRtB,KAAKyB,oBAAsB,SAC3BzB,KAAK0B,OAAQC,QAEf,GAAC,CAAArF,IAAA,oBAAA8D,MAED,WACC,OAAuB,OAAhBJ,KAAK0B,QAAmB1B,KAAK0B,OAAOE,aAAeC,UAAUC,IACrE,GAAC,CAAAxF,IAAA,uBAAA8D,MAED,WACCJ,KAAKmB,eAAeb,OACpBN,KAAKyB,oBAAsB,gBAC5B,GAAC,CAAAnF,IAAA,kBAAA8D,MAED,WAAgC,IAAA2B,EAAA,KAC/B/B,KAAK0B,OAAS,IAAIG,UAAU7B,KAAKc,KACjCd,KAAK0B,OAAOM,OAAS,kBAAMD,EAAKE,YAAY,EAC5CjC,KAAK0B,OAAOQ,QAAU,kBAAMH,EAAKI,aAAa,EAC9CnC,KAAK0B,OAAOU,UAAY,SAACzI,GAAK,OAAKoI,EAAKM,cAAc1I,EAAM,EAC5DqG,KAAK0B,OAAOY,QAAU,kBAAMP,EAAKQ,aAAa,CAC/C,GAAC,CAAAjG,IAAA,aAAA8D,MAED,WACCJ,KAAKyB,oBAAsB,mBAC3BzB,KAAKwC,gBACN,GAAC,CAAAlG,IAAA,cAAA8D,MAED,WACCqC,QAAQC,IAAI,2BAAD1F,OAA4BgD,KAAKyB,oBAAmB,eAAAzE,OAAcgD,KAAKe,UAAS,OAC3Ff,KAAK2C,sBACN,GAAC,CAAArG,IAAA,gBAAA8D,MAED,SAAsBzG,GACrB,IACC,IAAMiJ,EAA6BC,KAAKC,MAAMnJ,EAAMoJ,MACpD/C,KAAKgD,eAAeJ,EACrB,CAAE,MAAOK,GACRR,QAAQQ,MAAM,qCAAsCA,EACrD,CACD,GAAC,CAAA3G,IAAA,cAAA8D,MAED,WACC,GACA,CAAA9D,IAAA,iBAAA8D,MAED,SAAuBwC,GACtB,OAAQA,EAAQM,SACf,IAAK,QACJlD,KAAKmD,qBACL,MACD,IAAK,SACJnD,KAAKoD,oBAAoBR,GACzB,MACD,QACCH,QAAQC,IAAI,sCAAuCE,GAEtD,GAAC,CAAAtG,IAAA,qBAAA8D,MAED,WACCJ,KAAKiB,iBAAiBX,OACtBN,KAAKe,UAAYf,KAAKb,QAAQ6B,QAC/B,GAAC,CAAA1E,IAAA,sBAAA8D,MAED,SAA4BwC,GAG3B5C,KAAKmB,eAAeb,OACpBN,KAAKqD,UAEDT,EAAQU,MACXtD,KAAKU,kBAAkBkC,EAAQU,KAEjC,GAAC,CAAAhH,IAAA,iBAAA8D,MAED,WACC,IAAMmD,EAAkC,CACvCL,QAAS,QACTM,UAAW/C,EAAiBgD,qBAC5BC,IAAK,SAGN1D,KAAK2D,YAAYJ,GACjBvD,KAAKiB,iBAAiB2C,MAAM5D,KAAKb,QAAQ8B,iBAC1C,GAAC,CAAA3E,IAAA,yBAAA8D,MAED,WACKJ,KAAKsB,sBACRtB,KAAKyB,oBAAsB,oBAC3BzB,KAAK0B,OAAQC,QAEf,GAAC,CAAArF,IAAA,sBAAA8D,MAED,WACKJ,KAAKqB,mBACRrB,KAAKqD,SAEP,GAAC,CAAA/G,IAAA,uBAAA8D,MAED,WACMJ,KAAKqB,oBAILrB,KAAKmB,eAAe0C,cACxB7D,KAAKmB,eAAeyC,MAAM5D,KAAKe,WAC/Bf,KAAKe,UAAY+C,KAAKC,IAAI/D,KAAKb,QAAQ6E,SAA2B,EAAjBhE,KAAKe,YAExD,GAAC,CAAAzE,IAAA,cAAA8D,MAED,SAAoB8C,GACflD,KAAKsB,qBACRtB,KAAK0B,OAAQuC,KAAKpB,KAAKqB,UAAUhB,GAEnC,IAAC,CAnK2B,G,mPCnD7B,IAAA1J,EAAA2K,EAAAC,EAAA,mBAAAC,OAAAA,OAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,aAAA,yBAAAC,EAAAN,EAAAE,EAAAE,EAAAE,GAAA,IAAA9G,EAAA0G,GAAAA,EAAAK,qBAAAC,EAAAN,EAAAM,EAAAC,EAAAvH,OAAAwH,OAAAlH,EAAA+G,WAAA,OAAAI,EAAAF,EAAA,mBAAAT,EAAAE,EAAAE,GAAA,IAAAE,EAAA9G,EAAAiH,EAAAG,EAAA,EAAAC,EAAAT,GAAA,GAAAU,GAAA,EAAAC,EAAA,CAAAF,EAAA,EAAAX,EAAA,EAAAc,EAAA5L,EAAA2E,EAAAkH,EAAAL,EAAAK,EAAAC,KAAA9L,EAAA,GAAA6L,EAAA,SAAAlB,EAAAC,GAAA,OAAAM,EAAAP,EAAAvG,EAAA,EAAAiH,EAAArL,EAAA2L,EAAAb,EAAAF,EAAAjG,CAAA,YAAAkH,EAAAjB,EAAAE,GAAA,IAAA1G,EAAAwG,EAAAS,EAAAP,EAAAH,EAAA,GAAAe,GAAAF,IAAAR,GAAAL,EAAAc,EAAA7H,OAAA+G,IAAA,KAAAK,EAAAE,EAAAO,EAAAd,GAAAkB,EAAAF,EAAAF,EAAAM,EAAAb,EAAA,GAAAN,EAAA,GAAAI,EAAAe,IAAAjB,KAAAO,EAAAH,GAAA9G,EAAA8G,EAAA,OAAA9G,EAAA,MAAA8G,EAAA,GAAAA,EAAA,GAAAlL,GAAAkL,EAAA,IAAAW,KAAAb,EAAAJ,EAAA,GAAAiB,EAAAX,EAAA,KAAA9G,EAAA,EAAAuH,EAAAC,EAAAd,EAAAa,EAAAb,EAAAI,EAAA,IAAAW,EAAAE,IAAAf,EAAAJ,EAAA,GAAAM,EAAA,GAAAJ,GAAAA,EAAAiB,KAAAb,EAAA,GAAAN,EAAAM,EAAA,GAAAJ,EAAAa,EAAAb,EAAAiB,EAAA3H,EAAA,OAAA4G,GAAAJ,EAAA,SAAAjG,EAAA,MAAA+G,GAAA,EAAAZ,CAAA,iBAAAE,EAAAS,EAAAM,GAAA,GAAAP,EAAA,QAAAQ,UAAA,oCAAAN,GAAA,IAAAD,GAAAI,EAAAJ,EAAAM,GAAA3H,EAAAqH,EAAAJ,EAAAU,GAAApB,EAAAvG,EAAA,EAAApE,EAAAqL,KAAAK,GAAA,CAAAR,IAAA9G,EAAAA,EAAA,GAAAA,EAAA,IAAAuH,EAAAb,GAAA,GAAAe,EAAAzH,EAAAiH,IAAAM,EAAAb,EAAAO,EAAAM,EAAAC,EAAAP,GAAA,OAAAG,EAAA,EAAAN,EAAA,IAAA9G,IAAA4G,EAAA,QAAAL,EAAAO,EAAAF,GAAA,MAAAL,EAAAA,EAAAsB,KAAAf,EAAAG,IAAA,MAAAW,UAAA,wCAAArB,EAAAuB,KAAA,OAAAvB,EAAAU,EAAAV,EAAA/D,MAAAxC,EAAA,IAAAA,EAAA,YAAAA,IAAAuG,EAAAO,EAAA,SAAAP,EAAAsB,KAAAf,GAAA9G,EAAA,IAAAiH,EAAAW,UAAA,oCAAAhB,EAAA,YAAA5G,EAAA,GAAA8G,EAAAlL,CAAA,UAAA2K,GAAAe,EAAAC,EAAAb,EAAA,GAAAO,EAAAT,EAAAqB,KAAAnB,EAAAa,MAAAhH,EAAA,YAAAgG,GAAAO,EAAAlL,EAAAoE,EAAA,EAAAiH,EAAAV,CAAA,SAAAa,EAAA,UAAA5E,MAAA+D,EAAAuB,KAAAR,EAAA,GAAAd,EAAAI,EAAAE,IAAA,GAAAG,CAAA,KAAA1G,EAAA,YAAAyG,IAAA,UAAAe,IAAA,UAAAC,IAAA,CAAAzB,EAAA7G,OAAAuI,eAAA,IAAAjI,EAAA,GAAA0G,GAAAH,EAAAA,EAAA,GAAAG,QAAAS,EAAAZ,EAAA,GAAAG,EAAA,yBAAAH,GAAAU,EAAAe,EAAAjB,UAAAC,EAAAD,UAAArH,OAAAwH,OAAAlH,GAAA,SAAAoH,EAAAxL,GAAA,OAAA8D,OAAAwI,eAAAxI,OAAAwI,eAAAtM,EAAAoM,IAAApM,EAAAuM,UAAAH,EAAAb,EAAAvL,EAAAgL,EAAA,sBAAAhL,EAAAmL,UAAArH,OAAAwH,OAAAD,GAAArL,CAAA,QAAAmM,EAAAhB,UAAAiB,EAAAb,EAAAF,EAAA,cAAAe,GAAAb,EAAAa,EAAA,cAAAD,GAAAA,EAAAK,YAAA,oBAAAjB,EAAAa,EAAApB,EAAA,qBAAAO,EAAAF,GAAAE,EAAAF,EAAAL,EAAA,aAAAO,EAAAF,EAAAP,EAAA,yBAAAS,EAAAF,EAAA,oDAAAoB,EAAA,kBAAAC,EAAAxB,EAAAyB,EAAAnB,EAAA,cAAAD,EAAAvL,EAAA4K,EAAAE,EAAAH,GAAA,IAAAO,EAAApH,OAAA8I,eAAA,IAAA1B,EAAA,gBAAAlL,GAAAkL,EAAA,EAAAK,EAAA,SAAAvL,EAAA4K,EAAAE,EAAAH,GAAA,GAAAC,EAAAM,EAAAA,EAAAlL,EAAA4K,EAAA,CAAAhE,MAAAkE,EAAA+B,YAAAlC,EAAAmC,cAAAnC,EAAAoC,UAAApC,IAAA3K,EAAA4K,GAAAE,MAAA,KAAAE,EAAA,SAAAJ,EAAAE,GAAAS,EAAAvL,EAAA4K,EAAA,SAAA5K,GAAA,YAAAgN,QAAApC,EAAAE,EAAA9K,EAAA,IAAAgL,EAAA,UAAAA,EAAA,WAAAA,EAAA,cAAAO,EAAAvL,EAAA4K,EAAAE,EAAAH,EAAA,UAAAsC,EAAAjN,EAAA4K,GAAA,IAAAD,EAAA7G,OAAAC,KAAA/D,GAAA,GAAA8D,OAAAoJ,sBAAA,KAAAlC,EAAAlH,OAAAoJ,sBAAAlN,GAAA4K,IAAAI,EAAAA,EAAAhH,OAAA,SAAA4G,GAAA,OAAA9G,OAAAqJ,yBAAAnN,EAAA4K,GAAAiC,UAAA,IAAAlC,EAAAzL,KAAAkO,MAAAzC,EAAAK,EAAA,QAAAL,CAAA,UAAAvD,EAAApH,GAAA,QAAA4K,EAAA,EAAAA,EAAAjH,UAAAC,OAAAgH,IAAA,KAAAD,EAAA,MAAAhH,UAAAiH,GAAAjH,UAAAiH,GAAA,GAAAA,EAAA,EAAAqC,EAAAnJ,OAAA6G,IAAA,GAAA0C,QAAA,SAAAzC,GAAArE,EAAAvG,EAAA4K,EAAAD,EAAAC,GAAA,GAAA9G,OAAAwJ,0BAAAxJ,OAAAyJ,iBAAAvN,EAAA8D,OAAAwJ,0BAAA3C,IAAAsC,EAAAnJ,OAAA6G,IAAA0C,QAAA,SAAAzC,GAAA9G,OAAA8I,eAAA5M,EAAA4K,EAAA9G,OAAAqJ,yBAAAxC,EAAAC,GAAA,UAAA5K,CAAA,UAAAuG,EAAAvG,EAAA4K,EAAAD,GAAA,OAAAC,EAAA,SAAAD,GAAA,IAAAO,EAAA,SAAAP,GAAA,aAAA6C,EAAA7C,KAAAA,EAAA,OAAAA,EAAA,IAAA3K,EAAA2K,EAAAE,OAAA4C,aAAA,YAAAzN,EAAA,KAAAkL,EAAAlL,EAAAiM,KAAAtB,EAAAC,UAAA,aAAA4C,EAAAtC,GAAA,OAAAA,EAAA,UAAAc,UAAA,uDAAA0B,OAAA/C,EAAA,CAAAgD,CAAAhD,GAAA,gBAAA6C,EAAAtC,GAAAA,EAAAA,EAAA,GAAA0C,CAAAhD,MAAA5K,EAAA8D,OAAA8I,eAAA5M,EAAA4K,EAAA,CAAAhE,MAAA+D,EAAAkC,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAA/M,EAAA4K,GAAAD,EAAA3K,CAAA,UAAA6N,EAAA/C,EAAAH,EAAA3K,EAAA4K,EAAAI,EAAArG,EAAAP,GAAA,QAAA8G,EAAAJ,EAAAnG,GAAAP,GAAAiH,EAAAH,EAAAtE,KAAA,OAAAkE,GAAA,YAAA9K,EAAA8K,EAAA,CAAAI,EAAAgB,KAAAvB,EAAAU,GAAAyC,QAAAC,QAAA1C,GAAA2C,KAAApD,EAAAI,EAAA,UAAAiD,EAAArD,EAAA5K,GAAA,gBAAA4K,GAAA,GAAAsD,MAAAC,QAAAvD,GAAA,OAAAA,CAAA,CAAAwD,CAAAxD,IAAA,SAAAA,EAAAmB,GAAA,IAAApB,EAAA,MAAAC,EAAA,yBAAAC,QAAAD,EAAAC,OAAAE,WAAAH,EAAA,uBAAAD,EAAA,KAAA3K,EAAA8K,EAAAI,EAAAG,EAAA1G,EAAA,GAAA6G,GAAA,EAAAR,GAAA,SAAAE,GAAAP,EAAAA,EAAAsB,KAAArB,IAAAyD,KAAA,IAAAtC,EAAA,IAAAjI,OAAA6G,KAAAA,EAAA,OAAAa,GAAA,cAAAA,GAAAxL,EAAAkL,EAAAe,KAAAtB,IAAAuB,QAAAvH,EAAAzF,KAAAc,EAAA4G,OAAAjC,EAAAf,SAAAmI,GAAAP,GAAA,UAAAZ,GAAAI,GAAA,EAAAF,EAAAF,CAAA,iBAAAY,GAAA,MAAAb,EAAA,SAAAU,EAAAV,EAAA,SAAA7G,OAAAuH,KAAAA,GAAA,kBAAAL,EAAA,MAAAF,CAAA,SAAAnG,CAAA,EAAA2J,CAAA1D,EAAA5K,IAAA,SAAA4K,EAAAjG,GAAA,GAAAiG,EAAA,qBAAAA,EAAA,OAAA2D,EAAA3D,EAAAjG,GAAA,IAAAgG,EAAA,GAAA6D,SAAAvC,KAAArB,GAAA6D,MAAA,uBAAA9D,GAAAC,EAAA8D,cAAA/D,EAAAC,EAAA8D,YAAAhM,MAAA,QAAAiI,GAAA,QAAAA,EAAAuD,MAAAS,KAAA/D,GAAA,cAAAD,GAAA,2CAAA5K,KAAA4K,GAAA4D,EAAA3D,EAAAjG,QAAA,GAAAiK,CAAAhE,EAAA5K,IAAA,qBAAAgM,UAAA,6IAAA6C,EAAA,UAAAN,EAAA3D,EAAAjG,IAAA,MAAAA,GAAAA,EAAAiG,EAAAhH,UAAAe,EAAAiG,EAAAhH,QAAA,QAAA5D,EAAA,EAAA8K,EAAAoD,MAAAvJ,GAAA3E,EAAA2E,EAAA3E,IAAA8K,EAAA9K,GAAA4K,EAAA5K,GAAA,OAAA8K,CAAA,CDuNCvE,EApKYU,EAAgB,kBACiC,CAC5DO,SAAU,IACVgD,SAAU,IACV/C,iBAAkB,MAClBlB,EALWU,EAAgB,uBAOmB,CAC9C,6CACA,uDCtDF,IAAM6H,GAAOC,EAAAA,EAAAA,MAAK,kBAAM,sCAAiBf,KAAK,SAAA7O,GAAM,MAAK,CAAE6P,QAAS7P,EAAO2P,KAAM,EAAE,GAa7EG,EAAgB,WACrB,IAIEC,EAAAjB,GAJwBkB,EAAAA,EAAAA,UAAmB,CAC5C5F,KAAM,KACNE,MAAO,KACP2F,SAAS,IACR,GAJKC,EAAKH,EAAA,GAAEI,EAAQJ,EAAA,GAMhBK,EAAQ,eA1BfzE,EA0Be0E,GA1Bf1E,EA0Be2B,IAAAE,EAAG,SAAA8C,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAzD,IAAAC,EAAA,SAAAyD,GAAA,cAAAA,EAAA1E,EAAA0E,EAAArF,GAAA,OAC4C,OAA5DwE,EAAS,SAAAc,GAAI,OAAAhJ,EAAAA,EAAA,GAAUgJ,GAAI,IAAEhB,SAAS,EAAM3F,MAAO,MAAI,GAAK0G,EAAA1E,EAAA,EAAA0E,EAAArF,EAAA,EAGbgD,QAAQuC,IAAI,CACzDC,MAAM,mBACNA,MAAM,sBACL,OAHkC,GAGlCZ,EAAAS,EAAAvE,EAAA+D,EAAA1B,EAAAyB,EAAA,GAHKE,EAAaD,EAAA,GAAEE,EAAcF,EAAA,GAK/BC,EAAcW,GAAI,CAAFJ,EAAArF,EAAA,cACd,IAAI0F,MAAM,0BAADhN,OAA2BoM,EAAca,aAAa,UAGjEZ,EAAeU,GAAI,CAAFJ,EAAArF,EAAA,cACf,IAAI0F,MAAM,2BAADhN,OAA4BqM,EAAeY,aAAa,cAAAN,EAAArF,EAAA,EAG1CgD,QAAQuC,IAAI,CACzCT,EAAcc,OACdb,EAAea,SACd,OAAAZ,EAAAK,EAAAvE,EAAAmE,EAAA9B,EAAA6B,EAAA,GAHKE,EAAKD,EAAA,GAAEE,EAAMF,EAAA,GAKpBT,EAAS,CACR/F,KAAM,CAAEyG,MAAAA,EAAOC,OAAAA,GACfxG,MAAO,KACP2F,SAAS,IACPe,EAAArF,EAAA,eAAAqF,EAAA1E,EAAA,EAAAyE,EAAAC,EAAAvE,EAEH3C,QAAQQ,MAAM,uBAAsByG,GACpCZ,EAAS,CACR/F,KAAM,KACNE,MAAOyG,aAAiBM,MAAQN,EAAM9G,QAAU,yBAChDgG,SAAS,IACP,cAAAe,EAAAxL,EAAA,KAAA8K,EAAA,gBA3DN,eAAA9E,EAAA,KAAA3K,EAAA2D,UAAA,WAAAmK,QAAA,SAAAlD,EAAAI,GAAA,IAAArG,EAAAmG,EAAAsC,MAAAzC,EAAA3K,GAAA,SAAA2Q,EAAA7F,GAAA+C,EAAAlJ,EAAAiG,EAAAI,EAAA2F,EAAAC,EAAA,OAAA9F,EAAA,UAAA8F,EAAA9F,GAAA+C,EAAAlJ,EAAAiG,EAAAI,EAAA2F,EAAAC,EAAA,QAAA9F,EAAA,CAAA6F,OAAA,OA6DE,kBAnCa,OAAAnB,EAAApC,MAAA,KAAAzJ,UAAA,KAqCRkN,EAAmB,SAAC/G,GACrBA,EAAKgH,SAAS,UAIlB7H,QAAQC,IAAI,gBAAiBY,IAC7BiH,EAAAA,EAAAA,gBACAxB,IACD,EAgBA,OAdAyB,EAAAA,EAAAA,WAAU,WAST,OAPyB,IAAI/J,EAAiB4J,GAC7BhH,UAGjB0F,IAGO,WACN,CAEF,EAAG,IAECF,EAAMD,QACF9J,EAAAA,cAAC2L,EAAa,MAGlB5B,EAAM5F,MACFnE,EAAAA,cAAC4L,EAAW,CAACzH,MAAO4F,EAAM5F,MAAO0H,QAAS5B,IAG7CF,EAAM9F,KAKVjE,EAAAA,cAAC8L,EAAAA,SAAQ,CAACC,SAAU/L,EAAAA,cAAC2L,EAAa,OACjC3L,EAAAA,cAACwJ,EAAI,CAACkB,MAAOX,EAAM9F,KAAKyG,MAAOC,OAAQZ,EAAM9F,KAAK0G,UAL5C3K,EAAAA,cAAC4L,EAAW,CAACzH,MAAM,oBAAoB0H,QAAS5B,GAQzD,EAEM0B,EAA0B,WAAH,OAC5B3L,EAAAA,cAAA,OAAKgM,MAAO,CACXC,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZC,OAAQ,QACRC,WAAY,sBAEZrM,EAAAA,cAAA,WAAK,cACA,EAGD4L,EAAgE,SAAHU,GAAA,IAAMnI,EAAKmI,EAALnI,MAAO0H,EAAOS,EAAPT,QAAO,OACtF7L,EAAAA,cAAA,OAAKgM,MAAO,CACXO,QAAS,OACTC,MAAO,MACPH,WAAY,YACZI,WAAY,WACZR,QAAS,OACTS,cAAe,SACfP,WAAY,SACZD,eAAgB,SAChBE,OAAQ,UAERpM,EAAAA,cAAA,UAAI,6BACJA,EAAAA,cAAA,SAAImE,GACJnE,EAAAA,cAAA,UACC2M,QAASd,EACTG,MAAO,CACNO,QAAS,YACTK,SAAU,OACVC,OAAQ,UACRC,gBAAiB,UACjBN,MAAO,QACPO,OAAQ,OACRC,aAAc,QAEf,SAGI,EAIDC,EAAYC,SAASC,eAAe,QAC1C,IAAKF,EACJ,MAAM,IAAI/B,MAAM,6BAGJkC,EAAAA,EAAAA,YAAWH,GACnBI,OAAOrN,EAAAA,cAAC2J,EAAG,M,qMC7JhB,IAkDa2D,EAAc,SAACC,EAAcC,EAAeC,GACxD,IAAMC,EAnDa,WACnB,IAAMC,EAAMT,SAASU,gBAAgB,6BAA8B,OAGnE,OAFAV,SAASW,KAAKC,YAAYH,GAEnB,CACNI,QAAS,SAACR,EAAcE,GACvB,IAAMO,EAAOd,SAASU,gBAAgB,6BAA8B,QAGpE,IAAK,IAAIK,KAFTD,EAAKE,aAAa,IAAK,KACvBF,EAAKE,aAAa,IAAK,KACNT,EAChBO,EAAKE,aAAaD,EAAMR,EAAMQ,IAE/BD,EAAKF,YAAYZ,SAASiB,eAAeZ,IAEzCI,EAAIG,YAAYE,GAChB,IAAAI,EAAwBJ,EAAKK,UAAtBb,EAAKY,EAALZ,MAAOpB,EAAMgC,EAANhC,OAEd,OADAuB,EAAIW,YAAYN,GACT,CAACR,MAAAA,EAAOpB,OAAAA,EAChB,EACAmC,MAAO,WACNrB,SAASW,KAAKS,YAAYX,EAC3B,EAEF,CA4BYa,GACPC,EAAO,EAELC,EAAMnB,EAAKoB,OAAOC,MAAM,MAAMzQ,IAAI,SAAAoP,GAEvC,IAAMsB,EAAQtB,EAAKoB,OAAOC,MAAM,OAC5BE,EAAkB,GAClBC,EAAwB,GAuC5B,OArCAF,EAAM9G,QAAQ,SAAAiH,GAGb,GADiBtB,EAAGK,QAAQiB,EAAMvB,GACrBD,MAAQA,EAAO,CAEvBuB,EAAYzQ,OAAS,IACxBwQ,EAAMlV,KAAKmV,EAAYjP,KAAK,MAC5BiP,EAAc,IAKf,IAFA,IAAME,EA5CY,SAACD,EAAcE,EAAkBzB,EAAkCC,GAIxF,IAHA,IAAMyB,EAAkB,GACpBC,EAAc,GAETxJ,EAAI,EAAGA,EAAIoJ,EAAK1Q,OAAQsH,IAAK,CACrC,IAAMyJ,EAAWD,EAAcJ,EAAKpJ,GACvB8H,EAAGK,QAAQsB,EAAU5B,GAEzBD,MAAQ0B,GAAYE,EAAY9Q,OAAS,GACjD6Q,EAAMvV,KAAKwV,GACXA,EAAcJ,EAAKpJ,IAEnBwJ,EAAcC,CAEhB,CAMA,OAJID,EAAY9Q,OAAS,GACxB6Q,EAAMvV,KAAKwV,GAGLD,CACR,CAuBwBG,CAAcN,EAAMxB,EAAOC,EAAOC,GAE7C9H,EAAI,EAAGA,EAAIqJ,EAAY3Q,OAAS,EAAGsH,IAC3CkJ,EAAMlV,KAAKqV,EAAYrJ,IACvB6I,EAAOzJ,KAAKuK,IAAId,EAAMf,EAAGK,QAAQkB,EAAYrJ,GAAI6H,GAAOD,OAGrDyB,EAAY3Q,OAAS,IACxByQ,EAAc,CAACE,EAAYA,EAAY3Q,OAAS,IAElD,KAAO,CAEN,IAAMkR,EAAU,GAAHtR,O,+CAAO6Q,I,kjBAAW,CAAEC,IAC3BS,EAAO/B,EAAGK,QAAQyB,EAAQ1P,KAAK,KAAM2N,GACvCgC,EAAKjC,MAAQA,GAASuB,EAAYzQ,OAAS,GAC9CwQ,EAAMlV,KAAKmV,EAAYjP,KAAK,MAC5BiP,EAAc,CAACC,KAEfP,EAAOzJ,KAAKuK,IAAId,EAAMgB,EAAKjC,OAC3BuB,EAAcS,EAEhB,C,KACD,GAEIT,EAAYzQ,OAAS,GACxBwQ,EAAMlV,KAAKmV,EAAYjP,KAAK,MAEtBgP,CACR,GAAG/Q,OAAO,SAACsB,EAAGiH,GAAC,OAAKjH,EAAEnB,OAAOoI,EAAE,EAAE,IAGjC,OADAoH,EAAGa,QACI,CAACO,MAAOJ,EAAKD,KAAAA,EACrB,E,kxCCpGO,IAAMzI,EAAS,CACrB0J,QAAO,SAACC,GAA+E,IAAjElC,EAAsCpP,UAAAC,OAAA,QAAAhE,IAAA+D,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAG4B,EAAkB5B,UAAAC,OAAA,EAAAD,UAAA,QAAA/D,EAC9EsV,EAAK1C,SAASU,gBAAgB,6BAA8B+B,GAGlE,OAFAnR,OAAOqR,QAAQpC,GAAO1F,QAAQ,SAAAmC,GAAA,I,IAAAoC,G,EAAA,E,4CAAApC,I,s1BAAEvL,EAAC2N,EAAA,GAAEhG,EAACgG,EAAA,UAAMsD,EAAG1B,aAAavP,EAAGyJ,OAAO9B,GAAG,GACnErG,GAAW2P,EAAGE,UAAUC,IAAI9P,GACzB2P,CACR,EAEAI,IAAG,SAAClW,GAAyD,IAA7C2T,EAAsCpP,UAAAC,OAAA,QAAAhE,IAAA+D,UAAA,GAAAA,UAAA,GAAG,CAAC,EACnDuR,EAAK1O,KAAKwO,QAAQ,MAAOjC,GAE/B,OADAmC,EAAGK,eAAe,+BAAgC,aAAc,IAAMnW,GAC/D8V,CACR,EAEApL,KAAI,SAACA,GAA+E,IAAjEiJ,EAAsCpP,UAAAC,OAAA,QAAAhE,IAAA+D,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAG4B,EAAkB5B,UAAAC,OAAA,EAAAD,UAAA,QAAA/D,EAEjF,OADU4G,KAAKwO,QAAQ,OAAM5N,EAAAA,EAAA,GAAM2L,GAAK,IAAElH,EAAG/B,IAAOvE,EAErD,EAEAsN,KAAI,SAACA,GAA2D,IAA7CE,EAAsCpP,UAAAC,OAAA,QAAAhE,IAAA+D,UAAA,GAAAA,UAAA,GAAG,CAAC,EACtDgH,EAAInE,KAAKwO,QAAQ,OAAQjC,GAE/B,OADIF,IAAMlI,EAAE6K,YAAc3C,GACnBlI,CACR,EAEA8K,SAAQ,SAAC5C,EAAcC,EAAeZ,EAAkBwD,GAA0C,IAAArP,EAAA,KAA3BsP,EAAChS,UAAAC,OAAA,QAAAhE,IAAA+D,UAAA,GAAAA,UAAA,GAAG,EAAG+H,EAAC/H,UAAAC,OAAA,QAAAhE,IAAA+D,UAAA,GAAAA,UAAA,GAAG,EAAGiS,EAAMjS,UAAAC,OAAA,QAAAhE,IAAA+D,UAAA,GAAAA,UAAA,GAAG,GACvFoP,EAAgC,CACrC,YAAa,GAAFvP,OAAK0O,EAAQ,MACxB,cAAewD,EAAO,OAAS,UAEhCG,EAAsBjD,EAAYC,EAAMC,EAAOC,GAAxCqB,EAAKyB,EAALzB,MAAOL,EAAI8B,EAAJ9B,KACR+B,EAAMtP,KAAKqM,KAAK,GAAI,CAAC8C,EAAG,EAAGjK,EAAAA,EAAG,cAAekK,QAAUhW,IAQ7D,OANAwU,EAAM/G,QAAQ,SAAC0I,EAAM7K,GACpB,IAAM8K,EAAO3P,EAAK2O,QAAQ,QAAO5N,EAAA,CAAGuO,EAAAA,EAAGM,GAAI,GAAFzS,OAAK0O,EAAW,EAAC,OAASa,IACnEiD,EAAKR,YAAcO,EACnBD,EAAII,OAAOF,EACZ,GAEO,CAACF,IAAAA,EAAKG,IAAK7B,EAAMxQ,OAAS,IAAMsO,EAAW,GAAI6B,KAAAA,EACvD,EAEAoC,KAAI,SAACrD,EAAepB,GAAyD,IAAzCiE,EAAChS,UAAAC,OAAA,QAAAhE,IAAA+D,UAAA,GAAAA,UAAA,GAAG,EAAG+H,EAAC/H,UAAAC,OAAA,QAAAhE,IAAA+D,UAAA,GAAAA,UAAA,GAAG,EAAGiH,EAACjH,UAAAC,OAAA,QAAAhE,IAAA+D,UAAA,GAAAA,UAAA,GAAG,EAAG4B,EAAkB5B,UAAAC,OAAA,EAAAD,UAAA,QAAA/D,EAC1E,OAAO4G,KAAKwO,QAAQ,OAAQ,CAACW,EAAAA,EAAGjK,EAAAA,EAAG0K,GAAIxL,EAAGyL,GAAIzL,EAAGkI,MAAAA,EAAOpB,OAAAA,GAASnM,EAClE,EAEA+Q,KAAI,SAACA,GAA4B,IAAdX,EAAChS,UAAAC,OAAA,QAAAhE,IAAA+D,UAAA,GAAAA,UAAA,GAAG,EAAG+H,EAAC/H,UAAAC,OAAA,QAAAhE,IAAA+D,UAAA,GAAAA,UAAA,GAAG,EAC7B,OAAO6C,KAAK8O,IAAIgB,EAAM,CAACX,EAAAA,EAAGjK,EAAAA,GAC3B,EAEA6K,OAAM,SAACZ,EAAWjK,EAAW8K,GAC5B,IAAMC,EAAIjQ,KAAKwO,QAAQ,IAAK,CAAC0B,UAAW,aAAFlT,OAAemS,EAAC,KAAAnS,OAAIkI,EAAC,MAAM,UAKjE,OAJA+K,EAAEP,OACD1P,KAAK2P,KAAK,GAAI,GAAI,EAAG,EAAG,GACxB3P,KAAKqM,KAAK2D,EAAW,IAAM,IAAK,CAACb,EAAG,GAAIjK,EAAG,GAAI,cAAe,YAExD+K,CACR,GAGM,SAASE,EAAYF,EAAgBd,EAAWjK,GACtD+K,EAAEjD,aAAa,YAAa,aAAFhQ,OAAemS,EAAC,KAAAnS,OAAIkI,EAAC,KAChD,CCrDO,SAASkL,EAAUnL,EAAU7G,GACnC,OADuDjB,UAAAC,OAAA,QAAAhE,IAAA+D,UAAA,KAAAA,UAAA,GAGrD8H,EAAEkK,EAAI/Q,EAAE+Q,GAAKlK,EAAEkK,EAAI/Q,EAAE+Q,EAAI/Q,EAAEkO,OAASrH,EAAEC,EAAI9G,EAAE8G,GAAKD,EAAEC,EAAI9G,EAAE8G,EAAI9G,EAAE8M,OAD/DjG,EAAEkK,EAAI/Q,EAAE+Q,EAAI/Q,EAAEkO,MAAQ,GAAKrH,EAAEkK,EAAI/Q,EAAE+Q,EAAI/Q,EAAEkO,MAAQ,GAAKrH,EAAEC,EAAI9G,EAAE8G,EAAI9G,EAAE8M,OAAS,GAAKjG,EAAEC,EAAI9G,EAAE8G,EAAI9G,EAAE8M,OAAS,CAE5G,CAqDO,SAASmF,EAAkBC,EAAWC,EAAWC,GACvD,IAAMtK,EAAIsK,EAAIlE,MAAQ,EAChBmE,EAAID,EAAItF,OAAS,EAOvB,MANuC,CACtC,CAACjG,EAAG,CAACkK,EAAGqB,EAAIrB,EAAIjJ,EAAGhB,EAAGsL,EAAItL,EAAIuL,GAAIC,EAAG,CAACvB,EAAGqB,EAAIrB,EAAIjJ,EAAGhB,EAAGsL,EAAItL,EAAIuL,IAC/D,CAACxL,EAAG,CAACkK,EAAGqB,EAAIrB,EAAIjJ,EAAGhB,EAAGsL,EAAItL,EAAIuL,GAAIC,EAAG,CAACvB,EAAGqB,EAAIrB,EAAIjJ,EAAGhB,EAAGsL,EAAItL,EAAIuL,IAC/D,CAACxL,EAAG,CAACkK,EAAGqB,EAAIrB,EAAIjJ,EAAGhB,EAAGsL,EAAItL,EAAIuL,GAAIC,EAAG,CAACvB,EAAGqB,EAAIrB,EAAIjJ,EAAGhB,EAAGsL,EAAItL,EAAIuL,IAC/D,CAACxL,EAAG,CAACkK,EAAGqB,EAAIrB,EAAIjJ,EAAGhB,EAAGsL,EAAItL,EAAIuL,GAAIC,EAAG,CAACvB,EAAGqB,EAAIrB,EAAIjJ,EAAGhB,EAAGsL,EAAItL,EAAIuL,KAEpDxT,IAAI,SAAAF,GAAC,OA7ClB,SAA6BuT,EAAWK,EAAWJ,EAAWK,GAC7D,IAAIC,EAAa1S,EAAGC,EAAG0S,EAAYC,EAClCC,EAAuE,CACtE7B,EAAG,KACHjK,EAAG,KACH+L,SAAS,EACTC,SAAS,GAGX,OAAmB,IADnBL,GAAeD,EAAG1L,EAAIqL,EAAGrL,IAAMyL,EAAGxB,EAAImB,EAAGnB,IAAMyB,EAAGzB,EAAIoB,EAAGpB,IAAMwB,EAAGzL,EAAIoL,EAAGpL,MAIzE/G,EAAImS,EAAGpL,EAAIqL,EAAGrL,EACd9G,EAAIkS,EAAGnB,EAAIoB,EAAGpB,EACd2B,GAAeF,EAAGzB,EAAIoB,EAAGpB,GAAKhR,GAAOyS,EAAG1L,EAAIqL,EAAGrL,GAAK9G,EACpD2S,GAAeJ,EAAGxB,EAAImB,EAAGnB,GAAKhR,GAAOwS,EAAGzL,EAAIoL,EAAGpL,GAAK9G,EACpDD,EAAI2S,EAAaD,EACjBzS,EAAI2S,EAAaF,EAGjBG,EAAO7B,EAAImB,EAAGnB,EAAKhR,GAAKwS,EAAGxB,EAAImB,EAAGnB,GAClC6B,EAAO9L,EAAIoL,EAAGpL,EAAK/G,GAAKwS,EAAGzL,EAAIoL,EAAGpL,GAG9B/G,EAAI,GAAKA,EAAI,IAChB6S,EAAOC,SAAU,GAGd7S,GAAK,GAAKA,GAAK,IAClB4S,EAAOE,SAAU,IAnBVF,CAuBT,CAYsBG,CAAoBb,EAAIC,EAAIxT,EAAEkI,EAAGlI,EAAE2T,EAAE,GAAElT,OAAO,SAAAgQ,GAAG,OAAIA,EAAIyD,SAAWzD,EAAI0D,OAAO,EACrG,CAGO,SAASE,EAAcZ,EAAWvL,GACxC,OAAImL,EAAUnL,EAAGuL,GAAa,CAACrB,EAAGqB,EAAIrB,EAAGjK,EAAGsL,EAAItL,GACzCmL,EAAkBG,EAAKvL,EAAGuL,GAAK,IAAM,CAACrB,EAAGqB,EAAIrB,EAAGjK,EAAGsL,EAAItL,EAC/D,CAEO,SAASmM,EAAiBC,EAAkB1B,EAAYC,EAAY0B,EAAmBC,GAG7F,IAAMlB,EAAK,CAACnB,EAAGqC,EAAMrC,EAAImC,EAAUnC,EAAGjK,EAAGsM,EAAMtM,EAAIoM,EAAUpM,GACvDqL,EAASgB,EAAWpC,EAAImC,EAAUnC,EAAlCoB,EAAwCgB,EAAWrM,EAAIoM,EAAUpM,EAEnEqL,GAAQD,EAAGnB,IACdmB,EAAGnB,GAAK,MAGT,IAAMpS,GAAKwT,EAAOD,EAAGpL,IAAMqL,EAAOD,EAAGnB,GAC/BsC,EAAKlB,EAAQxT,EAAIwT,EACjBpS,EAAK0R,EAAKA,EAAOD,EAAKA,EAAK7S,EAAIA,EAC/BqB,EAAI,EAAIwR,EAAKA,EAAK6B,EAAK1U,EACvBa,EAAIgS,EAAKA,EAAK6B,EAAKA,EAAK7B,EAAKA,EAAKC,EAAKA,EAEvC6B,EAAgB5N,KAAK6N,KAAMvT,EAAIA,EAAM,EAAID,EAAIP,GAC7CuR,EAAImB,EAAGnB,EAAIoB,IACdnS,EAAIsT,IAAkB,EAAIvT,KAC1BC,EAAIsT,IAAkB,EAAIvT,GACvByT,EAAM,CACXzC,EAAGA,EACHjK,EAAGnI,EAAIoS,EAAIsC,GAMZ,OAHAG,EAAIzC,GAAKmC,EAAUnC,EACnByC,EAAI1M,GAAKoM,EAAUpM,EAEZ0M,CACR,CAuCO,SAASC,EAAQ5M,EAAU9G,EAAUC,GAC3C,IAAI0T,EAAW1T,EAAE+Q,EAAIhR,EAAEgR,EAAnB2C,EAAyB1T,EAAE8G,EAAI/G,EAAE+G,EAEjC6M,EAAMD,EAASA,EAASA,EAASA,EACjCE,GAFW/M,EAAEkK,EAAIhR,EAAEgR,GAEJ2C,GAFU7M,EAAEC,EAAI/G,EAAE+G,GAEA4M,EACjC3N,EAAIL,KAAKC,IAAI,EAAGD,KAAKuK,IAAI,EAAG2D,EAAMD,IACtC,MAAO,CACN5C,EAAGhR,EAAEgR,EAAI2C,EAAS3N,EAClBe,EAAG/G,EAAE+G,EAAI4M,EAAS3N,EAEpB,CAEO,SAAS8N,EAAY3B,EAAWC,GACtC,OAAOzM,KAAKoO,IAAI3B,EAAGpB,EAAImB,EAAGnB,GAAKrL,KAAKoO,IAAI3B,EAAGrL,EAAIoL,EAAGpL,EACnD,C,kqBCxK4D,IAgBtDiN,EAAS,WAGd,SAAAA,EAAYzD,I,4FAAgB5O,CAAA,KAAAqS,GAC3BnS,KAAKoS,IAAM1D,CACZ,CAAC,O,EAAAyD,G,EAAA,EAAA7V,IAAA,OAAA8D,MAED,WACC,OAAOJ,KAAKoS,GACb,GAAC,CAAA9V,IAAA,OAAA8D,MAED,SAAKlE,EAAckE,GAElB,OADAJ,KAAKoS,IAAIpF,aAAa9Q,EAAMgL,OAAO9G,IAC5BJ,IACR,GAAC,CAAA1D,IAAA,SAAA8D,MAED,SAAOqO,EAAcmD,GACpB,IAAMlD,EAAK1C,SAASU,gBAAgB,6BAA8B+B,GAElE,OAAO,IAAI0D,EADCnS,KAAKoS,IAAIC,aAAa3D,EAAI1O,KAAKoS,IAAIE,cAAcV,IAE9D,M,6EAAC,CApBa,GAwBf,SAASjC,EAAK4C,EAAmBC,EAAY1F,GAA+B,IAAjB2F,EAAOtV,UAAAC,OAAA,QAAAhE,IAAA+D,UAAA,IAAAA,UAAA,GAC3DuV,EAAWH,EAAOjT,OAAO,OAAQ,gBACrCyN,KAAK,KAAM0F,EAAU3F,EAAKR,MAAQ,EAAI,GACtCS,KAAK,KAAM0F,EAAU3F,EAAKR,MAAQ,EAAI,GACtCS,KAAK,KAAMyF,EAAKlG,MAAQ,GACxBS,KAAK,KAAMyF,EAAKtH,OAAS,GACzB6B,KAAK,QAASyF,EAAKlG,OACnBS,KAAK,SAAUyF,EAAKtH,QAMtB,OAJA4B,EAAK6F,UAAY,SAAUnB,GAC1B,OAAOJ,EAActE,EAAM0E,EAC5B,EAEOkB,CACR,CA0DA,SAASE,EAASL,EAAmBC,EAAY1F,EAAc8C,EAAYC,GAC1E,IAAM6C,EAAWH,EAAOjT,OAAO,UAAW,gBACxCyN,KAAK,KAAM,GACXA,KAAK,KAAM,GACXA,KAAK,KAAM6C,GACX7C,KAAK,KAAM8C,GACX9C,KAAK,QAASD,EAAKR,OACnBS,KAAK,SAAUD,EAAK5B,QAKtB,OAHA4B,EAAK6F,UAAY,SAAUnB,GAC1B,OAAOH,EAAiBvE,EAAM8C,EAAIC,EAAI/C,EAAM0E,EAC7C,EACOkB,CACR,CA0GA,SAASG,EAAqBN,EAAmBC,EAAY1F,GAC5D,IAAM2C,EAAK3C,EAAKR,MAAQ,EAClBlI,EAAI0I,EAAKR,MAAQ,GACjBoG,EAAWH,EAAOjT,OAAO,IAAK,gBAwBpC,OAvBAoT,EAASpT,OAAO,OAAQ,gBACtByN,KAAK,IAAK,IAAF/P,QAAO8P,EAAKR,MAAQ,EAAC,KAAAtP,QAAK8P,EAAK5B,OAAS,EAAC,MAAAlO,OAAK8P,EAAKR,MAAK,QAAAtP,QAAQ8P,EAAKR,MAAQ,EAAC,KAAAtP,OAAI8P,EAAK5B,OAAS,EAAC,MAAAlO,OAAK8P,EAAKR,MAAK,OAC1HoG,EAASpT,OAAO,SAAU,gBACxByN,KAAK,KAAM,GACXA,KAAK,KAAMD,EAAK5B,OAAS,EAAIuE,EAAK,GAClC1C,KAAK,IAAS,GAAJ3I,GACZsO,EAASpT,OAAO,OAAQ,gBACtByN,KAAK,KAAM3I,GACX2I,KAAK,KAAMD,EAAK5B,OAAS,EAAIuE,EAAK,EAAQ,GAAJrL,GACtC2I,KAAK,QAAa,EAAJ3I,GACd2I,KAAK,SAAc,GAAJ3I,GACjBsO,EAASpT,OAAO,OAAQ,gBACtByN,KAAK,KAAM3I,GACX2I,KAAK,KAAM3I,GACX2I,KAAK,KAAMyF,EAAKlG,MAAQ,GACxBS,KAAK,KAAMyF,EAAKtH,OAAS,EAAIuE,GAC7B1C,KAAK,QAASyF,EAAKlG,OACnBS,KAAK,SAAUyF,EAAKtH,OAAS,EAAIuE,GAEnC3C,EAAK6F,UAAY,SAAUnB,GAC1B,OAAOJ,EAAc,CAACjC,EAAGrC,EAAKqC,EAAGjK,EAAG4H,EAAK5H,EAAGoH,MAAOQ,EAAKR,MAAOpB,OAAQ4B,EAAK5B,OAAS,EAAIuE,GAAK+B,EAC/F,EAEOkB,CACR,CAyFO,IAAMI,EAA8E,CAC1FtC,IAAK,SAAC+B,EAAoBzF,GAAY,OAAK6C,EAAK,IAAIwC,EAAUI,GAASzF,EAAMA,GAAMA,MAAM,EACzFiG,WAAY,SAACR,EAAoBzF,GAAY,OAAK6C,EAAK,IAAIwC,EAAUI,GAASzF,EAAMA,GAAM,GAAMA,MAAM,EACtGkG,UAAW,SAACT,EAAoBzF,GAAY,OAxM7C,SAAmByF,EAAmBC,EAAY1F,GACjD,IAAMmG,EAAKnG,EAAKR,MAAQ,GAClBoG,EAAWH,EAAOjT,OAAO,IAAK,gBAwBpC,OAvBAoT,EAASpT,OAAO,OAAQ,gBACtByN,KAAK,KAAM,GAAGA,KAAK,KAAM,GACzBA,KAAK,KAAMD,EAAKR,MAAQ,EAAI2G,GAC5BlG,KAAK,KAAMD,EAAK5B,OAAS,EAAI+H,GAC7BlG,KAAK,QAAc,EAALkG,GACdlG,KAAK,SAAUkG,GACjBP,EAASpT,OAAO,OAAQ,gBACtByN,KAAK,KAAM,GAAGA,KAAK,KAAM,GACzBA,KAAK,KAAMD,EAAKR,MAAQ,EAAI2G,GAC5BlG,KAAK,KAAMD,EAAK5B,OAAS,EAAS,IAAL+H,GAC7BlG,KAAK,QAAc,EAALkG,GACdlG,KAAK,SAAUkG,GACjBP,EAASpT,OAAO,OAAQ,gBACtByN,KAAK,KAAM,GAAGA,KAAK,KAAM,GACzBA,KAAK,KAAMD,EAAKR,MAAQ,GACxBS,KAAK,KAAMD,EAAK5B,OAAS,GACzB6B,KAAK,QAASD,EAAKR,OACnBS,KAAK,SAAUD,EAAK5B,QAEtB4B,EAAK6F,UAAY,SAAUnB,GAC1B,OAAOJ,EAAc,CAACjC,EAAGrC,EAAKqC,EAAI8D,EAAK,EAAG/N,EAAG4H,EAAK5H,EAAGoH,MAAOQ,EAAKR,MAAQ2G,EAAI/H,OAAQ4B,EAAK5B,QAASsG,EACpG,EAEOkB,CACR,CA6KkDM,CAAU,IAAIb,EAAUI,GAASzF,EAAMA,GAAMA,MAAM,EACpGoG,SAAU,SAACX,EAAoBzF,GAAY,OAvS5C,SAAkByF,EAAmBC,EAAY1F,GAChD,IAAM5G,EAAIsM,EAAKlG,MACTsD,EAAK1J,EAAI,EACT2J,EAAKD,GAAM,IAAM1J,EAAI,IACrBuK,EAAI+B,EAAKtH,OAETiI,EAAK,OAAAnW,OACH6S,EAAE,MAAA7S,OAAK4S,EAAE,KAAA5S,OAAI6S,EAAE,WAAA7S,OAAUkJ,EAAC,SAAAlJ,OAAQ4S,EAAE,KAAA5S,OAAI6S,EAAE,WAAA7S,QAAWkJ,EAAC,WAAAlJ,OAAUyT,EAAI,EAAIZ,EAAE,OAAA7S,OAAM4S,EAAE,KAAA5S,OAAI6S,EAAE,WAAA7S,OAAUkJ,EAAC,WAAAlJ,OAAe,EAAI6S,EAARY,GAEhHiC,EAAWH,EACfxF,KAAK,iBAAkB,EAAI8C,GAC3BvQ,OAAO,OAAQ,gBACfyN,KAAK,IAAKoG,GACVpG,KAAK,YAAa,cAAgB7G,EAAI,EAAI,KAAQuK,EAAI,EAAK,KAe7D,OAbA3D,EAAK6F,UAAY,SAAUnB,GAC1B,IAAMI,EAAMR,EAActE,EAAM0E,GAC5B4B,EAAKtG,EAAK5H,EAAI4H,EAAK5B,OAAS,EAAI2E,EACpC,OAAI+B,EAAI1M,EAAIkO,EACJ/B,EAAiB,CAAClC,EAAGrC,EAAKqC,EAAGjK,EAAGkO,GAAKxD,EAAIC,EAAI/C,EAAM0E,IAE3D4B,EAAKtG,EAAK5H,EAAI4H,EAAK5B,OAAS,EAAI2E,EAC5B+B,EAAI1M,EAAIkO,EACJ/B,EAAiB,CAAClC,EAAGrC,EAAKqC,EAAGjK,EAAGkO,GAAKxD,EAAIC,EAAI/C,EAAM0E,GAEpDI,EACR,EAEOc,CACR,CA0QiDQ,CAAS,IAAIf,EAAUI,GAASzF,EAAMA,GAAMA,MAAM,EAClGuG,OAAQ,SAACd,EAAoBzF,GAAY,OAzQ1C,SAAgByF,EAAmBC,EAAY1F,GAC9C,IAAM5G,EAAIsM,EAAKlG,MACTmE,EAAI+B,EAAKtH,OAETiI,EAAK,KAAAnW,OACL,IAAMkJ,EAAC,KAAAlJ,OAAIyT,EAAI,EAAC,MAAAzT,OAAKkJ,EAAI,EAAC,KAAAlJ,OAAIyT,EAAI,EAAC,aAAAzT,OAAYyT,EAAI,EAAC,WAAAzT,OACtDkJ,EAAI,GAAE,KAAAlJ,OAAIyT,EAAC,MAAAzT,OAAKkJ,EAAIA,EAAI,GAAE,KAAAlJ,OAAIyT,EAAC,MAAAzT,OAAKkJ,EAAC,KAAAlJ,OAAIyT,EAAI,EAAC,WAAAzT,OAC9CkJ,EAAI,EAAC,KAAAlJ,OAAIyT,EAAI,EAAC,WAAAzT,OAAUkJ,EAAI,IAAMA,EAAC,KAAAlJ,OAAIyT,EAAI,EAAC,YAAAzT,OAC5CkJ,EAAI,EAAC,KAAAlJ,OAAIkJ,EAAI,EAAC,WAAAlJ,OAAU,IAAMkJ,EAAC,KAAAlJ,OAAIyT,EAAI,GAErCiC,EAAWH,EACfxF,KAAK,iBAAsB,GAAJ0D,GACvBnR,OAAO,OAAQ,gBACfyN,KAAK,IAAKoG,GACVpG,KAAK,YAAa,cAAgB7G,EAAI,EAAI,KAAQuK,EAAI,EAAK,KAO7D,OALA3D,EAAK6F,UAAY,SAAUnB,GAE1B,OADYJ,EAActE,EAAM0E,EAEjC,EAEOkB,CACR,CAmP+CW,CAAO,IAAIlB,EAAUI,GAASzF,EAAMA,GAAMA,MAAM,EAC9FwG,OAAQ,SAACf,EAAoBzF,GAAY,OAnO1C,SAAgByF,EAAmBC,EAAY1F,GAC9C,OAAO8F,EAASL,EAAQC,EAAM1F,EAAMA,EAAKR,MAAQ,EAAGQ,EAAKR,MAAQ,EAClE,CAiO+CgH,CAAO,IAAInB,EAAUI,GAASzF,EAAMA,GAAMA,MAAM,EAC9FyG,QAAS,SAAChB,EAAoBzF,GAAY,OAhO3C,SAAiByF,EAAmBC,EAAY1F,GAC/C,OAAO8F,EAASL,EAAQC,EAAM1F,EAAmB,IAAbA,EAAKR,MAA0B,IAAbQ,EAAKR,MAC5D,CA8NgDiH,CAAQ,IAAIpB,EAAUI,GAASzF,EAAMA,GAAMA,MAAM,EAChG0G,QAAS,SAACjB,EAAoBzF,GAAY,OA7N3C,SAAiByF,EAAmBC,EAAY1F,GAC/C,IAAM2G,EAAK3G,EAAKR,MAAQ,EAGlBoG,EAAWH,EAAOjT,OAAO,UAAW,gBACxCyN,KAAK,SACL,CAAC,GAAQ,KAAQ,EAAQ,EAAQ,IAAS,MAAS,IAAS,MAAS,GAAS,GAAS,GAAQ,KAAQ,GAAQ,MAAQ9P,IAAI,SAAAqH,GAAC,OAAIA,EAAImP,CAAE,GAAE7U,KAAK,MAC7ImO,KAAK,QAASD,EAAKR,OACnBS,KAAK,SAAUD,EAAK5B,QAKtB,OAHA4B,EAAK6F,UAAY,SAAUnB,GAC1B,OAAOH,EAAiBvE,EAAMA,EAAKR,MAAQ,EAAGQ,EAAKR,MAAQ,EAAGQ,EAAM0E,EACrE,EACOkB,CACR,CA+MgDc,CAAQ,IAAIrB,EAAUI,GAASzF,EAAMA,GAAMA,MAAM,EAChG4G,OAAQ,SAACnB,EAAoBzF,GAAY,OAjL1C,SAAgByF,EAAmBC,EAAY1F,GAC9C,IAAM2C,EAAK3C,EAAKR,MAAQ,GAClBoG,EAAWH,EACfxF,KAAK,iBAAuB,EAAL0C,GACvBnQ,OAAO,IAAK,gBAcd,OAbAoT,EAASpT,OAAO,OAAQ,gBACtByN,KAAK,KAAM,GAAGA,KAAK,KAAM,GACzBA,KAAK,KAAMD,EAAKR,MAAQ,GACxBS,KAAK,KAAMD,EAAK5B,OAAS,EAAS,EAALuE,GAC7B1C,KAAK,QAASD,EAAKR,OACnBS,KAAK,SAAUD,EAAK5B,OAAc,EAALuE,GAC/BiD,EAASpT,OAAO,OAAQ,gBACtByN,KAAK,IAAK,MAAF/P,QAAS8P,EAAK5B,OAAS,EAAI,EAAIuE,EAAE,MAAAzS,OAAKyS,EAAE,KAAAzS,QAAK,EAAIyS,EAAE,MAAAzS,OAAK8P,EAAKR,MAAQ,EAAS,EAALmD,EAAM,MAAAzS,OAAU,EAALyS,IAE9F3C,EAAK6F,UAAY,SAAUnB,GAC1B,OAAOJ,EAAc,CAACjC,EAAGrC,EAAKqC,EAAGjK,EAAG4H,EAAK5H,EAAIuK,EAAK,EAAGnD,MAAOQ,EAAKR,MAAOpB,OAAQ4B,EAAK5B,OAASuE,GAAK+B,EACpG,EAEOkB,CACR,CA8J+CgB,CAAO,IAAIvB,EAAUI,GAASzF,EAAMA,GAAMA,MAAM,EAC9F6G,sBAAuB,SAACpB,EAAoBzF,GAAY,OA7JzD,SAA+ByF,EAAmBC,EAAY1F,GAA+B,IACtFmG,EAAKnG,EAAKR,MAAQ,EAClBlI,EAAI0I,EAAKR,MAAQ,GACjBoG,EAAWH,EAAOjT,OAAO,IAAK,gBAwBpC,OAvBAoT,EAASpT,OAAO,OAAQ,gBACtByN,KAAK,IAAK,IAAF/P,QAAO8P,EAAKR,MAAQ,EAAC,KAAAtP,QAAK8P,EAAK5B,OAAS,EAAC,QAAAlO,OAAO8P,EAAK5B,OAAM,MAAAlO,OAAK8P,EAAKR,MAAQ,EAAC,KAAAtP,QAAK8P,EAAK5B,OAAS,EAAC,QAAAlO,OAAO8P,EAAK5B,SACxHwH,EAASpT,OAAO,SAAU,gBACxByN,KAAK,MAAOD,EAAKR,MAAQ,EAAI2G,EAAK,GAClClG,KAAK,KAAM,GACXA,KAAK,IAAS,GAAJ3I,GACZsO,EAASpT,OAAO,OAAQ,gBACtByN,KAAK,IAAKD,EAAKR,MAAQ,EAAI2G,EAAK,EAAQ,GAAJ7O,GACpC2I,KAAK,KAAM3I,GACX2I,KAAK,QAAa,GAAJ3I,GACd2I,KAAK,SAAc,EAAJ3I,GACjBsO,EAASpT,OAAO,OAAQ,gBACtByN,KAAK,KAAM3I,GACX2I,KAAK,KAAM3I,GACX2I,KAAK,KAAMyF,EAAKlG,MAAQ,EAAI2G,GAC5BlG,KAAK,KAAMyF,EAAKtH,OAAS,GACzB6B,KAAK,QAASyF,EAAKlG,MAAQ,EAAI2G,GAC/BlG,KAAK,SAAUyF,EAAKtH,QAEtB4B,EAAK6F,UAAY,SAAUnB,GAC1B,OAAOJ,EAAc,CAACjC,EAAGrC,EAAKqC,EAAGjK,EAAG4H,EAAK5H,EAAGoH,MAAOQ,EAAKR,MAAQ,EAAI2G,EAAI/H,OAAQ4B,EAAK5B,QAASsG,EAC/F,EAEOkB,CACR,CAiI8DiB,CAAsB,IAAIxB,EAAUI,GAASzF,EAAMA,GAAMA,MAAM,EAC5H+F,qBAAsB,SAACN,EAAoBzF,GAAY,OAAK+F,EAAqB,IAAIV,EAAUI,GAASzF,EAAMA,GAAMA,MAAM,EAC1H8G,aAAc,SAACrB,EAAoBzF,GAAY,OAAK+F,EAAqB,IAAIV,EAAUI,GAASzF,EAAMA,GAAMA,MAAM,EAClH+G,KAAM,SAACtB,EAAoBzF,GAAY,OApGxC,SAAcyF,EAAmBC,EAAY1F,GAC5C,IAAM5G,EAAI4G,EAAKR,MACTmE,EAAI3D,EAAK5B,OACT2E,EAAKY,EAAI,EACTb,EAAKC,GAAM,IAAM3J,EAAI,IAErBiN,EAAK,IAAAnW,QACL4S,EAAE,aAAA5S,OACJ4S,EAAE,KAAA5S,OAAI6S,EAAE,aAAA7S,OAAYyT,EAAC,WAAAzT,OACrB4S,EAAE,KAAA5S,OAAI6S,EAAE,aAAA7S,QAAayT,EAAC,WAAAzT,OACtBkJ,EAAC,aAAAlJ,OACD4S,EAAE,KAAA5S,OAAI6S,EAAE,aAAA7S,OAAYyT,EAAC,WAAAzT,QACpBkJ,EAAC,MAEAwM,EAAWH,EACfjT,OAAO,OAAQ,gBACfyN,KAAK,IAAKoG,GACVpG,KAAK,YAAa,cAAgB7G,EAAI,EAAI,KAAQuK,EAAI,EAAK,KAM7D,OAJA3D,EAAK6F,UAAY,SAAUnB,GAC1B,OAAOJ,EAAc,CAACjC,EAAGrC,EAAKqC,EAAIS,EAAI1K,EAAG4H,EAAK5H,EAAGoH,MAAOQ,EAAKR,MAAQ,EAAIsD,EAAI1E,OAAQ4B,EAAK5B,QAASsG,EACpG,EAEOkB,CACR,CA4E6CmB,CAAK,IAAI1B,EAAUI,GAASzF,EAAMA,GAAMA,MAAM,EAC1FgH,MAAO,SAACvB,EAAoBzF,GAAY,OA3EzC,SAAeyF,EAAmBC,EAAY1F,GAC7C,IAAMiH,EAAqB,IAAbjH,EAAKR,MACblI,EAAI0I,EAAKR,MAAQ,GACjBmD,EAAKsE,EAAQ,EAAI3P,EACjBsO,EAAWH,EACfxF,KAAK,iBAAkBgH,GACvBzU,OAAO,IAAK,gBACZyN,KAAK,YAAa,eAAkBgH,EAAQ,EAAK,KA0BnD,OAxBArB,EAASpT,OAAO,OAAQ,gBACtByN,KAAK,KAAM3I,GAAG2I,KAAK,KAAM3I,GACzB2I,KAAK,KAAMgH,EAAQ,GACnBhH,KAAK,KAAMD,EAAK5B,OAAS,EAAI6I,EAAQ,GACrChH,KAAK,QAASgH,GACdhH,KAAK,SAAUgH,GAEjBrB,EAASpT,OAAO,OAAQ,gBACtByN,KAAK,IAAK,YAAF/P,QACJ+W,EAAQ,EAAC,KAAA/W,QAAK8P,EAAK5B,OAAS,EAAI9G,EAAI,EAAC,2BAAApH,OACtC+W,EAAQ,EAAC,KAAA/W,QAAK8P,EAAK5B,OAAS,EAAI9G,EAAI,EAAC,yBAG1CsO,EAASpT,OAAO,OAAQ,gBACtByN,KAAK,KAAM3I,GAAG2I,KAAK,KAAM3I,GACzB2I,KAAK,KAAMD,EAAKR,MAAQ,GACxBS,KAAK,KAAMD,EAAK5B,OAAS,EAAIuE,GAC7B1C,KAAK,QAASD,EAAKR,OACnBS,KAAK,SAAUD,EAAK5B,OAASuE,GAE/B3C,EAAK6F,UAAY,SAAUnB,GAC1B,OAAOJ,EAAc,CAACjC,EAAGrC,EAAKqC,EAAGjK,EAAG4H,EAAK5H,EAAGoH,MAAOQ,EAAKR,MAAOpB,OAAQ4B,EAAK5B,OAAS6I,EAAQ,GAAIvC,EAClG,EAEOkB,CACR,CAyC8CoB,CAAM,IAAI3B,EAAUI,GAASzF,EAAMA,GAAMA,MAAM,EAC5FkH,WAAY,SAACzB,EAAoBzF,GAAY,OAxC9C,SAAoByF,EAAmBC,EAAY1F,GAClD,IAAM2C,EAAK3C,EAAK5B,OAAS,EACnBwH,EAAWH,EACfxF,KAAK,iBAAkB0C,GACvBnQ,OAAO,IAAK,gBAkBd,OAjBAoT,EAASpT,OAAO,OAAQ,gBACtByN,KAAK,IAAK,YAAF/P,QACJ8P,EAAKR,MAAQ,EAAC,KAAAtP,QAAK8P,EAAK5B,OAAS,EAAIuE,EAAE,MAAAzS,OAAK8P,EAAKR,MAAK,aAAAtP,QACtD8P,EAAKR,MAAQ,EAAImD,EAAK,EAAC,KAAAzS,QAAK8P,EAAK5B,OAAS,EAAIuE,EAAK,EAAC,MAAAzS,OAAKyS,EAAK,EAAC,MAAAzS,OAAKyS,EAAK,EAAC,MAAAzS,QAAMyS,EAAK,EAAC,eAAAzS,QACtF8P,EAAKR,MAAQ,EAAImD,EAAE,KAAAzS,QAAK8P,EAAK5B,OAAS,EAAIuE,EAAK,EAAC,MAAAzS,OAAK8P,EAAKR,MAAQmD,EAAKA,EAAK,EAAC,MAAAzS,OAAKyS,EAAK,EAAC,MAAAzS,QAAM8P,EAAKR,MAAQmD,EAAKA,EAAK,EAAC,aAE5HiD,EAASpT,OAAO,OAAQ,gBACtByN,KAAK,KAAM,GAAGA,KAAK,KAAM,GACzBA,KAAK,KAAMD,EAAKR,MAAQ,GACxBS,KAAK,KAAMD,EAAK5B,OAAS,GACzB6B,KAAK,QAASD,EAAKR,OACnBS,KAAK,SAAUD,EAAK5B,QAEtB4B,EAAK6F,UAAY,SAAUnB,GAC1B,OAAOJ,EAActE,EAAM0E,EAC5B,EAEOkB,CACR,CAiBmDsB,CAAW,IAAI7B,EAAUI,GAASzF,EAAMA,GAAMA,MAAM,G,aC1WvG,IAAAtT,EAAA2K,EAAAC,EAAA,mBAAAC,OAAAA,OAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,aAAA,yBAAAC,EAAAN,EAAAE,EAAAE,EAAAE,GAAA,IAAA9G,EAAA0G,GAAAA,EAAAK,qBAAAC,EAAAN,EAAAM,EAAAC,EAAAvH,OAAAwH,OAAAlH,EAAA+G,WAAA,OAAAI,EAAAF,EAAA,mBAAAT,EAAAE,EAAAE,GAAA,IAAAE,EAAA9G,EAAAiH,EAAAG,EAAA,EAAAC,EAAAT,GAAA,GAAAU,GAAA,EAAAC,EAAA,CAAAF,EAAA,EAAAX,EAAA,EAAAc,EAAA5L,EAAA2E,EAAAkH,EAAAL,EAAAK,EAAAC,KAAA9L,EAAA,GAAA6L,EAAA,SAAAlB,EAAAC,GAAA,OAAAM,EAAAP,EAAAvG,EAAA,EAAAiH,EAAArL,EAAA2L,EAAAb,EAAAF,EAAAjG,CAAA,YAAAkH,EAAAjB,EAAAE,GAAA,IAAA1G,EAAAwG,EAAAS,EAAAP,EAAAH,EAAA,GAAAe,GAAAF,IAAAR,GAAAL,EAAAc,EAAA7H,OAAA+G,IAAA,KAAAK,EAAAE,EAAAO,EAAAd,GAAAkB,EAAAF,EAAAF,EAAAM,EAAAb,EAAA,GAAAN,EAAA,GAAAI,EAAAe,IAAAjB,KAAAO,EAAAH,GAAA9G,EAAA8G,EAAA,OAAA9G,EAAA,MAAA8G,EAAA,GAAAA,EAAA,GAAAlL,GAAAkL,EAAA,IAAAW,KAAAb,EAAAJ,EAAA,GAAAiB,EAAAX,EAAA,KAAA9G,EAAA,EAAAuH,EAAAC,EAAAd,EAAAa,EAAAb,EAAAI,EAAA,IAAAW,EAAAE,IAAAf,EAAAJ,EAAA,GAAAM,EAAA,GAAAJ,GAAAA,EAAAiB,KAAAb,EAAA,GAAAN,EAAAM,EAAA,GAAAJ,EAAAa,EAAAb,EAAAiB,EAAA3H,EAAA,OAAA4G,GAAAJ,EAAA,SAAAjG,EAAA,MAAA+G,GAAA,EAAAZ,CAAA,iBAAAE,EAAAS,EAAAM,GAAA,GAAAP,EAAA,QAAAQ,UAAA,oCAAAN,GAAA,IAAAD,GAAAI,EAAAJ,EAAAM,GAAA3H,EAAAqH,EAAAJ,EAAAU,GAAApB,EAAAvG,EAAA,EAAApE,EAAAqL,KAAAK,GAAA,CAAAR,IAAA9G,EAAAA,EAAA,GAAAA,EAAA,IAAAuH,EAAAb,GAAA,GAAAe,EAAAzH,EAAAiH,IAAAM,EAAAb,EAAAO,EAAAM,EAAAC,EAAAP,GAAA,OAAAG,EAAA,EAAAN,EAAA,IAAA9G,IAAA4G,EAAA,QAAAL,EAAAO,EAAAF,GAAA,MAAAL,EAAAA,EAAAsB,KAAAf,EAAAG,IAAA,MAAAW,UAAA,wCAAArB,EAAAuB,KAAA,OAAAvB,EAAAU,EAAAV,EAAA/D,MAAAxC,EAAA,IAAAA,EAAA,YAAAA,IAAAuG,EAAAO,EAAA,SAAAP,EAAAsB,KAAAf,GAAA9G,EAAA,IAAAiH,EAAAW,UAAA,oCAAAhB,EAAA,YAAA5G,EAAA,GAAA8G,EAAAlL,CAAA,UAAA2K,GAAAe,EAAAC,EAAAb,EAAA,GAAAO,EAAAT,EAAAqB,KAAAnB,EAAAa,MAAAhH,EAAA,YAAAgG,GAAAO,EAAAlL,EAAAoE,EAAA,EAAAiH,EAAAV,CAAA,SAAAa,EAAA,UAAA5E,MAAA+D,EAAAuB,KAAAR,EAAA,GAAAd,EAAAI,EAAAE,IAAA,GAAAG,CAAA,KAAA1G,EAAA,YAAAyG,IAAA,UAAAe,IAAA,UAAAC,IAAA,CAAAzB,EAAA7G,OAAAuI,eAAA,IAAAjI,EAAA,GAAA0G,GAAAH,EAAAA,EAAA,GAAAG,QAAAS,EAAAZ,EAAA,GAAAG,EAAA,yBAAAH,GAAAU,EAAAe,EAAAjB,UAAAC,EAAAD,UAAArH,OAAAwH,OAAAlH,GAAA,SAAAoH,EAAAxL,GAAA,OAAA8D,OAAAwI,eAAAxI,OAAAwI,eAAAtM,EAAAoM,IAAApM,EAAAuM,UAAAH,EAAAb,EAAAvL,EAAAgL,EAAA,sBAAAhL,EAAAmL,UAAArH,OAAAwH,OAAAD,GAAArL,CAAA,QAAAmM,EAAAhB,UAAAiB,EAAAb,EAAAF,EAAA,cAAAe,GAAAb,EAAAa,EAAA,cAAAD,GAAAA,EAAAK,YAAA,oBAAAjB,EAAAa,EAAApB,EAAA,qBAAAO,EAAAF,GAAAE,EAAAF,EAAAL,EAAA,aAAAO,EAAAF,EAAAP,EAAA,yBAAAS,EAAAF,EAAA,oDAAAoB,EAAA,kBAAAC,EAAAxB,EAAAyB,EAAAnB,EAAA,cAAAD,EAAAvL,EAAA4K,EAAAE,EAAAH,GAAA,IAAAO,EAAApH,OAAA8I,eAAA,IAAA1B,EAAA,gBAAAlL,GAAAkL,EAAA,EAAAK,EAAA,SAAAvL,EAAA4K,EAAAE,EAAAH,GAAA,GAAAC,EAAAM,EAAAA,EAAAlL,EAAA4K,EAAA,CAAAhE,MAAAkE,EAAA+B,YAAAlC,EAAAmC,cAAAnC,EAAAoC,UAAApC,IAAA3K,EAAA4K,GAAAE,MAAA,KAAAE,EAAA,SAAAJ,EAAAE,GAAAS,EAAAvL,EAAA4K,EAAA,SAAA5K,GAAA,YAAAgN,QAAApC,EAAAE,EAAA9K,EAAA,IAAAgL,EAAA,UAAAA,EAAA,WAAAA,EAAA,cAAAO,EAAAvL,EAAA4K,EAAAE,EAAAH,EAAA,UAAA8P,EAAA7P,GAAA,gBAAAA,GAAA,GAAAsD,MAAAC,QAAAvD,GAAA,OAAA2D,EAAA3D,EAAA,CAAA8P,CAAA9P,IAAA,SAAAA,GAAA,uBAAAC,QAAA,MAAAD,EAAAC,OAAAE,WAAA,MAAAH,EAAA,qBAAAsD,MAAAS,KAAA/D,EAAA,CAAA+P,CAAA/P,IAAA,SAAAA,EAAAjG,GAAA,GAAAiG,EAAA,qBAAAA,EAAA,OAAA2D,EAAA3D,EAAAjG,GAAA,IAAAgG,EAAA,GAAA6D,SAAAvC,KAAArB,GAAA6D,MAAA,uBAAA9D,GAAAC,EAAA8D,cAAA/D,EAAAC,EAAA8D,YAAAhM,MAAA,QAAAiI,GAAA,QAAAA,EAAAuD,MAAAS,KAAA/D,GAAA,cAAAD,GAAA,2CAAA5K,KAAA4K,GAAA4D,EAAA3D,EAAAjG,QAAA,GAAAiK,CAAAhE,IAAA,qBAAAoB,UAAA,wIAAA4O,EAAA,UAAArM,EAAA3D,EAAAjG,IAAA,MAAAA,GAAAA,EAAAiG,EAAAhH,UAAAe,EAAAiG,EAAAhH,QAAA,QAAA5D,EAAA,EAAA8K,EAAAoD,MAAAvJ,GAAA3E,EAAA2E,EAAA3E,IAAA8K,EAAA9K,GAAA4K,EAAA5K,GAAA,OAAA8K,CAAA,UAAA+C,EAAA/C,EAAAH,EAAA3K,EAAA4K,EAAAI,EAAArG,EAAAP,GAAA,QAAA8G,EAAAJ,EAAAnG,GAAAP,GAAAiH,EAAAH,EAAAtE,KAAA,OAAAkE,GAAA,YAAA9K,EAAA8K,EAAA,CAAAI,EAAAgB,KAAAvB,EAAAU,GAAAyC,QAAAC,QAAA1C,GAAA2C,KAAApD,EAAAI,EAAA,CA2BA,SAAS6P,IAGQ,IAAAC,EAAAC,EAFhBC,EAA0BrX,UAAAC,OAAA,QAAAhE,IAAA+D,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC9BsX,EAAgBtX,UAAAC,OAAA,QAAAhE,IAAA+D,UAAA,IAAAA,UAAA,GAGVuX,EAAiC,CACtCC,YAAoC,QAAzBL,EAAEE,EAAYG,mBAAW,IAAAL,EAAAA,EAdxB,IAeZM,aAAsC,QAA1BL,EAAEC,EAAYI,oBAAY,IAAAL,EAAAA,EAdzB,IAebM,iBAdiB,GAejBxJ,QAdQ,GAeRyJ,gBAdgB,IAqCjB,OAnBIL,IACHC,EAAgBC,YAAc7Q,KAAKuK,IAClCqG,EAAgBC,YAAcD,EAAgBI,gBAC9C,IAEDJ,EAAgBE,aAAe9Q,KAAKuK,IACnCqG,EAAgBE,aAAeF,EAAgBI,gBAC/C,IAEDJ,EAAgBG,iBAAmB/Q,KAAKuK,IACvCqG,EAAgBG,iBAAmBH,EAAgBI,gBACnD,IAEDJ,EAAgBrJ,QAAUvH,KAAKuK,IAC9BqG,EAAgBrJ,QAAUqJ,EAAgBI,gBAC1C,KAIKJ,CACR,CAGA,SAASK,EACRC,EACAR,GAEA,IAAAS,EAGIT,EAFHU,UAAAA,OAAS,IAAAD,EAAG,OAAMA,EAAAE,EAEfX,EADHY,cAAAA,OAAa,IAAAD,GAAQA,EAGhBE,EAAsC,CAC3C,gBAAiB,UACjB,gBAAiBH,EACjB,uBAAwBF,EAAQL,YAAY3M,WAC5C,iCAAkCgN,EAAQH,iBAAiB7M,WAC3D,cAAe,QAAFhL,OAAUgY,EAAQ3J,QAAO,UAAArO,OAASgY,EAAQ3J,QAAO,YAAArO,OAAWgY,EAAQ3J,QAAO,WAAArO,OAAUgY,EAAQ3J,QAAO,KACjH,4CAA6C2J,EAAQJ,aAAa5M,WAClE,4CAA6C,KAC7C,kBAAmB,WACnB,+CAAgD,UAChD,2CAA4C,UAC5C,+CAAgD,OAChD,8DAA+D,MAC/D,qCAAsC,kBACtC,qCAAsC,SACtC,4CAA6C,cAC7C,mDAAoD,QACpD,0CAA2C,kBAC3C,2BAA4B,MAQ7B,OALIoN,IACHC,EAAY,kDAAoD,cAChEA,EAAY,8CAAgD,QAGtDA,CACR,CAEO,SAAeC,EAAUC,GAAA,OAAAC,EAAA5O,MAAC,KAADzJ,UAAA,CAgShC,SAAAqY,IAtYA,IAAAlR,EAoYC,OApYDA,EAsYA2B,IAAAE,EAhSO,SAAA8C,EAA0BwM,GAAgB,IAAAtW,EAAAuW,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA/M,EAAAgN,EAAAvZ,UAAA,OAAA8I,IAAAC,EAAA,SAAAyD,GAAA,cAAAA,EAAA1E,EAAA0E,EAAArF,GAAA,OAA6B,OAA3BnF,EAAsBuX,EAAAtZ,OAAA,QAAAhE,IAAAsd,EAAA,GAAAA,EAAA,GAAG,CAAC,EAAC/M,EAAArF,EAAA,EAK3D,kCAAmCkD,KAAK,SAAA7O,GAAM,OAAIA,EAAM,OAAQ,GAAC,OA0FhF,OA1FG+c,EAAG/L,EAAAvE,EACHuQ,EAAM,IAAID,EAEVE,EAAcvB,EAAoBlV,GAAS,GAG3C0W,EAAW,CAChBjd,GAAI,OACJ+d,cAAe5B,EAAca,EAAazW,GAC1CyX,SAAU,GACVT,MAAO,IAIFL,EAAU,IAAIe,IACpBpB,EAAMqB,SAASjQ,QAAQ,SAAAiG,GACtBgJ,EAAQiB,IAAIjK,EAAKlU,GAAIkU,GACrB+I,EAASe,SAASle,KAAK,CACtBE,GAAIkU,EAAKlU,GACT0T,MAAOQ,EAAKR,MACZpB,OAAQ4B,EAAK5B,QAEf,GAGM6K,EAAkB,IAAIiB,IACtBhB,EAAiB,IAAIa,IAE3BpB,EAAMwB,UAAUpQ,QAAQ,SAAAqQ,GACvB,IAAKnB,EAAgBoB,IAAID,EAAMte,IAAK,CACnCmd,EAAgBlH,IAAIqI,EAAMte,IAG1B,IAAMwe,EAAe/C,EAAoBlV,GAAS,GAG5CkY,EAAY,CACjBze,GAAIse,EAAMte,GACVge,SAAU,GACVT,MAAO,GACPQ,cAAe5B,EAAcqC,EAAcjY,IAI5C+X,EAAMhB,MAAMrP,QAAQ,SAAAyQ,GACnB,IAAK7C,EAAQ6C,GAAS,CACrBtB,EAAee,IAAIO,EAAO1e,GAAIse,EAAMte,IAEpC,IAAM2e,EAAY1B,EAASe,SAASY,UAAU,SAAAlT,GAAC,OAAIA,EAAE1L,KAAO0e,EAAO1e,EAAE,GACrE,GAAI2e,GAAa,EAAG,CACnB,IAAMzK,EAAO+I,EAASe,SAASa,OAAOF,EAAW,GAAG,GACpDF,EAAUT,SAASle,KAAKoU,EACzB,CACD,CACD,GAGIuK,EAAUT,SAASxZ,OAAS,GAC/ByY,EAASe,SAASle,KAAK2e,EAEzB,CACD,GAGA5B,EAAMU,MAAMtP,QAAQ,SAAA6Q,GAAQ,IAAAC,EACrBC,EAAY5B,EAAe6B,IAAIH,EAAKvP,KAAKvP,IACzCkf,EAAU9B,EAAe6B,IAAIH,EAAKK,GAAGnf,IAErCof,EAAU,CACfpf,GAAI8e,EAAK9e,GACTqf,QAAS,CAACP,EAAKvP,KAAKvP,IACpBsf,QAAS,CAACR,EAAKK,GAAGnf,IAClBuf,SAAuB,QAAbR,EAAAD,EAAKU,gBAAQ,IAAAT,GAAbA,EAAeva,OAAS,CAAC,CAClCib,WAAY,CAAClJ,EAAGuI,EAAKU,SAAS,GAAGjJ,EAAGjK,EAAGwS,EAAKU,SAAS,GAAGlT,GACxDoT,SAAU,CAACnJ,EAAGuI,EAAKU,SAASV,EAAKU,SAAShb,OAAS,GAAG+R,EAAGjK,EAAGwS,EAAKU,SAASV,EAAKU,SAAShb,OAAS,GAAG8H,GACpGqT,WAAYb,EAAKU,SAASnQ,MAAM,GAAI,GAAGhL,IAAI,SAAAmI,GAAC,MAAK,CAAC+J,EAAG/J,EAAE+J,EAAGjK,EAAGE,EAAEF,EAAE,UAC7D9L,GAIN,GAAIwe,GAAaE,GAAWF,IAAcE,EAAS,CAElD,IAAMU,EAAiB3C,EAASe,SAAS6B,KAAK,SAAA7a,GAAC,OAAIA,EAAEhF,KAAOgf,CAAS,GACjEY,GACHA,EAAerC,MAAMzd,KAAKsf,EAE5B,MAECnC,EAASM,MAAMzd,KAAKsf,EAEtB,GAAGrO,EAAA1E,EAAA,EAAA0E,EAAArF,EAAA,EAG0BqR,EAAIlM,OAAOoM,GAAS,OAoL/C,OApLKI,EAAatM,EAAAvE,EAGb8Q,EAAmD,GACnDC,EAAsG,GAGtGuC,EAAe,SAAC3M,GAA6C,IAAA4M,EAA7BnC,EAAOrZ,UAAAC,OAAA,QAAAhE,IAAA+D,UAAA,GAAAA,UAAA,GAAG,EAAGsZ,EAAOtZ,UAAAC,OAAA,QAAAhE,IAAA+D,UAAA,GAAAA,UAAA,GAAG,EAC1C,QAAlBwb,EAAA5M,EAAU6K,gBAAQ,IAAA+B,GAAlBA,EAAoB9R,QAAQ,SAAC+R,GACxBA,EAAMhC,SAET8B,EAAaE,EAAOpC,GAAWoC,EAAMzJ,GAAK,GAAIsH,GAAWmC,EAAM1T,GAAK,IAGpEgR,EAAMxd,KAAK,CACVE,GAAIggB,EAAMhgB,GACVuW,EAAGqH,GAAWoC,EAAMzJ,GAAK,IAAMyJ,EAAMtM,OAAS,GAAK,EACnDpH,EAAGuR,GAAWmC,EAAM1T,GAAK,IAAM0T,EAAM1N,QAAU,GAAK,GAGvD,EACD,EAGAuK,EAAMU,MAAMtP,QAAQ,SAAAgS,GACnB,IACIC,EADEV,EAA0C,GAI1CW,EAAsE,GAGtEC,EAA4B,SAACC,GAAmD,IAAAC,EAA7B1C,EAAOrZ,UAAAC,OAAA,QAAAhE,IAAA+D,UAAA,GAAAA,UAAA,GAAG,EAAGsZ,EAAOtZ,UAAAC,OAAA,QAAAhE,IAAA+D,UAAA,GAAAA,UAAA,GAAG,EACvD,QAAxB+b,EAAAD,EAAgBrC,gBAAQ,IAAAsC,GAAxBA,EAA0BrS,QAAQ,SAAC+R,GAClC,IAAMO,EAAcP,EAAMhgB,GAAGwgB,MAAM,IAAIC,OAAO,IAADrc,OAAK6b,EAAajgB,GAAG0gB,QAAQ,sBAAuB,QAAO,qBACpGH,GACHJ,EAAsBrgB,KAAK,CAC1ByW,EAAGqH,GAAWoC,EAAMzJ,GAAK,IAAMyJ,EAAMtM,OAAS,GAAK,EACnDpH,EAAGuR,GAAWmC,EAAM1T,GAAK,IAAM0T,EAAM1N,QAAU,GAAK,EACpDqO,MAAOC,SAASL,EAAY,MAG1BP,EAAMhC,UACToC,EAA0BJ,EAAOpC,GAAWoC,EAAMzJ,GAAK,GAAIsH,GAAWmC,EAAM1T,GAAK,GAEnF,EACD,EASA,GAPA8T,EAA0B/C,GAG1B8C,EAAsB7a,KAAK,SAACC,EAAGC,GAAC,OAAKD,EAAEob,MAAQnb,EAAEmb,KAAK,GACtDnB,EAAS1f,KAAIkO,MAAbwR,EAAQnE,EAAS8E,EAAsB9b,IAAI,SAAA6P,GAAI,MAAK,CAACqC,EAAGrC,EAAKqC,EAAGjK,EAAG4H,EAAK5H,EAAE,KAGtE2T,EAAaC,OAASD,EAAaC,MAAMrL,QAAU2K,EAAShb,QAAU,EAAG,CAC5E,IAAMqc,EAAW3V,KAAK4V,MAAMtB,EAAShb,OAAS,GAC9C,GAAIgb,EAAShb,OAAS,GAAM,EAAG,CAE9B,IAAMuc,EAAKvB,EAASqB,EAAW,GACzBG,EAAKxB,EAASqB,GACpBX,EAAQ,CACP3J,GAAIwK,EAAGxK,EAAIyK,EAAGzK,GAAK,EACnBjK,GAAIyU,EAAGzU,EAAI0U,EAAG1U,GAAK,EAErB,MAEC4T,EAAQV,EAASqB,EAEnB,CAEAtD,EAAMzd,KAAK,CACVE,GAAIigB,EAAajgB,GACjBwf,SAAAA,EACAU,MAAAA,GAEF,GAGMe,EAAwB,SAAC9N,GAAmB,IAAA+N,EAAAC,EAClC,QAAfD,EAAA/N,EAAUoK,aAAK,IAAA2D,GAAfA,EAAiBjT,QAAQ,SAAC6Q,GAEzB,IAAIA,EAAK9e,GAAGM,SAAS,eAKjBid,EAAMxY,KAAK,SAAAnE,GAAC,OAAIA,EAAEZ,KAAO8e,EAAK9e,EAAE,GAApC,CAIA,IACIkgB,EADEV,EAA0C,GAIhD,GAAIV,EAAKS,UAAYT,EAAKS,SAAS/a,OAAS,EAAG,CAC9C,IAAM4B,EAAU0Y,EAAKS,SAAS,GAoB9B,GAjBInZ,EAAQqZ,YACXD,EAAS1f,KAAK,CAACyW,EAAGnQ,EAAQqZ,WAAWlJ,EAAGjK,EAAGlG,EAAQqZ,WAAWnT,IAI3DlG,EAAQuZ,YACXvZ,EAAQuZ,WAAW1R,QAAQ,SAACmT,GAC3B5B,EAAS1f,KAAK,CAACyW,EAAG6K,EAAG7K,EAAGjK,EAAG8U,EAAG9U,GAC/B,GAIGlG,EAAQsZ,UACXF,EAAS1f,KAAK,CAACyW,EAAGnQ,EAAQsZ,SAASnJ,EAAGjK,EAAGlG,EAAQsZ,SAASpT,IAIvDkT,EAAShb,QAAU,EAAG,CACzB,IAAMqc,EAAW3V,KAAK4V,MAAMtB,EAAShb,OAAS,GAC9C,GAAIgb,EAAShb,OAAS,GAAM,EAAG,CAE9B,IAAMuc,EAAKvB,EAASqB,EAAW,GACzBG,EAAKxB,EAASqB,GACpBX,EAAQ,CACP3J,GAAIwK,EAAGxK,EAAIyK,EAAGzK,GAAK,EACnBjK,GAAIyU,EAAGzU,EAAI0U,EAAG1U,GAAK,EAErB,MAEC4T,EAAQV,EAASqB,EAEnB,CACD,CAEAtD,EAAMzd,KAAK,CACVE,GAAI8e,EAAK9e,GACTwf,SAAAA,EACAU,MAAAA,GA/CD,CAiDD,GAGkB,QAAlBiB,EAAAhO,EAAU6K,gBAAQ,IAAAmD,GAAlBA,EAAoBlT,QAAQ,SAAC+R,GACxBA,EAAMzC,OACT0D,EAAsBjB,EAExB,EACD,EAEAF,EAAazC,GACb4D,EAAsB5D,GAIlBC,EAAM9Y,OAAS,IAEZkZ,EAAOxS,KAAKC,IAAG6C,MAAR9C,KAAImQ,EAAQiC,EAAMjZ,IAAI,SAAAqH,GAAC,OAAIA,EAAE6K,CAAC,KACrCoH,EAAOzS,KAAKC,IAAG6C,MAAR9C,KAAImQ,EAAQiC,EAAMjZ,IAAI,SAAAqH,GAAC,OAAIA,EAAEY,CAAC,KAIrCsR,EADU,GACCF,EACXG,EAFU,GAECF,EAGjBL,EAAMrP,QAAQ,SAAAiG,GACbA,EAAKqC,GAAKqH,EACV1J,EAAK5H,GAAKuR,CACX,GAGAN,EAAMtP,QAAQ,SAAA6Q,GACbA,EAAKU,SAASvR,QAAQ,SAAAoT,GACrBA,EAAO9K,GAAKqH,EACZyD,EAAO/U,GAAKuR,CACb,GACIiB,EAAKoB,QACRpB,EAAKoB,MAAM3J,GAAKqH,EAChBkB,EAAKoB,MAAM5T,GAAKuR,EAElB,IACA9M,EAAAxL,EAAA,EAEM,CAAE+X,MAAAA,EAAOC,MAAAA,IAAO,OAGmC,OAHnCxM,EAAA1E,EAAA,EAAAyE,EAAAC,EAAAvE,EAGvB3C,QAAQyX,KAAK,qCAAoCxQ,GAASC,EAAAxL,EAAA,EACnDgc,EAAqB1E,IAAM,EAAAxM,EAAA,gBAIpCuM,EAtYA,eAAArR,EAAA,KAAA3K,EAAA2D,UAAA,WAAAmK,QAAA,SAAAlD,EAAAI,GAAA,IAAArG,EAAAmG,EAAAsC,MAAAzC,EAAA3K,GAAA,SAAA2Q,EAAA7F,GAAA+C,EAAAlJ,EAAAiG,EAAAI,EAAA2F,EAAAC,EAAA,OAAA9F,EAAA,UAAA8F,EAAA9F,GAAA+C,EAAAlJ,EAAAiG,EAAAI,EAAA2F,EAAAC,EAAA,QAAA9F,EAAA,CAAA6F,OAAA,MAoYCqL,EAAA5O,MAAA,KAAAzJ,UAAA,CAGD,SAASgd,EAAqB1E,GAI7B,IAAMS,EAAmD,GACnDC,EAAsE,GAGxEhH,EAAI,EAAGjK,EAAI,EAETkV,EAAUtW,KAAKuW,KAAKvW,KAAK6N,KAAK8D,EAAMqB,SAASvI,OAE/C+L,EAAM,EA0BV,OAzBA7E,EAAMqB,SAASjQ,QAAQ,SAAAiG,GACtBoJ,EAAMxd,KAAK,CACVE,GAAIkU,EAAKlU,GACTuW,EAAGA,EACHjK,EAAGA,MAGJoV,GACWF,GACVE,EAAM,EACNnL,EAAI,EACJjK,GAfc,KAiBdiK,GAjBc,GAmBhB,GAGAsG,EAAMU,MAAMtP,QAAQ,SAAA6Q,GACnBvB,EAAMzd,KAAK,CACVE,GAAI8e,EAAK9e,GACTwf,SAAU,IAEZ,GAEO,CAAElC,MAAAA,EAAOC,MAAAA,EACjB,CAEA,SAAS1B,EAAQ6C,GAChB,MAAO,UAAWA,CACnB,C,+xBC5aO,IAAMiD,EAAI,WAehB,O,EANA,SAAAA,EAAY3hB,EAAY4hB,EAAsBC,GAA6B,IAkE1DC,EACbra,EAnEuER,EAAA,M,4FAAAC,CAAA,KAAAya,GAAAxa,EAAA,gBARxC,IAAEA,EAAA,WACf,GAACA,EAAA,oBACQ,GAACA,EAAA,wBAIO,MAGtCC,KAAKwa,UAAYA,EACjBxa,KAAKya,UAAYA,EACjBza,KAAK2a,QA+DWD,EA/DO,kBAAM7a,EAAK+a,SAAS,EAiErC,WACN,IAAMC,EAAU7a,KAKhBQ,aAAaH,GACbA,EAAUE,WALI,WACbF,EAAU,KACVqa,EAAK9T,MAAMiU,EACZ,EAtE6C,IAyE9C,EAxEA,G,EAEA,EAAAve,IAAA,eAAA8D,MACA,WACMJ,KAAK8a,mBACT9a,KAAK8a,iBAAmB9a,KAAK+a,UAAU/a,KAAKwa,aAE9C,GAAC,CAAAle,IAAA,SAAA8D,MAED,WACC,OAAOJ,KAAKgb,SAAS5d,MACtB,GAAC,CAAAd,IAAA,eAAA8D,MAED,WACC,OAAOJ,KAAK+a,UAAU/a,KAAKgb,SAAShb,KAAK4R,IAAM,GAChD,GAAC,CAAAtV,IAAA,UAAA8D,MAED,WACC,IAAKJ,KAAK8a,iBACT,MAAM9Q,MAAM,4EAGbhK,KAAKgb,SAAShb,KAAK4R,KAAO5R,KAAK+a,UAAU/a,KAAKwa,aAC9Cxa,KAAKgb,SAAShb,KAAK4R,IAAM,GAAK5R,KAAK8a,iBACnC9a,KAAK8a,iBAAmB,KACxB9a,KAAK4R,KAAO,EAGZ5R,KAAKgb,SAASvD,OAAOzX,KAAK4R,IAC3B,GAAC,CAAAtV,IAAA,YAAA8D,MAED,SAAkB6a,GAEjB,MAA+B,oBAApBC,gBACHA,gBAAgBD,GAEjBpY,KAAKC,MAAMD,KAAKqB,UAAU+W,GAClC,GAAC,CAAA3e,IAAA,OAAA8D,MAED,WACC,KAAIJ,KAAK4R,IAAM,GAAf,CACA5R,KAAK4R,KAAO,EACZ,IAAMqJ,EAAMjb,KAAKgb,SAAShb,KAAK4R,IAAM,GACrC5R,KAAKya,UAAUza,KAAK+a,UAAUE,GAHN,CAIzB,GAAC,CAAA3e,IAAA,OAAA8D,MAED,WACC,KAAIJ,KAAK4R,IAAM5R,KAAKgb,SAAS5d,OAAS,GAAtC,CACA,IAAM6d,EAAMjb,KAAKgb,SAAShb,KAAK4R,KAC/B5R,KAAKya,UAAUza,KAAK+a,UAAUE,IAC9Bjb,KAAK4R,KAAO,CAHmC,CAIhD,GAAC,CAAAtV,IAAA,UAAA8D,MAED,WACC,OAAOJ,KAAK4R,MAAQ5R,KAAKmb,YAC1B,GAAC,CAAA7e,IAAA,WAAA8D,MAED,WACCJ,KAAKmb,aAAenb,KAAK4R,GAC1B,M,6EAAC,CAxEe,G,SCwGJwJ,EAAc,GAMdC,EAAa,SAAC3M,EAAgB5D,GAC1CxN,OAAOC,KAAKuN,GAAOjE,QAAQ,SAAAvK,GAC1B,IAAM8D,EAAQ0K,EAAMxO,GACC,iBAAV8D,EACVsO,EAAG5D,MAAMwQ,YAAYhf,EAAK8D,EAAM4H,YAEhC0G,EAAG5D,MAAMwQ,YAAYhf,EAAK8D,EAE5B,EACD,EAGamb,EAAoB,SAACjL,EAAWC,GAC5C,OAAOzM,KAAK6N,MAAMpB,EAAGpB,EAAImB,EAAGnB,IAAMoB,EAAGpB,EAAImB,EAAGnB,IAAMoB,EAAGrL,EAAIoL,EAAGpL,IAAMqL,EAAGrL,EAAIoL,EAAGpL,GAC7E,E,mPClIA,IAAA1L,EAAA2K,EAAAC,EAAA,mBAAAC,OAAAA,OAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,aAAA,yBAAAC,EAAAN,EAAAE,EAAAE,EAAAE,GAAA,IAAA9G,EAAA0G,GAAAA,EAAAK,qBAAAC,EAAAN,EAAAM,EAAAC,EAAAvH,OAAAwH,OAAAlH,EAAA+G,WAAA,OAAAI,EAAAF,EAAA,mBAAAT,EAAAE,EAAAE,GAAA,IAAAE,EAAA9G,EAAAiH,EAAAG,EAAA,EAAAC,EAAAT,GAAA,GAAAU,GAAA,EAAAC,EAAA,CAAAF,EAAA,EAAAX,EAAA,EAAAc,EAAA5L,EAAA2E,EAAAkH,EAAAL,EAAAK,EAAAC,KAAA9L,EAAA,GAAA6L,EAAA,SAAAlB,EAAAC,GAAA,OAAAM,EAAAP,EAAAvG,EAAA,EAAAiH,EAAArL,EAAA2L,EAAAb,EAAAF,EAAAjG,CAAA,YAAAkH,EAAAjB,EAAAE,GAAA,IAAA1G,EAAAwG,EAAAS,EAAAP,EAAAH,EAAA,GAAAe,GAAAF,IAAAR,GAAAL,EAAAc,EAAA7H,OAAA+G,IAAA,KAAAK,EAAAE,EAAAO,EAAAd,GAAAkB,EAAAF,EAAAF,EAAAM,EAAAb,EAAA,GAAAN,EAAA,GAAAI,EAAAe,IAAAjB,KAAAO,EAAAH,GAAA9G,EAAA8G,EAAA,OAAA9G,EAAA,MAAA8G,EAAA,GAAAA,EAAA,GAAAlL,GAAAkL,EAAA,IAAAW,KAAAb,EAAAJ,EAAA,GAAAiB,EAAAX,EAAA,KAAA9G,EAAA,EAAAuH,EAAAC,EAAAd,EAAAa,EAAAb,EAAAI,EAAA,IAAAW,EAAAE,IAAAf,EAAAJ,EAAA,GAAAM,EAAA,GAAAJ,GAAAA,EAAAiB,KAAAb,EAAA,GAAAN,EAAAM,EAAA,GAAAJ,EAAAa,EAAAb,EAAAiB,EAAA3H,EAAA,OAAA4G,GAAAJ,EAAA,SAAAjG,EAAA,MAAA+G,GAAA,EAAAZ,CAAA,iBAAAE,EAAAS,EAAAM,GAAA,GAAAP,EAAA,QAAAQ,UAAA,oCAAAN,GAAA,IAAAD,GAAAI,EAAAJ,EAAAM,GAAA3H,EAAAqH,EAAAJ,EAAAU,GAAApB,EAAAvG,EAAA,EAAApE,EAAAqL,KAAAK,GAAA,CAAAR,IAAA9G,EAAAA,EAAA,GAAAA,EAAA,IAAAuH,EAAAb,GAAA,GAAAe,EAAAzH,EAAAiH,IAAAM,EAAAb,EAAAO,EAAAM,EAAAC,EAAAP,GAAA,OAAAG,EAAA,EAAAN,EAAA,IAAA9G,IAAA4G,EAAA,QAAAL,EAAAO,EAAAF,GAAA,MAAAL,EAAAA,EAAAsB,KAAAf,EAAAG,IAAA,MAAAW,UAAA,wCAAArB,EAAAuB,KAAA,OAAAvB,EAAAU,EAAAV,EAAA/D,MAAAxC,EAAA,IAAAA,EAAA,YAAAA,IAAAuG,EAAAO,EAAA,SAAAP,EAAAsB,KAAAf,GAAA9G,EAAA,IAAAiH,EAAAW,UAAA,oCAAAhB,EAAA,YAAA5G,EAAA,GAAA8G,EAAAlL,CAAA,UAAA2K,GAAAe,EAAAC,EAAAb,EAAA,GAAAO,EAAAT,EAAAqB,KAAAnB,EAAAa,MAAAhH,EAAA,YAAAgG,GAAAO,EAAAlL,EAAAoE,EAAA,EAAAiH,EAAAV,CAAA,SAAAa,EAAA,UAAA5E,MAAA+D,EAAAuB,KAAAR,EAAA,GAAAd,EAAAI,EAAAE,IAAA,GAAAG,CAAA,KAAA1G,EAAA,YAAAyG,IAAA,UAAAe,IAAA,UAAAC,IAAA,CAAAzB,EAAA7G,OAAAuI,eAAA,IAAAjI,EAAA,GAAA0G,GAAAH,EAAAA,EAAA,GAAAG,QAAAS,EAAAZ,EAAA,GAAAG,EAAA,yBAAAH,GAAAU,EAAAe,EAAAjB,UAAAC,EAAAD,UAAArH,OAAAwH,OAAAlH,GAAA,SAAAoH,EAAAxL,GAAA,OAAA8D,OAAAwI,eAAAxI,OAAAwI,eAAAtM,EAAAoM,IAAApM,EAAAuM,UAAAH,EAAAb,EAAAvL,EAAAgL,EAAA,sBAAAhL,EAAAmL,UAAArH,OAAAwH,OAAAD,GAAArL,CAAA,QAAAmM,EAAAhB,UAAAiB,EAAAb,EAAAF,EAAA,cAAAe,GAAAb,EAAAa,EAAA,cAAAD,GAAAA,EAAAK,YAAA,oBAAAjB,EAAAa,EAAApB,EAAA,qBAAAO,EAAAF,GAAAE,EAAAF,EAAAL,EAAA,aAAAO,EAAAF,EAAAP,EAAA,yBAAAS,EAAAF,EAAA,oDAAAoB,EAAA,kBAAAC,EAAAxB,EAAAyB,EAAAnB,EAAA,cAAAD,EAAAvL,EAAA4K,EAAAE,EAAAH,GAAA,IAAAO,EAAApH,OAAA8I,eAAA,IAAA1B,EAAA,gBAAAlL,GAAAkL,EAAA,EAAAK,EAAA,SAAAvL,EAAA4K,EAAAE,EAAAH,GAAA,GAAAC,EAAAM,EAAAA,EAAAlL,EAAA4K,EAAA,CAAAhE,MAAAkE,EAAA+B,YAAAlC,EAAAmC,cAAAnC,EAAAoC,UAAApC,IAAA3K,EAAA4K,GAAAE,MAAA,KAAAE,EAAA,SAAAJ,EAAAE,GAAAS,EAAAvL,EAAA4K,EAAA,SAAA5K,GAAA,YAAAgN,QAAApC,EAAAE,EAAA9K,EAAA,IAAAgL,EAAA,UAAAA,EAAA,WAAAA,EAAA,cAAAO,EAAAvL,EAAA4K,EAAAE,EAAAH,EAAA,UAAAkD,EAAA/C,EAAAH,EAAA3K,EAAA4K,EAAAI,EAAArG,EAAAP,GAAA,QAAA8G,EAAAJ,EAAAnG,GAAAP,GAAAiH,EAAAH,EAAAtE,KAAA,OAAAkE,GAAA,YAAA9K,EAAA8K,EAAA,CAAAI,EAAAgB,KAAAvB,EAAAU,GAAAyC,QAAAC,QAAA1C,GAAA2C,KAAApD,EAAAI,EAAA,UAAAyP,EAAA7P,GAAA,gBAAAA,GAAA,GAAAsD,MAAAC,QAAAvD,GAAA,OAAA2D,EAAA3D,EAAA,CAAA8P,CAAA9P,IAAA,SAAAA,GAAA,uBAAAC,QAAA,MAAAD,EAAAC,OAAAE,WAAA,MAAAH,EAAA,qBAAAsD,MAAAS,KAAA/D,EAAA,CAAA+P,CAAA/P,IAAAgE,EAAAhE,IAAA,qBAAAoB,UAAA,wIAAA4O,EAAA,UAAA3M,EAAArD,EAAA5K,GAAA,gBAAA4K,GAAA,GAAAsD,MAAAC,QAAAvD,GAAA,OAAAA,CAAA,CAAAwD,CAAAxD,IAAA,SAAAA,EAAAmB,GAAA,IAAApB,EAAA,MAAAC,EAAA,yBAAAC,QAAAD,EAAAC,OAAAE,WAAAH,EAAA,uBAAAD,EAAA,KAAA3K,EAAA8K,EAAAI,EAAAG,EAAA1G,EAAA,GAAA6G,GAAA,EAAAR,GAAA,SAAAE,GAAAP,EAAAA,EAAAsB,KAAArB,IAAAyD,KAAA,IAAAtC,EAAA,IAAAjI,OAAA6G,KAAAA,EAAA,OAAAa,GAAA,cAAAA,GAAAxL,EAAAkL,EAAAe,KAAAtB,IAAAuB,QAAAvH,EAAAzF,KAAAc,EAAA4G,OAAAjC,EAAAf,SAAAmI,GAAAP,GAAA,UAAAZ,GAAAI,GAAA,EAAAF,EAAAF,CAAA,iBAAAY,GAAA,MAAAb,EAAA,SAAAU,EAAAV,EAAA,SAAA7G,OAAAuH,KAAAA,GAAA,kBAAAL,EAAA,MAAAF,CAAA,SAAAnG,CAAA,EAAA2J,CAAA1D,EAAA5K,IAAA4O,EAAAhE,EAAA5K,IAAA,qBAAAgM,UAAA,6IAAA6C,EAAA,UAAAD,EAAAhE,EAAAjG,GAAA,GAAAiG,EAAA,qBAAAA,EAAA,OAAA2D,EAAA3D,EAAAjG,GAAA,IAAAgG,EAAA,GAAA6D,SAAAvC,KAAArB,GAAA6D,MAAA,uBAAA9D,GAAAC,EAAA8D,cAAA/D,EAAAC,EAAA8D,YAAAhM,MAAA,QAAAiI,GAAA,QAAAA,EAAAuD,MAAAS,KAAA/D,GAAA,cAAAD,GAAA,2CAAA5K,KAAA4K,GAAA4D,EAAA3D,EAAAjG,QAAA,YAAA4J,EAAA3D,EAAAjG,IAAA,MAAAA,GAAAA,EAAAiG,EAAAhH,UAAAe,EAAAiG,EAAAhH,QAAA,QAAA5D,EAAA,EAAA8K,EAAAoD,MAAAvJ,GAAA3E,EAAA2E,EAAA3E,IAAA8K,EAAA9K,GAAA4K,EAAA5K,GAAA,OAAA8K,CAAA,UAAAmC,GAAAjN,EAAA4K,GAAA,IAAAD,EAAA7G,OAAAC,KAAA/D,GAAA,GAAA8D,OAAAoJ,sBAAA,KAAAlC,EAAAlH,OAAAoJ,sBAAAlN,GAAA4K,IAAAI,EAAAA,EAAAhH,OAAA,SAAA4G,GAAA,OAAA9G,OAAAqJ,yBAAAnN,EAAA4K,GAAAiC,UAAA,IAAAlC,EAAAzL,KAAAkO,MAAAzC,EAAAK,EAAA,QAAAL,CAAA,UAAAvD,GAAApH,GAAA,QAAA4K,EAAA,EAAAA,EAAAjH,UAAAC,OAAAgH,IAAA,KAAAD,EAAA,MAAAhH,UAAAiH,GAAAjH,UAAAiH,GAAA,GAAAA,EAAA,EAAAqC,GAAAnJ,OAAA6G,IAAA,GAAA0C,QAAA,SAAAzC,GAAArE,GAAAvG,EAAA4K,EAAAD,EAAAC,GAAA,GAAA9G,OAAAwJ,0BAAAxJ,OAAAyJ,iBAAAvN,EAAA8D,OAAAwJ,0BAAA3C,IAAAsC,GAAAnJ,OAAA6G,IAAA0C,QAAA,SAAAzC,GAAA9G,OAAA8I,eAAA5M,EAAA4K,EAAA9G,OAAAqJ,yBAAAxC,EAAAC,GAAA,UAAA5K,CAAA,UAAAgiB,GAAAhiB,EAAA4K,GAAA,QAAAD,EAAA,EAAAA,EAAAC,EAAAhH,OAAA+G,IAAA,KAAAK,EAAAJ,EAAAD,GAAAK,EAAA6B,WAAA7B,EAAA6B,aAAA,EAAA7B,EAAA8B,cAAA,YAAA9B,IAAAA,EAAA+B,UAAA,GAAAjJ,OAAA8I,eAAA5M,EAAA4N,GAAA5C,EAAAlI,KAAAkI,EAAA,WAAAzE,GAAAvG,EAAA4K,EAAAD,GAAA,OAAAC,EAAAgD,GAAAhD,MAAA5K,EAAA8D,OAAA8I,eAAA5M,EAAA4K,EAAA,CAAAhE,MAAA+D,EAAAkC,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAA/M,EAAA4K,GAAAD,EAAA3K,CAAA,UAAA4N,GAAAjD,GAAA,IAAAO,EAAA,SAAAP,GAAA,aAAA6C,EAAA7C,KAAAA,EAAA,OAAAA,EAAA,IAAA3K,EAAA2K,EAAAE,OAAA4C,aAAA,YAAAzN,EAAA,KAAAkL,EAAAlL,EAAAiM,KAAAtB,EAAAC,UAAA,aAAA4C,EAAAtC,GAAA,OAAAA,EAAA,UAAAc,UAAA,uDAAA0B,OAAA/C,EAAA,CAAAgD,CAAAhD,GAAA,gBAAA6C,EAAAtC,GAAAA,EAAAA,EAAA,GA8EA,IAs5BI+W,GAt5BEC,GDpBuC,CAC5CC,UAAW,EACXrQ,MAAO,OACPsQ,QAAS,EACTlQ,SAAU,GACVmQ,QAAQ,GCgBHC,GDbuC,CAC5CxP,MAAO,IACPpB,OAAQ,IACR6Q,WAAY,0BACZzQ,MAAO,OACPsQ,QAAS,GACTI,OAAQ,OACRtQ,SAAU,GACVyH,MAAO,OCiCK8I,GAAS,WAiCrB,OA5IDziB,EAyHC,SAAAyiB,EAAYrjB,EAAasD,GAAe,IAAA2D,EAAA,MAzHzC,SAAA1B,EAAAmG,GAAA,KAAAnG,aAAAmG,GAAA,UAAAkB,UAAA,qCAyHyC1F,CAAA,KAAAmc,GAAAlc,GAAA,qBALR,GAAIA,GAAA,oBACL,GAAIA,GAAA,iBACP,IAAEA,GAAA,qBACE,GAG/BC,KAAKpH,GAAKA,EACVoH,KAAK9D,KAAOA,EAEZ8D,KAAKmW,MAAQ,GACbnW,KAAKkc,aAAe,IAAIrF,IACxB7W,KAAK8W,SAAW,IAAID,IACpB7W,KAAKiX,UAAY,IAAIJ,IAErB7W,KAAKmc,MAAQ,IAAI5B,EAChBva,KAAKpH,GACL,kBAAMiH,EAAKuc,cAAa,EAAK,EAC7B,SAACC,GAAE,OAAKxc,EAAKyc,aAAaD,GAAI,EAAK,GAIpCE,OAAO9G,MAAQzV,IAChB,EA1IDoE,EA4IC,EAAA9H,IAAA,OAAA8D,MACA,SAAKqJ,GAAiB,IAAA9I,EAAA,KACrB8I,GAAUzJ,KAAKsc,aAAa7S,GAC5BzJ,KAAKmc,MAAQ,IAAI5B,EAChBva,KAAKpH,GACL,kBAAM+H,EAAKyb,cAAa,EAAK,EAC7B,SAACC,GAAE,OAAK1b,EAAK2b,aAAaD,GAAI,EAAK,GAEhCrc,KAAKmc,MAAM/e,UACd4C,KAAKsc,aAAatc,KAAKmc,MAAMK,eAE/B,GAAC,CAAAlgB,IAAA,UAAA8D,MAED,SAAQxH,EAAYkgB,EAAe2D,EAAaC,EAAqB5R,GACpE,GAAI9K,KAAK8W,SAASK,IAAIve,GAAK,MAAMoR,MAAM,mBAAqBpR,GAI5D,IAKI0T,EACApB,EANEiI,EAAQrI,EAAMqI,OAAS,MACvBwJ,EAAwC,WAAxBxJ,EAAMla,cACJka,EAAMla,cAM1B0jB,GACHrQ,EAAQ,IACRpB,EAAS,MAGToB,EAAQ,IACRpB,EAAS,KAQV,IAAM0R,EAAUhc,GAAA,GAAOkK,UAChB8R,EAAWtQ,aACXsQ,EAAW1R,OAElB,IAAM5G,EAAU,CACf1L,GAAAA,EAAIikB,MAAO/D,EAAO2D,IAAAA,EAAKC,YAAAA,EAAa5R,MAAKlK,GAAAA,GAAA,GAAMkb,IAAqBc,GACpEzN,EAAG,EAAGjK,EAAG,EAAGoH,MAAAA,EAAOpB,OAAAA,EAAQyH,UAAW,MAGvC3S,KAAK8W,SAASC,IAAIzS,EAAE1L,GAAI0L,EACzB,GAAC,CAAAhI,IAAA,QAAA8D,MAED,WACC,OAAOsH,MAAMS,KAAKnI,KAAK8W,SAASgG,SACjC,GAAC,CAAAxgB,IAAA,UAAA8D,MAED,SAAQxH,EAAYmkB,EAAkBC,EAAgBlE,EAAeV,EAAmBtN,GAAkB,IAAA/I,EAAA,KACzGqW,GAAYA,EAASvR,QAAQ,SAAC5B,EAAGP,GAChC,IAAMU,EAAIH,EACVG,EAAExM,GAAK,KAAHoE,OAAQpE,EAAE,KAAAoE,OAAI0H,GAClB3C,EAAKma,aAAanF,IAAI3R,EAAExM,GAAIwM,EAC7B,GACA,IAUMsS,EAAO,CACZ9e,GAAAA,EACAuP,KAAMnI,KAAK8W,SAASe,IAAIkF,GACxBhF,GAAI/X,KAAK8W,SAASe,IAAImF,GACtBlE,MAAAA,EACAV,SAAU,KACVtN,MAAKlK,GAAAA,GAAA,GAAM8a,IAAqB5Q,GAChCmS,WAhBkB,SAAChY,GACnB,IAAMG,EAAIH,EAMV,OALKG,EAAExM,KACNwM,EAAExM,GAAK,KAAHoE,OAJiB8G,KAAKoZ,MAAsB,KAAhBpZ,KAAKqZ,UAAiBnV,SAAS,KAK/DjG,EAAKma,aAAanF,IAAI3R,EAAExM,GAAIwM,IAE7BA,EAAEsS,KAAOA,EACFzS,CACR,GAUAjF,KAAKmW,MAAMzd,KAAKgf,GACZU,IACHV,EAAKU,SAAWA,EAASnb,IAAI,SAAAgI,GAAC,OAAIyS,EAAKuF,WAAWhY,EAAE,GAEtD,GAAC,CAAA3I,IAAA,WAAA8D,MAED,SAASxH,EAAYsD,EAAckhB,EAAyBtS,GAAkB,IAAAuS,EAAA,KAC7E,GAAIrd,KAAKiX,UAAUE,IAAIve,GACtB6J,QAAQQ,MAAM,iBAADjG,OAAkBpE,EAAE,KAAAoE,OAAId,QADtC,CAIA,IAAMgb,EAAe,CACpBte,GAAAA,EAAIsD,KAAAA,EAAMiT,EAAG,KAAMjK,EAAG,KAAMoH,MAAO,KAAMpB,OAAQ,KACjDgL,MAAOkH,EAAcngB,IAAI,SAAAQ,GACxB,IAAM6G,EAAI+Y,EAAKvG,SAASe,IAAIpa,IAAM4f,EAAKpG,UAAUY,IAAIpa,GAErD,OADK6G,GAAG7B,QAAQQ,MAAM,iBAADjG,OAAkBS,EAAC,yBAAAT,OAAwBpE,EAAE,MAAAoE,OAAKd,EAAI,MACpEoI,CACR,GAAG9G,OAAOK,SACViN,MAAAA,GAED9K,KAAKiX,UAAUF,IAAIne,EAAIse,EAVvB,CAWD,GASA,CAAA5a,IAAA,kBAAA8D,MAEA,SAAgB0M,EAAYwQ,GAC3BxQ,EAAKwQ,SAAWA,EAChBA,EACCxQ,EAAKyQ,IAAI3O,UAAUC,IAAI,YACvB/B,EAAKyQ,IAAI3O,UAAU4O,OAAO,YAC3Bxd,KAAKyd,gBACN,GAAC,CAAAnhB,IAAA,iBAAA8D,MAED,WACCJ,KAAKmW,MAAMtP,QAAQ,SAAArN,GACdA,EAAEue,GAAGuF,UAAY9jB,EAAE2O,KAAKmV,SAC3B9jB,EAAE+jB,IAAI3O,UAAUC,IAAI,YAEpBrV,EAAE+jB,IAAI3O,UAAU4O,OAAO,WAEzB,EACD,GAAC,CAAAlhB,IAAA,WAAA8D,MAED,SAASkE,EAAS6K,EAAWjK,GAAoE,IAAzDwY,EAAoBvgB,UAAAC,OAAA,QAAAhE,IAAA+D,UAAA,IAAAA,UAAA,GAAUwgB,EAAiBxgB,UAAAC,OAAA,QAAAhE,IAAA+D,UAAA,IAAAA,UAAA,GACtF,GAAKmH,EAAL,CAGA,GAAItE,KAAK4d,cAAgBF,EAAa,CACrC,IAAMG,EAAU7d,KAAK8d,WAAW3O,EAAGjK,GACnCiK,EAAI0O,EAAQ1O,EACZjK,EAAI2Y,EAAQ3Y,CACb,CAEIZ,EAAE6K,GAAKA,GAAK7K,EAAEY,GAAKA,IAElByY,GACJ3d,KAAKmc,MAAM4B,eAEZzZ,EAAE6K,EAAIA,EACN7K,EAAEY,EAAIA,EACNiL,EAAY7L,EAAEiZ,IAAKpO,EAAGjK,GACtBlF,KAAKge,YAAY1Z,GACjBtE,KAAKie,aAAa3Z,GACbqZ,GACJ3d,KAAKmc,MAAMxB,SApBE,CAsBf,GAAC,CAAAre,IAAA,iBAAA8D,MAED,SAAegF,EAAe+J,EAAWjK,GAAoE,IAAzDwY,EAAoBvgB,UAAAC,OAAA,QAAAhE,IAAA+D,UAAA,IAAAA,UAAA,GAAUwgB,EAAiBxgB,UAAAC,OAAA,QAAAhE,IAAA+D,UAAA,IAAAA,UAAA,GAElG,GAAI6C,KAAK4d,cAAgBF,EAAa,CACrC,IAAMG,EAAU7d,KAAK8d,WAAW3O,EAAGjK,GACnCiK,EAAI0O,EAAQ1O,EACZjK,EAAI2Y,EAAQ3Y,CACb,CAGIE,EAAE+J,GAAKA,GAAK/J,EAAEF,GAAKA,IAClByY,GACJ3d,KAAKmc,MAAM4B,eAEZ3Y,EAAE+J,EAAIA,EACN/J,EAAEF,EAAIA,EACNlF,KAAKke,WAAW9Y,EAAEsS,MACbiG,GACJ3d,KAAKmc,MAAMxB,SAEb,GAAC,CAAAre,IAAA,eAAA8D,MAED,SAAa6S,EAAYxD,GAA0C,IAAA0O,EAAA,KAA9BT,EAAoBvgB,UAAAC,OAAA,QAAAhE,IAAA+D,UAAA,IAAAA,UAAA,GACxD6C,KAAKkW,QAAQrP,QAAQ,SAAAvC,GAAC,OAAIA,EAAEgZ,UAAYa,EAAKC,SAAS9Z,EAAGA,EAAE6K,EAAI8D,EAAI3O,EAAEY,EAAIuK,EAAIiO,GAAa,EAAM,GAChG1d,KAAKkc,aAAarV,QAAQ,SAAAzB,GAAC,OAAIA,EAAEkY,UAAYa,EAAKE,eAAejZ,EAAGA,EAAE+J,EAAI8D,EAAI7N,EAAEF,EAAIuK,EAAIiO,GAAa,EAAM,EAC5G,GAAC,CAAAphB,IAAA,mBAAA8D,MAED,SAAiBsX,EAAYzS,EAAU2M,EAAa0M,GACnDte,KAAKmc,MAAM4B,eACX,IAAM3Y,EAAIsS,EAAKuF,WAAWhY,GAC1BG,EAAEkY,UAAW,EACTgB,IACH5G,EAAKU,SAASvR,QAAQ,SAAAzB,GAAC,OAAIA,EAAE0T,OAAQ,CAAK,GAC1C1T,EAAE0T,OAAQ,GAEXpB,EAAKU,SAASX,OAAO7F,EAAM,EAAG,EAAGxM,GACjCpF,KAAKke,WAAWxG,GAChB1X,KAAKmc,MAAMxB,QACZ,GAAC,CAAAre,IAAA,mBAAA8D,MAED,SAAiBgF,GAChBpF,KAAKmc,MAAM4B,eACP3Y,EAAEmZ,KACLnZ,EAAEmZ,MAAO,GAETnZ,EAAEsS,KAAKU,SAASX,OAAOrS,EAAEsS,KAAKU,SAASoG,QAAQpZ,GAAI,GACnDpF,KAAKkc,aAAY,OAAQ9W,EAAExM,KAE5BoH,KAAKke,WAAW9Y,EAAEsS,MAClB1X,KAAKmc,MAAMxB,QACZ,GAAC,CAAAre,IAAA,UAAA8D,MAED,WACC,OAAOJ,KAAKmc,MAAMsC,SACnB,GAAC,CAAAniB,IAAA,OAAA8D,MAED,WACCJ,KAAKmc,MAAMuC,MACZ,GAAC,CAAApiB,IAAA,OAAA8D,MAED,WACCJ,KAAKmc,MAAMwC,MACZ,GAGA,CAAAriB,IAAA,eAAA8D,MACA,WAAe,IAAAwe,EAAA,KACRC,EAAgB7e,KAAK8e,yBAGrBtI,EAFU,IAECqI,EAAc1P,EACzBsH,EAHU,IAGCoI,EAAc3Z,EAG/BlF,KAAK+e,cAAe,EAEpB/e,KAAKmc,MAAM4B,eAEX/d,KAAK8W,SAASjQ,QAAQ,SAAAiG,GACrB8R,EAAKR,SAAStR,EAAMA,EAAKqC,EAAIqH,EAAS1J,EAAK5H,EAAIuR,GAAS,GAAM,EAC/D,GAEAzW,KAAKkc,aAAarV,QAAQ,SAAAoT,GACzB2E,EAAKP,eAAepE,EAAQA,EAAO9K,EAAIqH,EAASyD,EAAO/U,EAAIuR,GAAS,GAAM,EAC3E,GAEAzW,KAAKmc,MAAMxB,QAGZ,GAEA,CAAAre,IAAA,oBAAA8D,MACA,WACC,IAmjDK4e,EACAC,EACA/Y,EACAuK,EAtjDCyO,EAAcC,KACdC,EAAY3S,GAAI6F,cAAc,UAChC8M,IACHA,EAAUpS,aAAa,YAAa,SAAFhQ,OAAWkiB,EAAW,sBAgjDpDF,EA/iDmBhf,KA+iDJ8e,yBACfG,EAAOE,KACPjZ,EAAIpC,KAAKuK,IAAI5B,GAAI4S,cAAcC,YAAcL,EAAMD,EAAG7P,EAAI6P,EAAG1S,MAAQ8O,GACrE3K,EAAI3M,KAAKuK,IAAI5B,GAAI4S,cAAcE,aAAeN,EAAMD,EAAG9Z,EAAI8Z,EAAG9T,OAASkQ,GAC7E3O,GAAIO,aAAa,QAAS9F,OAAOhB,EAAI+Y,IACrCxS,GAAIO,aAAa,SAAU9F,OAAOuJ,EAAIwO,KAhjDrCO,GAAexf,KAAKpH,IAGpBoH,KAAK+e,cAAe,CACrB,GAEA,CAAAziB,IAAA,oBAAA8D,MACA,WACC,OAAOJ,KAAK+e,YACb,GAEA,CAAAziB,IAAA,YAAA8D,MACA,WACC,IAAMgf,EAAY3S,GAAI6F,cAAc,UAChC8M,IAEHA,EAAUpS,aAAa,YAAa,4BACpCyS,MAIDD,GAAexf,KAAKpH,GACrB,GAEA,CAAA0D,IAAA,cAAA8D,MACA,SAAoBkE,GAAS,IAAAob,EAAA,KAC5B1f,KAAKmW,MAAMtP,QAAQ,SAAArN,GAAC,OAAK8K,GAAK9K,EAAE2O,MAAQ7D,GAAK9K,EAAEue,KAAO2H,EAAKxB,WAAW1kB,EAAE,GACxEwG,KAAKyd,gBACN,GAAC,CAAAnhB,IAAA,aAAA8D,MAED,SAAW5G,GACV,IAAMyL,EAAIzL,EAAE+jB,IAAI8B,cAChBpa,EAAEmI,YAAY5T,EAAE+jB,KAChB/jB,EAAE+jB,IAAMoC,GAAU3f,KAAMxG,GACxByL,EAAEyK,OAAOlW,EAAE+jB,IACZ,GAAC,CAAAjhB,IAAA,eAAA8D,MAED,SAAqB0M,GACpB9M,KAAKiX,UAAUpQ,QAAQ,SAAAqQ,GAEtB,IAAMjS,EAAIiS,EAAMqG,IAAI8B,cACpBpa,EAAEmI,YAAY8J,EAAMqG,KACpBqC,GAAW1I,GACXjS,EAAEyK,OAAOwH,EAAMqG,IAChB,EACD,GAAC,CAAAjhB,IAAA,YAAA8D,MAED,WAEC,IAAMyf,EAA6B7T,SAASsG,cAAc,aAIpDwN,GAHUD,EAAYvN,cAAc,gBAGxBuN,EAAYE,WAAU,IAGlCC,EAAgBF,EAAUxN,cAAc,gBAC1C0N,GACHA,EAAcxC,SAIf,IAAMqB,EAAgB7e,KAAK8e,yBAMrBmB,EAAcpB,EAAcvS,MAASjB,IACrC6U,EAAerB,EAAc3T,OAAUG,IAGvCmL,EAPU,GAOCqI,EAAc1P,EACzBsH,EARU,GAQCoI,EAAc3Z,EAGzBib,EAAkBL,EAAUxN,cAAc,UAC5C6N,GAEHA,EAAgBnT,aAAa,YAAa,sBAAFhQ,OAAwBwZ,EAAO,MAAAxZ,OAAKyZ,EAAO,MAIpFqJ,EAAU9S,aAAa,UAAW,OAAFhQ,OAASijB,EAAW,KAAAjjB,OAAIkjB,IACxDJ,EAAU9S,aAAa,QAAS9F,OAAO+Y,IACvCH,EAAU9S,aAAa,SAAU9F,OAAOgZ,IAGxCJ,EAAU9S,aAAa,QAAS,8BAGhC,IAAMoT,EAASpU,SAASqU,cAAc,UAUtC,OATAD,EAAOpT,aAAa,OAAQ,oBAC5BhN,KAAKsgB,SAAS7W,OAASzJ,KAAKoc,eAC5BgE,EAAO1Q,OAAO,YAA0B7M,KAAKqB,UAAUlE,KAAKsgB,SAAU,KAAM,GA2ejEhH,QAAQ,OAAQ,mBA3euD,OAClFwG,EAAUzN,aAAa+N,EAAQN,EAAUS,YAG7BT,EAAUU,SAIvB,GAEA,CAAAlkB,IAAA,yBAAA8D,MACA,WACC,IAAIkW,EAAOmK,IAAUlK,EAAOkK,IAAUC,GAAO,IAAWC,GAAO,IAqE/D,OAlEA3gB,KAAKkW,QAAQrP,QAAQ,SAAAiG,GACpB,IAAM8T,EAAO9T,EAAKqC,EAAIrC,EAAKR,MAAQ,EAC7BuU,EAAQ/T,EAAKqC,EAAIrC,EAAKR,MAAQ,EAC9BwU,EAAMhU,EAAK5H,EAAI4H,EAAK5B,OAAS,EAC7B6V,EAASjU,EAAK5H,EAAI4H,EAAK5B,OAAS,EAEtCoL,EAAOxS,KAAKC,IAAIuS,EAAMsK,GACtBF,EAAO5c,KAAKuK,IAAIqS,EAAMG,GACtBtK,EAAOzS,KAAKC,IAAIwS,EAAMuK,GACtBH,EAAO7c,KAAKuK,IAAIsS,EAAMI,EACvB,GAGA/gB,KAAKkc,aAAarV,QAAQ,SAAAoT,GACzB3D,EAAOxS,KAAKC,IAAIuS,EAAM2D,EAAO9K,EAAI,GACjCuR,EAAO5c,KAAKuK,IAAIqS,EAAMzG,EAAO9K,EAAI,GACjCoH,EAAOzS,KAAKC,IAAIwS,EAAM0D,EAAO/U,EAAI,GACjCyb,EAAO7c,KAAKuK,IAAIsS,EAAM1G,EAAO/U,EAAI,EAClC,GAGAlF,KAAKiX,UAAUpQ,QAAQ,SAAAqQ,GACtB,IAAM0J,EAAO1J,EAAM/H,EAAI+H,EAAM5K,MAAQ,EAC/BuU,EAAQ3J,EAAM/H,EAAI+H,EAAM5K,MAAQ,EAChCwU,EAAM5J,EAAMhS,EAAIgS,EAAMhM,OAAS,EAC/B6V,EAAS7J,EAAMhS,EAAIgS,EAAMhM,OAAS,EAExCoL,EAAOxS,KAAKC,IAAIuS,EAAMsK,GACtBF,EAAO5c,KAAKuK,IAAIqS,EAAMG,GACtBtK,EAAOzS,KAAKC,IAAIwS,EAAMuK,GACtBH,EAAO7c,KAAKuK,IAAIsS,EAAMI,EACvB,GAGA/gB,KAAKmW,MAAMtP,QAAQ,SAAA6Q,GAkBlB,GAhBApB,EAAOxS,KAAKC,IAAIuS,EAAMoB,EAAKvP,KAAKgH,EAAI,GAAIuI,EAAKK,GAAG5I,EAAI,IACpDuR,EAAO5c,KAAKuK,IAAIqS,EAAMhJ,EAAKvP,KAAKgH,EAAI,GAAIuI,EAAKK,GAAG5I,EAAI,IACpDoH,EAAOzS,KAAKC,IAAIwS,EAAMmB,EAAKvP,KAAKjD,EAAI,GAAIwS,EAAKK,GAAG7S,EAAI,IACpDyb,EAAO7c,KAAKuK,IAAIsS,EAAMjJ,EAAKvP,KAAKjD,EAAI,GAAIwS,EAAKK,GAAG7S,EAAI,IAGhDwS,EAAKU,UACRV,EAAKU,SAASvR,QAAQ,SAAAoT,GACrB3D,EAAOxS,KAAKC,IAAIuS,EAAM2D,EAAO9K,EAAI,IACjCuR,EAAO5c,KAAKuK,IAAIqS,EAAMzG,EAAO9K,EAAI,IACjCoH,EAAOzS,KAAKC,IAAIwS,EAAM0D,EAAO/U,EAAI,IACjCyb,EAAO7c,KAAKuK,IAAIsS,EAAM1G,EAAO/U,EAAI,GAClC,GAIGwS,EAAKoB,OAASpB,EAAKoB,MAAMrL,OAAQ,CAEpC,IAAMuT,GAAWtJ,EAAKvP,KAAKgH,EAAIuI,EAAKK,GAAG5I,GAAK,EACtC8R,GAAWvJ,EAAKvP,KAAKjD,EAAIwS,EAAKK,GAAG7S,GAAK,EACtCgc,EAAsC,GAApBxJ,EAAKoB,MAAM1b,OAAc,GAEjDkZ,EAAOxS,KAAKC,IAAIuS,EAAM0K,EAAUE,GAChCR,EAAO5c,KAAKuK,IAAIqS,EAAMM,EAAUE,GAChC3K,EAAOzS,KAAKC,IAAIwS,EAAM0K,EAAU,IAChCN,EAAO7c,KAAKuK,IAAIsS,EAAMM,EAAU,GACjC,CACD,GAGI3K,IAASmK,IACL,CAAEtR,EAAG,EAAGjK,EAAG,EAAGoH,MAAO,IAAKpB,OAAQ,KAGnC,CACNiE,EAAGmH,EACHpR,EAAGqR,EACHjK,MAAOoU,EAAOpK,EACdpL,OAAQyV,EAAOpK,EAEjB,GAIA,CAAAja,IAAA,eAAA8D,MAIA,WAA2B,IAAd+gB,EAAIhkB,UAAAC,OAAA,QAAAhE,IAAA+D,UAAA,IAAAA,UAAA,GACVqQ,EAAc,CAAC,EAOrB,OANAxN,KAAKkW,QAAQrP,QAAQ,SAAAvC,GAAC,OAAIkJ,EAAIlJ,EAAE1L,IAAM,CAACuW,EAAG7K,EAAE6K,EAAGjK,EAAGZ,EAAEY,EAAE,GACtDlF,KAAKmW,MAAMtP,QAAQ,SAAArN,GAClB,GAAKA,EAAE4e,SAAP,CACA,IAAMtb,EAAMtD,EAAE4e,SAAS5a,OAAO,SAAA4H,GAAC,OAAKA,EAAEmZ,IAAI,GAAEthB,IAAI,SAAAmI,GAAC,MAAK,CAAC+J,EAAG/J,EAAE+J,EAAGjK,EAAGE,EAAEF,EAAG4T,MAAO1T,EAAE0T,MAAM,IACrFhc,EAAIM,QAAU+jB,KAAU3T,EAAI,KAADxQ,OAAMxD,EAAEZ,KAAQkE,EAFrB,CAGxB,GACO0Q,CACR,GAAC,CAAAlR,IAAA,WAAA8D,MAED,WACCJ,KAAKmc,MAAMiF,UACZ,GAAC,CAAA9kB,IAAA,eAAA8D,MAED,SAAaqJ,GAAkD,IAAA4X,EAAA,KAAlBC,EAAQnkB,UAAAC,OAAA,QAAAhE,IAAA+D,UAAA,IAAAA,UAAA,GAE9CokB,EAA6C,GAEnDjkB,OAAOqR,QAAQlF,GAAQ5C,QAAQ,SAAAmC,GAAY,IAAAoC,EAAA3D,EAAAuB,EAAA,GAAVvL,EAAC2N,EAAA,GAAEhG,EAACgG,EAAA,GAC/B3N,EAAE+jB,WAAW,YAAiBpoB,IAARgM,EAAE+J,QAA2B/V,IAARgM,EAAEF,EAGvCzH,EAAE+jB,WAAW,OAAS9Z,MAAMC,QAAQvC,IAE9CA,EAAEyB,QAAQ,SAACoT,QACO7gB,IAAb6gB,EAAO9K,QAAgC/V,IAAb6gB,EAAO/U,GACpCqc,EAAY7oB,KAAK,CAACyW,EAAG8K,EAAO9K,EAAGjK,EAAG+U,EAAO/U,GAE3C,GAPAqc,EAAY7oB,KAAK,CAACyW,EAAG/J,EAAE+J,EAAGjK,EAAGE,EAAEF,GASjC,GAGA,IAAIsR,EAAU,EACVC,EAAU,EAEd,GAAI8K,EAAYnkB,OAAS,EAAG,CAC3B,IAAMkZ,EAAOxS,KAAKC,IAAG6C,MAAR9C,KAAImQ,EAAQsN,EAAYtkB,IAAI,SAAAW,GAAC,OAAIA,EAAEuR,CAAC,KAC3CoH,EAAOzS,KAAKC,IAAG6C,MAAR9C,KAAImQ,EAAQsN,EAAYtkB,IAAI,SAAAW,GAAC,OAAIA,EAAEsH,CAAC,MAG7CoR,GAAQ,KAAOC,GAAQ,KAAOzS,KAAKuK,IAAGzH,MAAR9C,KAAImQ,EAAQsN,EAAYtkB,IAAI,SAAAW,GAAC,OAAIA,EAAEuR,CAAC,KAAK,KAAQrL,KAAKuK,IAAGzH,MAAR9C,KAAImQ,EAAQsN,EAAYtkB,IAAI,SAAAW,GAAC,OAAIA,EAAEsH,CAAC,KAAK,OAE3HsR,EADgB,GACLF,EACXG,EAFgB,GAELF,EAEb,CAGAjZ,OAAOqR,QAAQlF,GAAQ5C,QAAQ,SAAA4a,GAAY,IAAAC,EAAAja,EAAAga,EAAA,GAAVhkB,EAACikB,EAAA,GAAEtc,EAACsc,EAAA,GAE9Bpd,EAAI+c,EAAKvK,SAASe,IAAIpa,GAC5B,GAAI6G,EACHA,EAAE6K,EAAI/J,EAAE+J,EAAIqH,EACZlS,EAAEY,EAAIE,EAAEF,EAAIuR,OAGb,GAAIhZ,EAAE+jB,WAAW,MAAO,CACvB,IAAM9J,EAAO2J,EAAKlL,MAAMsC,KAAK,SAAAjf,GAAC,OAAIA,EAAEZ,IAAM6E,EAAEwK,MAAM,EAAE,GACpD,IAAKyP,EAAM,OAWX,OAVAA,EAAKU,UAAYV,EAAKU,SAASvR,QAAQ,SAAAzB,GAAC,OAAIic,EAAKnF,aAAY,OAAQ9W,EAAExM,GAAG,QAC1E8e,EAAKU,SAAWhT,EAAEnI,IAAI,SAACgI,GACtB,IAAM0c,EAAkB,CACvBxS,EAAGlK,EAAEkK,EAAIqH,EACTtR,EAAGD,EAAEC,EAAIuR,GAIV,OADAnZ,OAAOskB,OAAOD,EAAiB1c,EAAG,CAAEkK,EAAGlK,EAAEkK,EAAIqH,EAAStR,EAAGD,EAAEC,EAAIuR,IACxDiB,EAAKuF,WAAW0E,EACxB,GAED,CACD,GACIL,IACHthB,KAAKkW,QAAQrP,QAAQ,SAAAvC,GAAC,OAAI6L,EAAY7L,EAAEiZ,IAAKjZ,EAAE6K,EAAG7K,EAAEY,EAAE,GACtDlF,KAAKmW,MAAMtP,QAAQ,SAAArN,GAAC,OAAI6nB,EAAKnD,WAAW1kB,EAAE,GAC1CwG,KAAKyd,iBACLzd,KAAKie,aAAa,MAEpB,GAAC,CAAA3hB,IAAA,aAAA8D,OA7pBFkE,EA6pBE2B,IAAAE,EAED,SAAA8C,EAAiB9J,GAA0C,IAAAof,EAAA7U,EAAAmY,EAAA,YAAA5b,IAAAC,EAAA,SAAAyD,GAAA,cAAAA,EAAA1E,EAAA0E,EAAArF,GAAA,cAAAqF,EAAA1E,EAAA,EAAA0E,EAAArF,EAAA,EAEtCgR,EAAWtV,KAAMb,GAAQ,OAAtCof,EAAI5U,EAAAvE,EAEVpF,KAAKmc,MAAM4B,eAGXQ,EAAKrI,MAAMrP,QAAQ,SAAAib,GAClB,IAAMxd,EAAIud,EAAK/K,SAASe,IAAIiK,EAAGlpB,IAC3B0L,GACHud,EAAKzD,SAAS9Z,EAAGwd,EAAG3S,EAAG2S,EAAG5c,GAAG,GAAO,EAEtC,GAGAlF,KAAKkc,aAAa6F,QAGlBxD,EAAKpI,MAAMtP,QAAQ,SAAAmb,GAClB,IAAMtK,EAAOmK,EAAK1L,MAAMsC,KAAK,SAAAjf,GAAC,OAAIA,EAAEZ,IAAMopB,EAAGppB,EAAE,GAC/C,GAAI8e,EAAM,CAcT,GAZAA,EAAKU,SAAW,GAGZ4J,EAAG5J,UAAY4J,EAAG5J,SAAShb,OAAS,IACvCsa,EAAKU,SAAW4J,EAAG5J,SAASnb,IAAI,SAAAgI,GAC/B,IAAMgV,EAASvC,EAAKuF,WAAWhY,GAE/B,OADAgV,EAAOsE,MAAO,EACPtE,CACR,IAIG+H,EAAGlJ,MAAO,CACb,IAAMmJ,EAAcvK,EAAKuF,WAAW+E,EAAGlJ,OACvCmJ,EAAYnJ,OAAQ,EACpBmJ,EAAY1D,MAAO,EACnB7G,EAAKU,SAAS1f,KAAKupB,EACpB,CAGAJ,EAAK3D,WAAWxG,EACjB,CACD,GAGA1X,KAAKkiB,YAELliB,KAAKmc,MAAMxB,SAAQhR,EAAArF,EAAA,eAAAqF,EAAA1E,EAAA,EAAAyE,EAAAC,EAAAvE,EAGnB3C,QAAQQ,MAAM,sBAAqByG,GACnC,cAAAC,EAAAxL,EAAA,KAAA8K,EAAA,gBAvDDkZ,EA7pBF,eAAAhe,EAAA,KAAA3K,EAAA2D,UAAA,WAAAmK,QAAA,SAAAlD,EAAAI,GAAA,IAAArG,EAAAmG,EAAAsC,MAAAzC,EAAA3K,GAAA,SAAA2Q,EAAA7F,GAAA+C,EAAAlJ,EAAAiG,EAAAI,EAAA2F,EAAAC,EAAA,OAAA9F,EAAA,UAAA8F,EAAA9F,GAAA+C,EAAAlJ,EAAAiG,EAAAI,EAAA2F,EAAAC,EAAA,QAAA9F,EAAA,CAAA6F,OAAA,MAstBE,SAvDeoL,GAAA,OAAA4M,EAAAvb,MAAC,KAADzJ,UAAA,KAAAb,IAAA,kBAAA8D,MAyDhB,WAAkB,IAAAgiB,EAAA,KACXtlB,EAAekD,KAAKkW,QAAQ1Y,OAAO,SAAA8G,GAAC,OAAIA,EAAEgZ,QAAQ,GACxDxgB,EAAIpE,KAAIkO,MAAR9J,EAAGmX,EAASvM,MAAMS,KAAKnI,KAAKkc,aAAaY,UAAUtf,OAAO,SAAA4H,GAAC,OAAIA,EAAEkY,QAAQ,KACzE,IAAI/G,EAAOzS,KAAKC,IAAG6C,MAAR9C,KAAImQ,EAAQnX,EAAIG,IAAI,SAAAgI,GAAC,OAAIA,EAAEC,CAAC,KACvClF,KAAK8W,SAASjQ,QAAQ,SAAAvC,GAAC,OAAIA,EAAEgZ,UAAY8E,EAAKhE,SAAS9Z,EAAGA,EAAE6K,EAAGoH,GAAM,GAAO,EAAM,GAClFvW,KAAKkc,aAAarV,QAAQ,SAAAzB,GAAC,OAAIA,EAAEkY,UAAY8E,EAAK/D,eAAejZ,EAAGA,EAAE+J,EAAGoH,GAAM,GAAO,EAAM,EAC7F,GAAC,CAAAja,IAAA,kBAAA8D,MAED,WAAkB,IAAAiiB,EAAA,KACXvlB,EAAekD,KAAKkW,QAAQ1Y,OAAO,SAAA8G,GAAC,OAAIA,EAAEgZ,QAAQ,GACxDxgB,EAAIpE,KAAIkO,MAAR9J,EAAGmX,EAASvM,MAAMS,KAAKnI,KAAKkc,aAAaY,UAAUtf,OAAO,SAAA4H,GAAC,OAAIA,EAAEkY,QAAQ,KACzE,IAAIhH,EAAOxS,KAAKC,IAAG6C,MAAR9C,KAAImQ,EAAQnX,EAAIG,IAAI,SAAAgI,GAAC,OAAIA,EAAEkK,CAAC,KACvCnP,KAAK8W,SAASjQ,QAAQ,SAAAvC,GAAC,OAAIA,EAAEgZ,UAAY+E,EAAKjE,SAAS9Z,EAAGgS,EAAMhS,EAAEY,GAAG,GAAO,EAAM,GAClFlF,KAAKkc,aAAarV,QAAQ,SAAAzB,GAAC,OAAIA,EAAEkY,UAAY+E,EAAKhE,eAAejZ,EAAGkR,EAAMlR,EAAEF,GAAG,GAAO,EAAM,EAC7F,GAAC,CAAA5I,IAAA,uBAAA8D,MAED,WAAuB,IAAAkiB,EAAA,KAChBC,EAAgBviB,KAAKkW,QAAQ1Y,OAAO,SAAA8G,GAAC,OAAIA,EAAEgZ,QAAQ,GACnDkF,EAAmB9a,MAAMS,KAAKnI,KAAKkc,aAAaY,UAAUtf,OAAO,SAAA4H,GAAC,OAAIA,EAAEkY,QAAQ,GAEtF,KAAIiF,EAAcnlB,OAASolB,EAAiBplB,OAAS,GAArD,CAEA4C,KAAKmc,MAAM4B,eAGX,IAAM0E,EAAc,GAAHzlB,OAAAiX,EAAOsO,GAAatO,EAAKuO,IAC1CC,EAAYvkB,KAAK,SAACC,EAAGC,GAAC,OAAKD,EAAEgR,EAAI/Q,EAAE+Q,CAAC,GAEpC,IAAMmH,EAAOmM,EAAY,GAAGtT,EAEtB6F,GADOyN,EAAYA,EAAYrlB,OAAS,GAAG+R,EACzBmH,IAASmM,EAAYrlB,OAAS,GAGtDqlB,EAAY5b,QAAQ,SAAC2H,EAAS+K,GAC7B,IAAMmJ,EAAOpM,EAAQiD,EAAQvE,EACzB,UAAWxG,EAEd8T,EAAKlE,SAAS5P,EAAiBkU,EAAMlU,EAAQtJ,GAAG,GAAO,GAGvDod,EAAKjE,eAAe7P,EAAuBkU,EAAMlU,EAAQtJ,GAAG,GAAO,EAErE,GAEAlF,KAAKmc,MAAMxB,QAxBmD,CAyB/D,GAAC,CAAAre,IAAA,uBAAA8D,MAED,WAAuB,IAAAuiB,EAAA,KAChBJ,EAAgBviB,KAAKkW,QAAQ1Y,OAAO,SAAA8G,GAAC,OAAIA,EAAEgZ,QAAQ,GACnDkF,EAAmB9a,MAAMS,KAAKnI,KAAKkc,aAAaY,UAAUtf,OAAO,SAAA4H,GAAC,OAAIA,EAAEkY,QAAQ,GAEtF,KAAIiF,EAAcnlB,OAASolB,EAAiBplB,OAAS,GAArD,CAEA4C,KAAKmc,MAAM4B,eAGX,IAAM0E,EAAc,GAAHzlB,OAAAiX,EAAOsO,GAAatO,EAAKuO,IAC1CC,EAAYvkB,KAAK,SAACC,EAAGC,GAAC,OAAKD,EAAE+G,EAAI9G,EAAE8G,CAAC,GAEpC,IAAMqR,EAAOkM,EAAY,GAAGvd,EAEtB8P,GADOyN,EAAYA,EAAYrlB,OAAS,GAAG8H,EACzBqR,IAASkM,EAAYrlB,OAAS,GAGtDqlB,EAAY5b,QAAQ,SAAC2H,EAAS+K,GAC7B,IAAMqJ,EAAOrM,EAAQgD,EAAQvE,EACzB,UAAWxG,EAEdmU,EAAKvE,SAAS5P,EAAiBA,EAAQW,EAAGyT,GAAM,GAAO,GAGvDD,EAAKtE,eAAe7P,EAAuBA,EAAQW,EAAGyT,GAAM,GAAO,EAErE,GAEA5iB,KAAKmc,MAAMxB,QAxBmD,CAyB/D,GAEA,CAAAre,IAAA,kBAAA8D,MACA,SAAgBsX,EAAY4F,GAEvBA,IACHtd,KAAK6iB,gBAAgBnL,EAAKvP,MAAM,GAChCnI,KAAK6iB,gBAAgBnL,EAAKK,IAAI,IAG/B/X,KAAKyd,gBACN,GAEA,CAAAnhB,IAAA,YAAA8D,MACA,WAAY,IAAA0iB,EAAAC,EACLlE,EAAgB7e,KAAK8e,yBAG3B,GAA4B,IAAxBD,EAAcvS,OAAwC,IAAzBuS,EAAc3T,OAA/C,CAKA,IAAM8X,GAAiC,QAAjBF,EAAArW,GAAI4S,qBAAa,IAAAyD,OAAA,EAAjBA,EAAmBxD,cAAe,IAClD2D,GAAkC,QAAjBF,EAAAtW,GAAI4S,qBAAa,IAAA0D,OAAA,EAAjBA,EAAmBxD,eAAgB,IAMpD2D,GAASF,EAAgB3X,IAAewT,EAAcvS,MACtD6W,GAASF,EAAiB5X,IAAewT,EAAc3T,OACvDkY,EAActf,KAAKC,IAAImf,EAAOC,GAG9BE,EAAYvf,KAAKuK,IAAIvK,KAAKC,IAAIqf,EAAa,GAAI,IAY/CE,EALkBN,EAAgB,GAJjBnE,EAAc1P,EAAI0P,EAAcvS,MAAQ,GASR+W,EACjDE,EALkBN,EAAiB,GAJlBpE,EAAc3Z,EAAI2Z,EAAc3T,OAAS,GASTmY,EAGjDjE,EAAY3S,GAAI6F,cAAc,UAChC8M,GACHA,EAAUpS,aAAa,YAAa,aAAFhQ,OAAesmB,EAAU,MAAAtmB,OAAKumB,EAAU,YAAAvmB,OAAWqmB,EAAS,MAI/F5D,KAGA+D,GAAcxjB,KAAKpH,GAxCnB,CAyCD,GAEA,CAAA0D,IAAA,kBAAA8D,MACA,WACC,OAAOJ,KAAKoc,cAAa,EAC1B,GAEA,CAAA9f,IAAA,qBAAA8D,MACA,SAA2ByI,GAC1B7I,KAAKsc,aAAazT,GAAO,EAC1B,GAEA,CAAAvM,IAAA,gBAAA8D,MACA,WACC,OAAOJ,KAAKyjB,YACb,GAAC,CAAAnnB,IAAA,eAAA8D,MAED,WACC,OAAOJ,KAAK4d,WACb,GAAC,CAAAthB,IAAA,cAAA8D,MAED,WACC,OAAOJ,KAAK0jB,SACb,GAAC,CAAApnB,IAAA,aAAA8D,MAED,WACCJ,KAAKyjB,cAAgBzjB,KAAKyjB,aAC1BzjB,KAAK2jB,oBAELpH,OAAOqH,cAAc,IAAIC,YAAY,oBACtC,GAAC,CAAAvnB,IAAA,mBAAA8D,MAED,WACCJ,KAAK4d,aAAe5d,KAAK4d,YAEzBrB,OAAOqH,cAAc,IAAIC,YAAY,oBACtC,GAAC,CAAAvnB,IAAA,gBAAA8D,MAED,WAAgB,IAAA0jB,EAAA,KACV9jB,KAAK4d,cAEV5d,KAAKmc,MAAM4B,eACX/d,KAAKkW,QAAQrP,QAAQ,SAAAiG,GACpB,IAAMiX,EAAWjgB,KAAKoZ,MAAMpQ,EAAKqC,EAAI2U,EAAKJ,WAAaI,EAAKJ,UACtDM,EAAWlgB,KAAKoZ,MAAMpQ,EAAK5H,EAAI4e,EAAKJ,WAAaI,EAAKJ,UAC5DI,EAAK1F,SAAStR,EAAMiX,EAAUC,GAAU,GAAO,EAChD,GACAhkB,KAAKmc,MAAMxB,SACZ,GAEA,CAAAre,IAAA,aAAA8D,MACA,SAAmB+O,EAAWjK,GAC7B,MAAO,CACNiK,EAAGrL,KAAKoZ,MAAM/N,EAAInP,KAAK0jB,WAAa1jB,KAAK0jB,UACzCxe,EAAGpB,KAAKoZ,MAAMhY,EAAIlF,KAAK0jB,WAAa1jB,KAAK0jB,UAE3C,GAAC,CAAApnB,IAAA,oBAAA8D,MAED,WACC,GAAKqM,GAAL,CAGA,IAAMwX,EAAexX,GAAI6F,cAAc,iBACnC2R,GACHA,EAAazG,SAGd,IAAM0G,EAAmBzX,GAAI6F,cAAc,oBAK3C,GAJI4R,GACHA,EAAiB1G,SAGbxd,KAAKyjB,aAAV,CAGA,IAAIU,EAAO1X,GAAI6F,cAAc,QACxB6R,IACJA,EAAOnY,SAASU,gBAAgB,6BAA8B,QAC9DD,GAAI4F,aAAa8R,EAAM1X,GAAI8T,aAG5B,IAAM6D,EAAUpY,SAASU,gBAAgB,6BAA8B,WACvE0X,EAAQxrB,GAAK,eACbwrB,EAAQpX,aAAa,QAAShN,KAAK0jB,UAAU1b,YAC7Coc,EAAQpX,aAAa,SAAUhN,KAAK0jB,UAAU1b,YAC9Coc,EAAQpX,aAAa,eAAgB,kBAErC,IAAM1J,EAAO0I,SAASU,gBAAgB,6BAA8B,QACpEpJ,EAAK0J,aAAa,IAAK,KAAFhQ,OAAOgD,KAAK0jB,UAAS,eAAA1mB,OAAcgD,KAAK0jB,YAC7DpgB,EAAK0J,aAAa,OAAQ,QAC1B1J,EAAK0J,aAAa,SAAU,WAC5B1J,EAAK0J,aAAa,eAAgB,KAClC1J,EAAK0J,aAAa,UAAW,OAE7BoX,EAAQxX,YAAYtJ,GACpB6gB,EAAKvX,YAAYwX,GAGjB,IAAMzU,EAAO3D,SAASU,gBAAgB,6BAA8B,QACpEiD,EAAK/W,GAAK,kBACV+W,EAAK3C,aAAa,IAAK,UACvB2C,EAAK3C,aAAa,IAAK,UACvB2C,EAAK3C,aAAa,QAAS,SAC3B2C,EAAK3C,aAAa,SAAU,SAC5B2C,EAAK3C,aAAa,OAAQ,sBAC1B2C,EAAK3C,aAAa,iBAAkB,QAGpC,IAAMoS,EAAY3S,GAAI6F,cAAc,UAChC8M,GACHA,EAAU/M,aAAa1C,EAAMyP,EAAUmB,WAtCV,CAbd,CAqDjB,IAj9BDnc,GAAAoX,GAAAhiB,EAAAmL,UAAAP,GAAA9G,OAAA8I,eAAA5M,EAAA,aAAA+M,UAAA,IAAA/M,EAAA,IAAAA,EAAA4K,EAAAE,EA6pBE6d,CAoTA,CAt2BoB,GA+2BlB1V,GAAqBT,SAASsG,cAAc,aAC3C7F,MACJA,GAAMT,SAASU,gBAAgB,6BAA8B,QACzDM,aAAa,KAAM,SACvBP,GAAI4X,iBAAiB,QAAS,SAAA7qB,GAAC,OAAIiiB,GAAcjiB,EAAE,IAGpDiT,GAAIO,aAAa,QAAS,QAC1BP,GAAIO,aAAa,SAAU,QAG3B,IACIsX,GAGSC,GAAa,SAACxhB,EAAiByhB,EAAiCC,GAE5EhY,GAAIiY,UC5+Be,8qBD6+BnB1Y,SAASW,KAAK+C,OAAOjD,IAErBA,GAAIkY,OAAS5hB,EAEbuhB,GAAiBE,EAGjB/I,GAAgB,SAAAjiB,GAKhB,EAEAorB,GAAY7hB,GACZ,IAAM8hB,EAAY/f,EAAO6K,KAAK,IAAK,IAAK,GAAI,GAAI,EAAG,WASnD,OARAlD,GAAIiD,OAAOmV,GAGX9hB,EAAK4gB,oBAGLmB,GAAqBrY,GAAKgY,GAEnB,CACNhY,IAAAA,GACAsY,QAAAA,GAEF,EASMH,GAAc,SAAC7hB,GAEpB,IAAMiiB,EAAQlgB,EAAO0J,QAAQ,IAAK,CAAC,EAAG,QAChCyW,EAASngB,EAAO0J,QAAQ,IAAK,CAAC,EAAG,SACjC0W,EAASpgB,EAAO0J,QAAQ,IAAK,CAAC,EAAG,SACjC2W,EAAUrgB,EAAO0J,QAAQ,IAAK,CAAC,EAAG,UACxCwW,EAAMtV,OAAOyV,EAASD,EAAQD,GAG9BliB,EAAK+T,SAASjQ,QAAQ,SAACvC,IAuFxB,SAAmBA,EAASvB,GAE3BwZ,OAAO6I,MAAQriB,EAGf,IAAMmD,EAAI5B,EAAEgI,MAGN2D,GAFI3L,EAAE4G,OAEFpG,EAAO0J,QAAQ,IAAK,CAAC,EAAG,SAClCyB,EAAEjD,aAAa,KAAM1I,EAAE1L,IACvB0L,EAAEgZ,UAAYrN,EAAErB,UAAUC,IAAI,YAC9BsB,EAAYF,EAAG3L,EAAE6K,EAAG7K,EAAEY,GAGtB,IAAMmgB,EAAY/gB,EAAEwG,MAAMqI,OAAS,MAE7BA,GADUL,EAAOuS,EAAUpsB,gBAAkB6Z,EAAOtC,KACxBP,EAAG3L,GAErC6O,EAAMvE,UAAUC,IAAI,cAGpBwM,EAAWlI,EAAOmS,GAAOC,YAEzBpS,EAAMnG,aAAa,OAAQ1I,EAAEwG,MAAMiR,YACnC5I,EAAMnG,aAAa,SAAU1I,EAAEwG,MAAMkR,QAErC7I,EAAMnG,aAAa,eAAgB,KACnCmG,EAAMnG,aAAa,UAAW9F,OAAO5C,EAAEwG,MAAM8Q,UAC7C4J,GAAerS,EAAO7O,EAAEwG,MAAMe,QAE9B,IAAM4Z,EAAK3gB,EAAO0J,QAAQ,KACtB4E,EAAKsS,OAAOzV,EAAE0V,aAAa,oBAAsB,EAI/CC,EAAe9hB,KAAKuK,IAAInI,EAAK2f,GAAkB,IAG9Cna,EAAWpH,EAAEwG,MAAMY,SAEzBoa,EAAkBhhB,EAAOmK,SAAS3K,EAAEuY,MAAsB,IAAf+I,EAAqBla,GAAU,EAAM,EAAG0H,EAAI,UAAhF9D,EAAGwW,EAAHxW,IAAKG,EAAEqW,EAAFrW,GACZ4L,EAAW/L,EAAKgW,GAAOS,UACvBzW,EAAItC,aAAa,OAAQ1I,EAAEwG,MAAMQ,OACjCgE,EAAItC,aAAa,aAAc,QAE/ByY,EAAG/V,OAAOJ,GACV8D,GAAM3D,EAAK,EAGX,IAAMH,EAAMxK,EAAOuH,KAAK,IAADrP,OAAKsH,EAAEmY,IAAG,KAAK,CAACtN,EAAG,EAAGjK,EAAGkO,EAAI,cAAe,WACnEiI,EAAW/L,EAAKgW,GAAOS,UACvBzW,EAAItC,aAAa,OAAQ1I,EAAEwG,MAAMQ,OACjCgE,EAAItC,aAAa,YAAa9F,OAAO,IAAO5C,EAAEwG,MAAMY,WACpD+Z,EAAG/V,OAAOJ,GACV8D,GAAM,GAGNA,GAAM,EACN,IAAM1H,EAAW5H,KAAKC,IAAuB,GAAnBO,EAAEwG,MAAMY,SAAgB,IAElDsa,EAAkBlhB,EAAOmK,SAAS3K,EAAEoY,YAA4B,IAAfkJ,EAAqBla,GAAU,EAAO,EAAG0H,EAAI,UAAvF9D,EAAG0W,EAAH1W,IAAKG,EAAEuW,EAAFvW,GACZ4L,EAAW/L,EAAKgW,GAAOS,UACvBzW,EAAItC,aAAa,OAAQ1I,EAAEwG,MAAMQ,OACjCgE,EAAItC,aAAa,aAAc,eAC/ByY,EAAG/V,OAAOJ,GAKXa,EAAYsV,EAAI,IAJfrS,GAAM3D,GAIkB,GACzBQ,EAAEP,OAAO+V,GAGTxV,EAAE0U,OAASrgB,EACXA,EAAEiZ,IAAMtN,CAGT,CAnKEgW,CAAU3hB,EAAGvB,GACbkiB,EAAOvV,OAAOpL,EAAEiZ,IACjB,GAEAxa,EAAKoT,MAAMtP,QAAQ,SAAArN,GAClBmmB,GAAU5c,EAAMvJ,GAChB0rB,EAAOxV,OAAOlW,EAAE+jB,IACjB,GAEAxa,EAAKkU,UAAUpQ,QAAQ,SAACqQ,GACvB0I,GAAW1I,GACXiO,EAAQzV,OAAOwH,EAAMqG,IACtB,GAEA9Q,GAAIiD,OAAOsV,EACZ,EAEA,SAASrF,GAAU5c,EAAiB2U,GACnC,IAAMwO,EAAKxO,EAAKvP,KAAMge,EAAKzO,EAAKK,GAE1B9H,EAAInL,EAAO0J,QAAQ,IAAK,CAAC,EAAG,QAClCyB,EAAEjD,aAAa,KAAM0K,EAAK9e,IAC1BqX,EAAEjD,aAAa,YAAa0K,EAAKvP,KAAKvP,IACtCqX,EAAEjD,aAAa,UAAW0K,EAAKK,GAAGnf,IAElC,IAAMwtB,GAAY1O,EAAK5M,MAAMsb,UAAY,IAAM,IAGzChO,EEt/BA,SAA+BV,EAAY3U,GACjD,IAAMmjB,EAAKxO,EAAKvP,KAAMge,EAAKzO,EAAKK,GAG5BK,EAAoBV,EAAKU,SAAWV,EAAKU,SAASpb,SAAW,GAE3DqpB,EAAOjO,EAIb,GAHAiO,EAAIxf,QAAQ,SAAAzB,GAAC,OAAIA,EAAEmZ,MAAQxb,EAAKmZ,aAAY,OAAQ9W,EAAExM,GAAG,GACzDwf,EAAWiO,EAAI7oB,OAAO,SAAA4H,GAAC,OAAKA,EAAEmZ,IAAI,GAEX,GAAnBnG,EAAShb,OAAa,CAGzB,IAAMkpB,EAAYvjB,EAAKoT,MAAM3Y,OAAO,SAAAhE,GAAC,OAAIA,EAAE2O,MAAQuP,EAAKvP,MAAQ3O,EAAEue,IAAML,EAAKK,EAAE,GAC3EwO,EAAY,EAChB,GAAID,EAAUlpB,OAAS,EAAG,CAEzBmpB,EADYD,EAAU9H,QAAQ9G,IACX4O,EAAUlpB,OAAS,GAAK,EAE3C,IAAIopB,EAAU,EAAGC,EAAU,EACvB3iB,KAAKoO,IAAIgU,EAAG/W,EAAIgX,EAAGhX,GAAKrL,KAAKoO,IAAIgU,EAAGhhB,EAAIihB,EAAGjhB,GAC9CuhB,EAAsB,GAAZF,EAEVC,EAAsB,IAAZD,EAEX,IAAMnhB,EAAIsS,EAAKuF,WAAW,CACzB9N,GAAI+W,EAAG/W,EAAIgX,EAAGhX,GAAK,EAAIqX,EACvBthB,GAAIghB,EAAGhhB,EAAIihB,EAAGjhB,GAAK,EAAIuhB,IAExBrhB,EAAE0T,OAAQ,EACV1T,EAAEmZ,MAAO,EACTnG,EAAS1f,KAAK0M,EACf,CAMD,CAQA,OANAgT,EAASsO,QAAQR,GACjB9N,EAAS1f,KAAKytB,GAEd/N,EAAS,GAAK8N,EAAGvT,UAAUyF,EAAS,IACpCA,EAASA,EAAShb,OAAS,GAAK+oB,EAAGxT,UAAUyF,EAASA,EAAShb,OAAS,IAEjEgb,CACR,CFu8BkBuO,CAAsBjP,EAAM3U,GAGvC6jB,EEr8BA,SAAgCxO,EAAmBgO,EAAkBvb,GAG3E,IAAI+b,EAAgBxO,EAASK,KAAK,SAAArT,GAAC,OAAKA,EAAU0T,KAAK,GACvD,IAAK8N,EAAQ,CAEZ,IADA,IAAIC,EAAM,EACDniB,EAAI,EAAGA,EAAI0T,EAAShb,OAAQsH,IACpCmiB,GAAOtL,EAAkBnD,EAAS1T,EAAI,GAAI0T,EAAS1T,IAEpDkiB,EAAS,CAACzX,EAAGtE,EAASsE,EAAGjK,EAAG2F,EAAS3F,GAErC,IADA,IAAI4hB,EAAM,EACDpiB,EAAI,EAAGA,EAAI0T,EAAShb,OAAQsH,IAAK,CACzC,IAAMW,EAAIkW,EAAkBnD,EAAS1T,EAAI,GAAI0T,EAAS1T,IACtD,GAAIoiB,EAAMzhB,EAAIwhB,EAAMT,EAAU,CAC7B,IAAMxU,GAAOiV,EAAMT,EAAWU,GAAOzhB,EACrCuhB,EAAS,CACRzX,EAAGiJ,EAAS1T,EAAI,GAAGyK,GAAKiJ,EAAS1T,GAAGyK,EAAIiJ,EAAS1T,EAAI,GAAGyK,GAAKyC,EAC7D1M,EAAGkT,EAAS1T,EAAI,GAAGQ,GAAKkT,EAAS1T,GAAGQ,EAAIkT,EAAS1T,EAAI,GAAGQ,GAAK0M,GAE9D,KACD,CACAkV,GAAOzhB,CACR,CACD,CACA,OAAOuhB,CACR,CF46BgBG,CAAuB3O,EAAUgO,EAAUF,GAE1Dc,EA4BD,SAAwBJ,EAAelP,GAEtC,IAAMhM,EAAWgM,EAAK5M,MAAMY,SAC5Bub,EAAsBniB,EAAOmK,SAASyI,EAAKoB,MAAO,IAAKpN,GAAU,EAAOkb,EAAOzX,EAAGyX,EAAO1hB,EAAG,UAAvFoK,EAAG2X,EAAH3X,IAAKG,EAAEwX,EAAFxX,GAAIlC,EAAI0Z,EAAJ1Z,KAEdkC,GAAM/D,EAAW,EACjB4D,EAAItC,aAAa,IAAK9F,OAAO0f,EAAO1hB,EAAIuK,EAAK,IAE7ClC,GAAQ7B,EACR2P,EAAW/L,EAAKgW,GAAO4B,UACvB5X,EAAItC,aAAa,SAAU,QAC3BsC,EAAItC,aAAa,YAAa9F,OAAOwQ,EAAK5M,MAAMY,WAChD4D,EAAItC,aAAa,OAAQ0K,EAAK5M,MAAMQ,OAEpC,IAAMkH,EAAO,CAACrD,EAAGyX,EAAOzX,EAAI5B,EAAO,EAAGrI,EAAG0hB,EAAO1hB,EAAIuK,EAAK,EAAGnD,MAAOiB,EAAMrC,OAAQuE,GAC3E0X,EAAKriB,EAAO6K,KAAK6C,EAAKlG,MAAOkG,EAAKtH,OAAQsH,EAAKrD,EAAGqD,EAAKtN,GAM7D,OALAmW,EAAW8L,EAAI7B,GAAO8B,UACtB9X,EAAItC,aAAa,aAAc,SAE/BwF,EAAKrD,GAAKqD,EAAKlG,MAAQ,EACvBkG,EAAKtN,GAAKsN,EAAKtH,OAAS,EACjB,CAACic,GAAAA,EAAI7X,IAAAA,EAAKkD,KAAAA,EAClB,CAlDyB6U,CAAeT,EAAQlP,GAAxCyP,EAAEH,EAAFG,GAAI7X,EAAG0X,EAAH1X,IAAKkD,EAAIwU,EAAJxU,KAChBvC,EAAEP,OAAOyX,EAAI7X,GAGb,IAAAgY,EE76BM,SAA4BlP,EAAmB5F,EAAY0T,EAAWC,GAE5E,IADA,IAQI7iB,EAREikB,EAAsB,GACnB7iB,EAAI,EAAGA,EAAI0T,EAAShb,OAAQsH,IACpC6iB,EAAS7uB,KAAK,CAACuM,EAAGmT,EAAS1T,EAAI,GAAIgM,EAAG0H,EAAS1T,KAWhD,GPvCM,SAA8B6iB,EAAqB/W,GACzD,IAAK,IAAI9L,EAAI,EAAGA,EAAI6iB,EAASnqB,OAAQsH,IAAK,CACzC,IAAM3H,EAAIwqB,EAAS7iB,GACnB,GAAI0L,EAAUrT,EAAEkI,EAAGuL,GACdJ,EAAUrT,EAAE2T,EAAGF,IAClB+W,EAAS9P,OAAO/S,EAAG,GACnBA,GAAK,GAEL3H,EAAEkI,EAAIoL,EAAkBtT,EAAEkI,EAAGlI,EAAE2T,EAAGF,GAAK,QAGxC,GAAIJ,EAAUrT,EAAE2T,EAAGF,GAClBzT,EAAE2T,EAAIL,EAAkBtT,EAAEkI,EAAGlI,EAAE2T,EAAGF,GAAK,OACjC,CACN,IAAMhD,EAAM6C,EAAkBtT,EAAEkI,EAAGlI,EAAE2T,EAAGF,GACxC,GAAkB,GAAdhD,EAAIpQ,OAAa,CAEP0G,KAAKoO,IAAI1E,EAAI,GAAG2B,EAAIpS,EAAEkI,EAAEkK,GAAKrL,KAAKoO,IAAI1E,EAAI,GAAGtI,EAAInI,EAAEkI,EAAEC,GACrDpB,KAAKoO,IAAI1E,EAAI,GAAG2B,EAAIpS,EAAEkI,EAAEkK,GAAKrL,KAAKoO,IAAI1E,EAAI,GAAGtI,EAAInI,EAAEkI,EAAEC,IACjDsI,EAAIga,UAErB,IAAMC,EAAK,CAACxiB,EAAGuI,EAAI,GAAIkD,EAAG3T,EAAE2T,GAC5B3T,EAAE2T,EAAIlD,EAAI,GACV+Z,EAAS9P,OAAO/S,EAAI,EAAG,EAAG+iB,GAC1B/iB,GAAK,CACN,CACD,CAEF,CACD,COECgjB,CAAqBH,EAAU/U,GAQ3B+U,EAASnqB,OAAS,EAAG,CACxBkG,EAAO,IAAHtG,OAAOuqB,EAAS,GAAGtiB,EAAEkK,EAAC,KAAAnS,OAAIuqB,EAAS,GAAGtiB,EAAEC,GAC5C,IAAK,IAAIR,EAAI,EAAGA,EAAI6iB,EAASnqB,OAAQsH,IAAK,CACzC,IAAM3H,EAAIwqB,EAAS7iB,GAGnBpB,GAAQ,KAAJtG,OAASD,EAAE2T,EAAEvB,EAAC,KAAAnS,OAAID,EAAE2T,EAAExL,EAC3B,CACD,MAIC5B,EAAO,IAAHtG,OAAOkpB,EAAG/W,EAAC,KAAAnS,OAAIkpB,EAAGhhB,EAAC,MAAAlI,OAAKmpB,EAAGhX,EAAC,KAAAnS,OAAImpB,EAAGjhB,GAGxC,MAAO,CAAEqiB,SAAAA,EAAUjkB,KAAAA,EACpB,CF+4B0BqkB,CAAmBvP,EAAU5F,EAAM0T,EAAIC,GAA/C7iB,GAAFgkB,EAARC,SAAcD,EAAJhkB,MAEX2B,EAAIH,EAAOxB,KAAKA,EAAM,CAAC,aAAc,eAAgB,QAmB3D,OAlBA2B,EAAE+H,aAAa,OAAQ,QACvB/H,EAAE+H,aAAa,SAAU0K,EAAK5M,MAAMQ,OACpCrG,EAAE+H,aAAa,eAAgB9F,OAAOwQ,EAAK5M,MAAM6Q,YACjD1W,EAAE+H,aAAa,iBAAkB,SACjC0K,EAAK5M,MAAM+Q,QAAU5W,EAAE+H,aAAa,mBAAoB,KACxDiD,EAAEP,OAAOzK,GAGTyS,EAAKU,SAAWA,EAASnQ,MAAM,GAAI,GAAGhL,IAAI,SAAAgI,GAAC,OAAIyS,EAAKuF,WAAWhY,EAAE,GACjEyS,EAAKU,SAASvR,QAAQ,SAAC5B,EAAGP,GACzB,IAAMU,EAAIH,EACVG,EAAEmY,IAAMzY,EAAO0J,QAAQ,SAAU,CAAC5V,GAAIwM,EAAExM,GAAIgvB,GAAI3iB,EAAEkK,EAAGiE,GAAInO,EAAEC,EAAGd,EAAG,EAAGyjB,KAAM,QAAS,SACnFziB,EAAEkY,UAAYlY,EAAEmY,IAAI3O,UAAUC,IAAI,YAClCzJ,EAAEmZ,MAAQnZ,EAAEmY,IAAI3O,UAAUC,IAAI,QAC9BoB,EAAEP,OAAOtK,EAAEmY,IACZ,GAEA7F,EAAK6F,IAAMtN,EACJA,CACR,CA2GA,SAAS2P,GAAW1I,GACnB,GAA0B,GAAtBA,EAAMhB,MAAM9Y,OAAhB,CAGA,IAAM6S,EAAInL,EAAO0J,QAAQ,IAAK,CAAC,EAAG,SAE9BsZ,EAAY,CAAC3Y,EAAG,MAAOjK,EAAG,OAAQoL,EAAY,CAACnB,EAAG,EAAGjK,EAAG,GAC5DgS,EAAMhB,MAAMrP,QAAQ,SAAAvC,GACnB,IAAMlG,EAAI,CAAC+Q,EAAG7K,EAAE6K,EAAI7K,EAAEgI,MAAQ,EAAGpH,EAAGZ,EAAEY,EAAIZ,EAAE4G,OAAS,EAAGoB,MAAOhI,EAAEgI,MAAOpB,OAAQ5G,EAAE4G,QAClF4c,EAAG3Y,EAAIrL,KAAKC,IAAI+jB,EAAG3Y,EAAG/Q,EAAE+Q,GACxB2Y,EAAG5iB,EAAIpB,KAAKC,IAAI+jB,EAAG5iB,EAAG9G,EAAE8G,GACxBoL,EAAGnB,EAAIrL,KAAKuK,IAAIiC,EAAGnB,EAAG/Q,EAAE+Q,EAAI/Q,EAAEkO,OAC9BgE,EAAGpL,EAAIpB,KAAKuK,IAAIiC,EAAGpL,EAAG9G,EAAE8G,EAAI9G,EAAE8M,OAC/B,GACA,IACMhF,EAAIpC,KAAKuK,IAAIiC,EAAGnB,EAAI2Y,EAAG3Y,EAAG,KAC1BsB,EAAIH,EAAGpL,EAAI4iB,EAAG5iB,EAAI6iB,KAClB/I,EAAK,CACV7P,EAAG2Y,EAAG3Y,EAJK,GAKXjK,EAAG4iB,EAAG5iB,EALK,GAMXoH,MAAOpG,EAAI6hB,GACX7c,OAAQuF,EAAIsX,IAEP3jB,EAAIU,EAAO6K,KAAKqP,EAAG1S,MAAO0S,EAAG9T,OAAQ8T,EAAG7P,EAAG6P,EAAG9Z,GACpDgS,EAAM/H,EAAI6P,EAAG7P,EAAI6P,EAAG1S,MAAQ,EAC5B4K,EAAMhS,EAAI8Z,EAAG9Z,EAAI8Z,EAAG9T,OAAS,EAC7BgM,EAAM5K,MAAQ0S,EAAG1S,MACjB4K,EAAMhM,OAAS8T,EAAG9T,OAClBmQ,EAAWjX,EAAGkhB,GAAO0C,WACrB9Q,EAAMpM,MAAMkR,QAAU5X,EAAE4I,aAAa,SAAUkK,EAAMpM,MAAMkR,QAC3D9E,EAAMpM,MAAMiR,YAAc3X,EAAE4I,aAAa,OAAQkK,EAAMpM,MAAMiR,YAE7D,IAAMzM,EAAMxK,EAAOuH,KAAK6K,EAAMhb,KAAM,CAACiT,EAAG2Y,EAAG3Y,EAAGjK,EAAG8Z,EAAG9Z,EAAI8Z,EAAG9T,OAASoa,GAAO2C,UAAU,eACrF5M,EAAW/L,EAAKgW,GAAO2C,WACvB/Q,EAAMpM,MAAMQ,OAASgE,EAAItC,aAAa,OAAQkK,EAAMpM,MAAMQ,OAE1D2E,EAAEP,OAAOtL,EAAGkL,GACZ4H,EAAMqG,IAAMtN,CAlCZ,CAmCD,CAEA,SAASiY,GAAmBzS,EAAkBxQ,GAE7C,IAAIkjB,EAAM,CAACC,IAAK1C,OAAO2C,kBAAmBzW,KAAM,EAAG8F,KAAM,KAAc4Q,IAAK,MAa5E,OAZA7S,EAAMU,MAAMtP,QAAQ,SAAA6Q,GAGnB,IAFA,IAAMU,EAAWV,EAAKU,UAAY,GAC5BmQ,EAAM,CAAC7Q,EAAKvP,MAAInL,OAAAiX,EAAKmE,GAAQ,CAAEV,EAAKK,KACjCrT,EAAI,EAAGA,EAAI6jB,EAAInrB,OAAQsH,IAAK,CACpC,IAAM4jB,EAAMzW,EAAQ5M,EAAGsjB,EAAI7jB,EAAI,GAAI6jB,EAAI7jB,IACjC0jB,EAAMnW,EAAYhN,EAAGqjB,GACvBF,EAAM,IACNA,EAAMD,EAAIC,MACbD,EAAM,CAACC,IAAAA,EAAKxW,IAAKlN,EAAG4jB,IAAAA,EAAK5Q,KAAAA,GAE3B,CACD,GACOyQ,EAAIzQ,KAAOyQ,EAAM,IACzB,CAEA,SAASK,GAAehvB,GAEvB,IAAM4E,EAAIqO,GAAIgc,wBACRC,EAAIvJ,KAGJwJ,EAAmBC,KAIzB,MAAO,CACNzZ,GAAI3V,EAAEqvB,QAAUzqB,EAAE+Q,EAAIwZ,EAAiBxZ,GAAKuZ,EAC5CxjB,GAAI1L,EAAEsvB,QAAU1qB,EAAE8G,EAAIyjB,EAAiBzjB,GAAKwjB,EAE9C,CASA,SAASK,GAA2Btc,EAAoBuc,EAUrDvE,GACF,IAAIwE,EAA6C,GAC7CC,EAAe,KACfC,GAAY,EAGZC,EAAmB,CAAEja,EAAG,EAAGjK,EAAG,GAC9BmkB,EAAqE,KACrEC,GAAa,EAGXC,EAA8F,GA+SpG,OApDA,SAAgB/a,GACf,IAAIgb,EAAwC,KAE5C,SAASC,EAAajwB,GACrB,MAAI,mBAAoBA,GAAKA,EAAEkwB,eACvBlwB,EAAEkwB,eAAe,GAElBlwB,CACR,CAEA,SAASmwB,EAAmBnwB,GACtBgwB,GA3FP,SAAqBhwB,EAAeyZ,EAAYxD,GAG/C,IAAK6Z,IAAexlB,KAAKoO,IAAIe,GADP,GAC8BnP,KAAKoO,IAAIzC,GADvC,KAErB6Z,GAAa,EAGTD,GAAwB,CAC3B,IAAMnT,EAAQ8S,EAAKY,eACnB1T,EAAM9Y,OAAS,EACf8Y,EAAMxd,KAAK2wB,EAAuBvc,MAClCkc,EAAKa,aAAa3T,GAClB+S,EAAM,CAAC,CAAE9Z,EAAGka,EAAuBvc,KAAKqC,EAAGjK,EAAGmkB,EAAuBvc,KAAK5H,EAAGZ,EAAG+kB,EAAuBvc,OACvGuc,EAAyB,IAC1B,CAGD,GAAIF,GAnGL,SAAsBha,EAAWjK,GAChC,IAAMka,EAAY3S,EAAI6F,cAAc,UACpC,GAAK8M,EAAL,CAEA,IAAMH,EAAOE,KACbC,EAAUpS,aAAa,YAAa,aAAFhQ,OAAemS,EAAC,MAAAnS,OAAKkI,EAAC,YAAAlI,OAAWiiB,EAAI,KAHjD,CAIvB,CAkGE6K,CAFaV,EAAiBja,EAAI8D,EACrBmW,EAAiBlkB,EAAIuK,QAE5B,GAAIwZ,EAAI7rB,OAAS,GAAKksB,EAAY,CAGxC,IAAMrK,EAAO+J,EAAK7J,UACZ4K,EAAY9W,EAAKgM,EACjB+K,EAAYva,EAAKwP,EACvBgK,EAAIpiB,QAAQ,SAAA3H,GAGX8pB,EAAK5K,SAASlf,EAAKoF,EAAGpF,EAAKiQ,EAAI4a,EAAW7qB,EAAKgG,EAAI8kB,EACpD,GACAhB,EAAKiB,aAAY,EAClB,MAAWf,IAEVA,EAAQgB,OAAO1wB,GACfwvB,EAAKiB,aAAY,GAEnB,CAqDEE,CADA3wB,EAAIiwB,EAAajwB,GACFA,EAAEqvB,QAAUW,EAAGY,GAAI5wB,EAAEsvB,QAAUU,EAAGa,GAClD,CASA,SAASC,EAAiB9wB,GANzBwS,SAASue,oBAAoB,YAAaZ,GAC1C3d,SAASue,oBAAoB,YAAaZ,GAC1C3d,SAASue,oBAAoB,UAAWD,GACxCte,SAASue,oBAAoB,WAAYD,GA1D3C,SAAmB9wB,GAIlB,GAHAwvB,EAAKiB,aAAY,GAGbZ,IAA2BC,EAAY,CAC1C,IAAMpT,EAAQ8S,EAAKY,eACnB1T,EAAM9Y,OAAS,EACf8Y,EAAMxd,KAAK2wB,EAAuBvc,MAClCkc,EAAKa,aAAa3T,EACnB,CAEA,GAAIgT,EAAS,CACZ,IAAM1Y,EAAM0Y,EAAQsB,MAChBha,EACHwY,EAAKyB,aAAaja,EAAKhX,EAAEsE,UACdmrB,EAAI7rB,QAEf4rB,EAAKa,aAAa,IAEnBX,EAAU,IACX,CAGA,GAAIC,GAAaG,EAAY,CAC5B,IAAMoB,EAAaje,EAAYkY,OAC3B+F,GAAaA,EAAU9xB,IAC1B4qB,GAAckH,EAAU9xB,GAE1B,CAGAywB,EAAyB,KACzBC,GAAa,EACbH,GAAY,EACZH,EAAKvJ,eACN,CA4BEkL,CAAUlB,EAAajwB,IACvBgwB,EAAK,IACN,CAEA,SAASoB,EAAmBpxB,GAC3BA,EAAIiwB,EAAajwB,GACjBgwB,EAAK,CAAEY,GAAI5wB,EAAEqvB,QAASwB,GAAI7wB,EAAEsvB,SAzL9B,SAAqBtvB,GACpBA,EAAEqxB,iBACFvB,GAAa,EACbD,EAAyB,KAEzB,IAAMvc,EAAOkc,EAAK8B,cAActxB,GAG1BuxB,EAAgBvxB,EAAEsE,SAAyB,QAAb2mB,EAAqB,SAAW,MAASA,EAE7E,GAAK3X,EAsBL,GAAsB,QAAlBie,EAEH5B,GAAY,EACZD,EAAU,KAEVF,EAAKa,aAAa,CAAC/c,IACnBmc,EAAM,CAAC,CAAE9Z,EAAGrC,EAAKqC,EAAGjK,EAAG4H,EAAK5H,EAAGZ,EAAGwI,QAC5B,CAENqc,GAAY,EACZD,EAAU,KACV,IAAMhT,EAAQ8S,EAAKY,eAEnB,GAAIpwB,EAAEsE,UAAyB,WAAb2mB,EAAuB,CAExC,GAAIuE,EAAKgC,WAAWle,GAAO,CAC1B,IAAMyM,EAAQrD,EAAMsB,UAAU,SAAAlT,GAAC,OAAIA,EAAE1L,KAAOkU,EAAKlU,EAAE,GAC/C2gB,GAAS,GAAGrD,EAAMuB,OAAO8B,EAAO,EACrC,MACCrD,EAAMxd,KAAKoU,GAEZkc,EAAKa,aAAa3T,GAClB+S,EAAM/S,EAAMjZ,IAAI,SAAAqH,GAAC,MAAK,CAAE6K,EAAG7K,EAAE6K,EAAGjK,EAAGZ,EAAEY,EAAGZ,EAAAA,EAAG,EAC5C,MAEK0kB,EAAKgC,WAAWle,IAASoJ,EAAM9Y,OAAS,EAE3C6rB,EAAM/S,EAAMjZ,IAAI,SAAAqH,GAAC,MAAK,CAAE6K,EAAG7K,EAAE6K,EAAGjK,EAAGZ,EAAEY,EAAGZ,EAAAA,EAAG,IAEhC0kB,EAAKgC,WAAWle,KAE3Buc,EAAyB,CAAEvc,KAAAA,EAAMhP,SAAUtE,EAAEsE,WAK7CmrB,EAAM,CAAC,CAAE9Z,EAAGrC,EAAKqC,EAAGjK,EAAG4H,EAAK5H,EAAGZ,EAAGwI,IAGrC,KA5DuB,QAAlBie,GAEH5B,GAAY,EACZD,EAAU,KACE1vB,EAAEqvB,QACFrvB,EAAEsvB,QACdM,EAxCH,WACC,IAAMhK,EAAY3S,EAAI6F,cAAc,UACpC,IAAK8M,EAAW,MAAO,CAAEjQ,EAAG,EAAGjK,EAAG,GAElC,IACM+lB,GADY7L,EAAUuG,aAAa,cAAgB,IACxBvM,MAAM,gCACvC,OAAI6R,EACI,CACN9b,EAAG+b,WAAWD,EAAe,KAAO,EACpC/lB,EAAGgmB,WAAWD,EAAe,KAAO,GAG/B,CAAE9b,EAAG,EAAGjK,EAAG,EACnB,CA2BsBimB,GACnBlC,EAAM,GAEND,EAAKa,aAAa,MAGlBV,GAAY,EACZD,EAtHH,WACC,IAAIkC,EAAgB,EAAGC,EAAgB,EAAG1b,EAA8B,KAExE,MAAO,CACNsZ,IAAG,SAACzvB,GAEH,IAAM8xB,EAAK9C,GAAehvB,GAC1B4xB,EAAgBE,EAAGnc,EACnBkc,EAAgBC,EAAGpmB,GAEnByK,EAAO3D,SAASU,gBAAgB,6BAA8B,SACzDM,aAAa,OAAQ,0BAC1B2C,EAAK3C,aAAa,SAAU,0BAC5B2C,EAAK3C,aAAa,eAAgB,KAClC2C,EAAK3C,aAAa,mBAAoB,OACtC2C,EAAK3C,aAAa,IAAK9F,OAAOkkB,IAC9Bzb,EAAK3C,aAAa,IAAK9F,OAAOmkB,IAC9B1b,EAAK3C,aAAa,QAAS,KAC3B2C,EAAK3C,aAAa,SAAU,KAG5B,IAAMoS,EAAY3S,EAAI6F,cAAc,UAChC8M,EACHA,EAAUxS,YAAY+C,GAEtBlD,EAAIG,YAAY+C,EAElB,EACAua,OAAM,SAAC1wB,GACN,GAAKmW,EAAL,CAGA,IAAM4b,EAAY/C,GAAehvB,GAC3BgyB,EAAkBD,EAAUpc,EAC5Bsc,EAAkBF,EAAUrmB,EAG5BiK,EAAIrL,KAAKC,IAAIqnB,EAAeI,GAC5BtmB,EAAIpB,KAAKC,IAAIsnB,EAAeI,GAC5Bnf,EAAQxI,KAAKoO,IAAIsZ,EAAkBJ,GACnClgB,EAASpH,KAAKoO,IAAIuZ,EAAkBJ,GAE1C1b,EAAK3C,aAAa,IAAK9F,OAAOiI,IAC9BQ,EAAK3C,aAAa,IAAK9F,OAAOhC,IAC9ByK,EAAK3C,aAAa,QAAS9F,OAAOoF,IAClCqD,EAAK3C,aAAa,SAAU9F,OAAOgE,GAhBlB,CAiBlB,EACAsf,IAAG,WACF,IAAK7a,EAAM,OAAO,KAGlB,IAAMR,EAAI+b,WAAWvb,EAAKgW,aAAa,MAAQ,KACzCzgB,EAAIgmB,WAAWvb,EAAKgW,aAAa,MAAQ,KACzCrZ,EAAQ4e,WAAWvb,EAAKgW,aAAa,UAAY,KACjDza,EAASggB,WAAWvb,EAAKgW,aAAa,WAAa,KAMzD,OAJAhW,EAAK6N,SACL7N,EAAO,KAGHrD,EAAQ,GAAKpB,EAAS,EAClB,CACNiE,EAAGA,EAAGjK,EAAGA,EAAGoH,MAAOA,EAAOpB,OAAQA,EAClC0V,KAAMzR,EAAG2R,IAAK5b,EAAG2b,MAAO1R,EAAI7C,EAAOyU,OAAQ7b,EAAIgG,GAG1C,IACR,EAEF,CAiDawgB,GACNxC,GAASA,EAAQD,IAAIzvB,GACzByvB,EAAM,GA8CT,CAkHE0C,CAAYnyB,GACZwS,SAASqY,iBAAiB,YAAasF,GACvC3d,SAASqY,iBAAiB,YAAasF,GACvC3d,SAASqY,iBAAiB,UAAWiG,GACrCte,SAASqY,iBAAiB,WAAYiG,EACvC,CAEA9b,EAAQ6V,iBAAiB,YAAauG,GACtCpc,EAAQ6V,iBAAiB,aAAcuG,GAGvCrB,EAAe7wB,KACd,CAAE8V,QAAAA,EAAS7U,MAAO,YAAasG,QAAS2qB,GACxC,CAAEpc,QAAAA,EAAS7U,MAAO,aAAcsG,QAAS2qB,GAE3C,CAEAgB,CAAOnf,GAGA,WACN8c,EAAe1iB,QAAQ,SAAAglB,GAAiC,IAA9Brd,EAAOqd,EAAPrd,QAAS7U,EAAKkyB,EAALlyB,MAAOsG,EAAO4rB,EAAP5rB,QACzCuO,EAAQ+b,oBAAoB5wB,EAAOsG,EACpC,EACD,CACD,CAEO,SAAS6kB,GAAqBrY,EAAoBgY,GAExD,IAAMqH,EAAmBrf,EAAYsf,2BAKrC,SAASC,EAAQtd,GAEhB,OAAOA,EAAGiW,MACX,CAPImH,GACHA,IAQD,IAAMG,EAAK,WAAH,OAAUD,EAAQvf,EAAI,EAGxB8c,EAA8F,GAE9F2C,EAAsB,SAAC1yB,GACvByyB,IAAKxN,YACVjlB,EAAEqxB,iBACFrxB,EAAE2yB,YAAc,GACjB,EAIA,SAASC,EAAe/mB,EAAWiY,GAClCjY,EAAEiY,SAAWA,EACb,IAAM+O,EAAQ5f,EAAI6F,cAAc,IAAMjN,EAAEzM,IACxCyM,EAAEiY,SAAW+O,EAAMzd,UAAUC,IAAI,YAAcwd,EAAMzd,UAAU4O,OAAO,WACvE,CAPAjB,OAAO8H,iBAAiB,eAAgB6H,GACxC3C,EAAe7wB,KAAK,CAAE8V,QAAS+N,OAAQ5iB,MAAO,eAAgBsG,QAASisB,IASvE,IAAMI,EAAmB,SAAC9yB,GACzB,GAAKA,EAAEuE,OAAP,CACA,IAAMoqB,EAAMD,GAAmB+D,IAAMzD,GAAehvB,IACpD,GAAI2uB,EAAK,CACR,IAAOG,EAAOH,EAAPG,IACD/V,EAAS9F,EAAI6F,cAAc,WAC7BN,EAAMO,EAAOD,cAAc,QAC1BN,IACJA,EAAMlN,EAAO0J,QAAQ,SAAU,CAAC5V,GAAI,MAAOgvB,GAAIU,EAAInZ,EAAGiE,GAAIkV,EAAIpjB,EAAGd,EAAG,IACpEmO,EAAO7C,OAAOsC,IAEfA,EAAIhF,aAAa,KAAM9F,OAAOohB,EAAInZ,IAClC6C,EAAIhF,aAAa,KAAM9F,OAAOohB,EAAIpjB,GACnC,MACCqnB,GAboB,CAetB,EACA9f,EAAI4X,iBAAiB,YAAaiI,GAClC/C,EAAe7wB,KAAK,CAAE8V,QAAS/B,EAAK9S,MAAO,YAAasG,QAASqsB,IAEjE,IAAME,EAAe,SAAChzB,GACrB,IAAM8C,GAAMY,EAAAA,EAAAA,cAAa1D,GAAG,GACxB8C,GAAOtC,EAAAA,YAAcsC,GAAOrC,EAAAA,kBAChCsyB,GACD,EAIA,SAASA,IACR,IAAM7d,EAAKjC,EAAI6F,cAAc,gBAC7B5D,GAAMA,EAAG2Q,cAAcjS,YAAYsB,EACpC,CANA6N,OAAO8H,iBAAiB,QAASmI,GACjCjD,EAAe7wB,KAAK,CAAE8V,QAAS+N,OAAQ5iB,MAAO,QAASsG,QAASusB,IAOhE,IAAMC,EAAe,SAACjzB,GACrB,IAAM8C,GAAMY,EAAAA,EAAAA,cAAa1D,GAAG,GAC5B,GAAI8C,GAAOrC,EAAAA,kBAAoBqC,GAAOtC,EAAAA,WAAtC,CACA,IAAMmuB,EAAMD,GAAmB+D,IAAMzD,GAAehvB,IACpD,GAAI2uB,EAAK,CACR,IAAOzQ,EAAkByQ,EAAlBzQ,KAAM9F,EAAYuW,EAAZvW,IAAK0W,EAAOH,EAAPG,IAElB2D,IAAKS,iBAAiBhV,EAAM4Q,EAAK1W,EAAKtV,GAAOrC,EAAAA,kBAC7CsyB,GACD,CAPwD,CAQzD,EACA9f,EAAI4X,iBAAiB,QAASoI,GAC9BlD,EAAe7wB,KAAK,CAAE8V,QAAS/B,EAAK9S,MAAO,QAASsG,QAASwsB,IAE7D,IAAME,EAAe,SAACnzB,GAGrB,IAAMozB,EAA8B,GAAtB9oB,KAAK+oB,KAAKrzB,EAAEszB,QACpB5N,EAAcC,KACd4N,EAAUjpB,KAAKuK,IAAI,GAAKvK,KAAKC,IAAI,EAAGmb,EAAc0N,IAExD,GAAIG,IAAY7N,EAAa,CAE5B,IAAMvP,EAAOlD,EAAIgc,wBAGjBuE,GAAgBD,EAFHvzB,EAAEqvB,QAAUlZ,EAAKiR,KACjBpnB,EAAEsvB,QAAUnZ,EAAKmR,KAE9BtnB,EAAEqxB,iBAGF,IAAMH,EAAaje,EAAYkY,OAC3B+F,GAAaA,EAAU9xB,IAC1B4qB,GAAckH,EAAU9xB,GAE1B,CACD,EACA6T,EAAI4X,iBAAiB,QAASsI,GAC9BpD,EAAe7wB,KAAK,CAAE8V,QAAS/B,EAAK9S,MAAO,QAASsG,QAAS0sB,IAE7D,IAAMM,EAAiB,SAACzzB,GACvB,IAAMkE,GAAWR,EAAAA,EAAAA,cAAa1D,GAK9B,OAJIkE,GACHlE,EAAEqxB,iBAGKntB,GACP,KAAKxD,EAAAA,WACJwN,MAAMS,KAAK8jB,IAAK/P,aAAaY,UAAUtf,OAAO,SAAA4H,GAAC,OAAIA,EAAEkY,QAAQ,GAAEzW,QAAQ,SAAAzB,GACtE6mB,IAAKiB,iBAAiB9nB,EACvB,GACA,MACD,KAAKtL,EAAAA,KACJmyB,IAAKvN,OACL,MACD,KAAK3kB,EAAAA,KACJkyB,IAAKtN,OACL,MACD,KAAKxkB,EAAAA,QAGJ6yB,GAFkBlpB,KAAKC,IAAI,EAAe,IAAZob,OAG9BqE,GAAcyI,IAAKrzB,IACnB,MACD,KAAKwB,EAAAA,SAGJ4yB,GAFmBlpB,KAAKuK,IAAI,GAAK8Q,KAAY,MAG7CqE,GAAcyI,IAAKrzB,IACnB,MACD,KAAK0B,EAAAA,SAEJ0yB,GAAgB,GAChBxJ,GAAcyI,IAAKrzB,IACnB,MACD,KAAKyB,EAAAA,SACJ4xB,IAAK/J,YAEL,MACD,KAAK3nB,EAAAA,WACJ0xB,IAAK/V,QAAQrP,QAAQ,SAAAvC,GAAC,OAAI2nB,IAAKpJ,gBAAgBve,GAAG,EAAK,GACvD2nB,IAAK/P,aAAarV,QAAQ,SAAAzB,GAAC,OAAIgnB,EAAehnB,GAAG,EAAK,GACtD,MACD,KAAK5K,EAAAA,SACJyxB,IAAK/V,QAAQrP,QAAQ,SAAAvC,GAAC,OAAI2nB,IAAKpJ,gBAAgBve,GAAG,EAAM,GACxD2nB,IAAK/P,aAAarV,QAAQ,SAAAzB,GAAC,OAAIgnB,EAAehnB,GAAG,EAAM,GAG1D,EACAmX,OAAO8H,iBAAiB,UAAW4I,GACnC1D,EAAe7wB,KAAK,CAAE8V,QAAS+N,OAAQ5iB,MAAO,UAAWsG,QAASgtB,IAGlE,IAAME,EAA2BpE,GAA2Btc,EAAK,CAChEqe,cAAa,SAACtxB,GACbA,EAAEqxB,iBAEF,IAAInc,EAAMlV,EAAE4zB,OAAsBC,QAAQ,kBAC1C,OAAI3e,EAAWsd,EAAQtd,IAEvBA,EAAMlV,EAAE4zB,OAAsBC,QAAQ,0BAE9BpB,IAAK/P,aAAarE,IAAInJ,EAAG9V,IAE1B,IACR,EACAixB,aAAY,SAACyD,GAEZrB,IAAK/V,QAAQrP,QAAQ,SAAAvC,GAAC,OAAI2nB,IAAKpJ,gBAAgBve,EAAGgpB,EAAQ3vB,KAAK,SAAA8S,GAAC,OAAIA,EAAE7X,IAAM0L,EAAE1L,EAAE,GAAE,GAElFqzB,IAAK/P,aAAarV,QAAQ,SAAAxB,GAAC,OAAI+mB,EAAe/mB,EAAGioB,EAAQ3vB,KAAK,SAAA8S,GAAC,OAAIA,EAAE7X,IAAMyM,EAAEzM,EAAE,GAAE,GACjF0rB,GAAe2H,IAAK/V,QAAQuC,KAAK,SAAAnU,GAAC,OAAIA,EAAEgZ,QAAQ,GACjD,EACA2M,YAAW,SAAC5kB,GAEZ,EACA2lB,WAAU,SAACuC,GACV,OAAOA,EAAOjQ,QACf,EACAsM,aAAY,WACX,IAAMpc,EAAgBye,IAAK/V,QAAQ1Y,OAAO,SAAA8G,GAAC,OAAIA,EAAEgZ,QAAQ,GAEzD,OADA2O,IAAK/P,aAAarV,QAAQ,SAAAxB,GAAC,OAAIA,EAAEiY,UAAY9P,EAAI9U,KAAK2M,EAAE,GACjDmI,CACR,EACA2R,QAASA,GACTf,SAAQ,SAAC3N,EAAWtB,EAAWjK,GAC1B+mB,IAAKnV,SAASK,IAAI1G,EAAE7X,IACvBqzB,IAAK7N,SAAS3N,EAAWtB,EAAGjK,IAE3BuL,EAAiB8N,MAAO,EACzB0N,IAAK5N,eAAe5N,EAAiBtB,EAAGjK,GAE1C,EACAulB,aAAY,SAACja,EAAc3B,GAG1Bod,IAAKnV,SAASjQ,QAAQ,SAAAvC,GACrB,ILtxDyBkpB,EAAUC,EAIXrvB,GAJCovB,EAKrB,CAACre,GADmB/Q,EKkxDekG,GLjxD7B6K,EAAI/Q,EAAEkO,MAAQ,EAAGpH,EAAG9G,EAAE8G,EAAI9G,EAAE8M,OAAS,EAAGoB,MAAOlO,EAAEkO,MAAOpB,OAAQ9M,EAAE8M,SAJrEiE,GAD4Bse,EKsxDQjd,GLrxD7BrB,EAAIse,EAAGnhB,OAASkhB,EAAGtoB,EAAIuoB,EAAGvoB,EAAIuoB,EAAGviB,QAAUsiB,EAAGre,EAAIqe,EAAGlhB,MAAQmhB,EAAGte,GAAKqe,EAAGtoB,EAAIsoB,EAAGtiB,OAASuiB,EAAGvoB,EKwxDxG+mB,IAAKpJ,gBAAgBve,GAAIA,EAAEgZ,UAChBzO,GAEXod,IAAKpJ,gBAAgBve,GAAG,EAE1B,GAEA2nB,IAAK/P,aAAarV,QAAQ,SAAAxB,GACX+K,EAAU/K,EAAGmL,GAAK,GAG/B4b,EAAe/mB,GAAIA,EAAEiY,UACVzO,GAEXud,EAAe/mB,GAAG,EAEpB,GAEAif,GAAe2H,IAAK/V,QAAQuC,KAAK,SAAAnU,GAAC,OAAIA,EAAEgZ,QAAQ,GACjD,EACAmC,cAAeA,IACbgF,GAaDhY,EAAYsf,2BAVE,WACfxC,EAAe1iB,QAAQ,SAAA6mB,GAAiC,IAA9Blf,EAAOkf,EAAPlf,QAAS7U,EAAK+zB,EAAL/zB,MAAOsG,EAAOytB,EAAPztB,QACzCuO,EAAQ+b,oBAAoB5wB,EAAOsG,EACpC,GACIktB,GACHA,GAEF,CAID,CAEO,SAAShO,KACf,IAAK1S,GAAK,OAAO,EACjB,IAAMiC,EAAKjC,GAAI6F,cAAc,UAC7B,IAAK5D,EAAI,OAAO,EAGhB,IACMif,GADYjf,EAAGiX,aAAa,cAAgB,IACrBvM,MAAM,oBACnC,OAAIuU,GACIzC,WAAWyC,EAAW,KAEvB,CACR,CAIO,SAAS5I,GAAQ9F,GACvB,GAAKxS,GAAL,CACA,IAAMiC,EAAKjC,GAAI6F,cAAc,UAC7B,GAAK5D,EAAL,CAGA,IAAMia,EAAmBC,KACzBla,EAAG1B,aAAa,YAAa,aAAFhQ,OAAe2rB,EAAiBxZ,EAAC,MAAAnS,OAAK2rB,EAAiBzjB,EAAC,YAAAlI,OAAWiiB,EAAI,MAGlGQ,IAPe,CAFC,CAUjB,CAEO,SAASuN,GAAgBD,EAAiB/L,EAAkBC,GAClE,IAAMvS,EAAKjC,GAAI6F,cAAc,UACvBsb,EAAUzO,KAGhB,QAAgB/lB,IAAZ4nB,QAAqC5nB,IAAZ6nB,EAAuB,CAGnD,IAAMlV,EAAYU,GAAI4S,cAClBtT,GACHiV,EAAUjV,EAAUuT,YAAc,EAClC2B,EAAUlV,EAAUwT,aAAe,IAGnCyB,EAAUvU,GAAI6S,YAAc,EAC5B2B,EAAUxU,GAAI8S,aAAe,EAE/B,CAGA,IAAMoJ,EAAmBC,KAYnBiF,EAAgB7M,GANJA,EAAU2H,EAAiBxZ,GAAKye,EAMNb,EACtCe,EAAgB7M,GANJA,EAAU0H,EAAiBzjB,GAAK0oB,EAMNb,EAG5Cre,EAAG1B,aAAa,YAAa,aAAFhQ,OAAe6wB,EAAa,MAAA7wB,OAAK8wB,EAAa,YAAA9wB,OAAW+vB,EAAO,MAG3FtN,IACD,CAEA,SAASmJ,KACR,IAAKnc,GAAK,MAAO,CAAE0C,EAAG,EAAGjK,EAAG,GAC5B,IAAMwJ,EAAKjC,GAAI6F,cAAc,UAC7B,IAAK5D,EAAI,MAAO,CAAES,EAAG,EAAGjK,EAAG,GAE3B,IACM+lB,GADYvc,EAAGiX,aAAa,cAAgB,IACjBvM,MAAM,gCACvC,OAAI6R,EACI,CACN9b,EAAG+b,WAAWD,EAAe,KAAO,EACpC/lB,EAAGgmB,WAAWD,EAAe,KAAO,GAG/B,CAAE9b,EAAG,EAAGjK,EAAG,EACnB,CAEA,SAASua,KACR,GAAKhT,GAAL,CACA,IAAMiC,EAAKjC,GAAI6F,cAAc,UAC7B,GAAK5D,EAAL,CACA,IAAMsQ,EAAKtQ,EAAGvB,UACR8R,EAAOE,KACb,GAAK1S,GAAI4S,cAAT,CACA,IAAMnZ,EAAIpC,KAAKuK,IAAI5B,GAAI4S,cAAcC,YAAcL,EAAMD,EAAG7P,EAAI6P,EAAG1S,MAAQ8O,GACrE3K,EAAI3M,KAAKuK,IAAI5B,GAAI4S,cAAcE,aAAeN,EAAMD,EAAG9Z,EAAI8Z,EAAG9T,OAASkQ,GAC7E3O,GAAIO,aAAa,QAAS9F,OAAOhB,EAAI+Y,IACrCxS,GAAIO,aAAa,SAAU9F,OAAOuJ,EAAIwO,GAJR,CAHf,CAFC,CAajB,CAYO,IAwBDuG,GAAiB,SAAC9W,EAAgB5D,GAC1B,UAATA,EAAmB4D,EAAG1B,aAAa,mBAAoB,KACzC,UAATlC,GAAmB4D,EAAG1B,aAAa,mBAAoB,IACjE,EAEMsY,GAAS,CAEdC,WAAY,CAEX/nB,OAAQ,gBAETuoB,SAAU,CACT,cAAe,oBACf/J,OAAQ,QAITkL,SAAU,CACT,cAAe,oBACflL,OAAQ,QAGToL,SAAU,CACTS,KAAM,OACN7L,OAAQ,QAITgM,UAAW,CAEVH,KAAM,sBACN7L,OAAQ,OACR,eAAgB,EAChB,mBAAoB,GAErBiM,UAAW,CACVJ,KAAM,OACN,YAAa,GACblc,OAAQ,YAKJoiB,GAAiB,IAAIlX,IAGpB,SAAS2M,GAAcwK,GAC7B,GAAKvhB,GAAL,CAEA,IAAMwS,EAAOE,KACPjP,EAAY0Y,KAEZ/f,EAAQ,CACboW,KAAAA,EACA/O,UAAW,CAAEf,EAAGe,EAAUf,EAAGjK,EAAGgL,EAAUhL,IAG3C6oB,GAAehX,IAAIiX,EAASnlB,EAVZ,CAWjB,CAGO,SAASolB,GAAiBD,GAChC,IAAKvhB,KAAQshB,GAAe5W,IAAI6W,GAC/B,OAAO,EAGR,IAAMnlB,EAAQklB,GAAelW,IAAImW,GACjC,IAAKnlB,EACJ,OAAO,EAIR,IAAMuW,EAAY3S,GAAI6F,cAAc,UAMpC,OALI8M,IACHA,EAAUpS,aAAa,YAAa,SAAFhQ,OAAW6L,EAAMoW,KAAI,gBAAAjiB,OAAe6L,EAAMqH,UAAUf,EAAC,MAAAnS,OAAK6L,EAAMqH,UAAUhL,EAAC,MAC7Gua,OAGM,CACR,CAGO,SAASD,GAAewO,GAC9BD,GAAc,OAAQC,EACvB,C,ywCGrtDA,SAASE,EAAqB1kB,EAAY2kB,GACzC,IAAI7xB,OAAclD,EASlB,OARAkE,OAAOC,KAAKiM,EAAM4kB,OAAO5wB,OAAO,SAAAT,GAAC,OAAIA,EAAEuN,SAAS,QAAQ,GAAE3M,KAAK,SAACZ,GAC/D,OAASyM,EAAM4kB,MAAcrxB,GAAIY,KAAK,SAACyH,GACtC,GAAIA,EAAE+oB,kBAAoBA,EAEzB,OADA7xB,EAAM8I,EAAE9I,KACD,CAET,EACD,GACOA,CACR,CAEO,IAAM+xB,EAAY,SAAC7kB,GACzB,IAAM8kB,EAAuB,GAO7B,OANiBhxB,OAAOC,KAAKiM,EAAM4kB,OAAO5wB,OAAO,SAAAwB,GAAO,OAAIA,EAAQsL,SAAS,QAAQ,GAC5EzD,QAAQ,SAAA9J,GAChByM,EAAM4kB,MAAMrxB,GAAG8J,QAAQ,SAACzB,GACvBkpB,EAAU51B,KAAK,CAAC4D,IAAK8I,EAAE9I,IAAKugB,MAAOzX,EAAEyX,OAASzX,EAAE9I,IAAK0C,QAASjC,GAC/D,EACD,GACOuxB,CACR,E,sBC5WA,IAAA90B,EAAA2K,EAAAC,EAAA,mBAAAC,OAAAA,OAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,aAAA,yBAAAC,EAAAN,EAAAE,EAAAE,EAAAE,GAAA,IAAA9G,EAAA0G,GAAAA,EAAAK,qBAAAC,EAAAN,EAAAM,EAAAC,EAAAvH,OAAAwH,OAAAlH,EAAA+G,WAAA,OAAAI,EAAAF,EAAA,mBAAAT,EAAAE,EAAAE,GAAA,IAAAE,EAAA9G,EAAAiH,EAAAG,EAAA,EAAAC,EAAAT,GAAA,GAAAU,GAAA,EAAAC,EAAA,CAAAF,EAAA,EAAAX,EAAA,EAAAc,EAAA5L,EAAA2E,EAAAkH,EAAAL,EAAAK,EAAAC,KAAA9L,EAAA,GAAA6L,EAAA,SAAAlB,EAAAC,GAAA,OAAAM,EAAAP,EAAAvG,EAAA,EAAAiH,EAAArL,EAAA2L,EAAAb,EAAAF,EAAAjG,CAAA,YAAAkH,EAAAjB,EAAAE,GAAA,IAAA1G,EAAAwG,EAAAS,EAAAP,EAAAH,EAAA,GAAAe,GAAAF,IAAAR,GAAAL,EAAAc,EAAA7H,OAAA+G,IAAA,KAAAK,EAAAE,EAAAO,EAAAd,GAAAkB,EAAAF,EAAAF,EAAAM,EAAAb,EAAA,GAAAN,EAAA,GAAAI,EAAAe,IAAAjB,KAAAO,EAAAH,GAAA9G,EAAA8G,EAAA,OAAA9G,EAAA,MAAA8G,EAAA,GAAAA,EAAA,GAAAlL,GAAAkL,EAAA,IAAAW,KAAAb,EAAAJ,EAAA,GAAAiB,EAAAX,EAAA,KAAA9G,EAAA,EAAAuH,EAAAC,EAAAd,EAAAa,EAAAb,EAAAI,EAAA,IAAAW,EAAAE,IAAAf,EAAAJ,EAAA,GAAAM,EAAA,GAAAJ,GAAAA,EAAAiB,KAAAb,EAAA,GAAAN,EAAAM,EAAA,GAAAJ,EAAAa,EAAAb,EAAAiB,EAAA3H,EAAA,OAAA4G,GAAAJ,EAAA,SAAAjG,EAAA,MAAA+G,GAAA,EAAAZ,CAAA,iBAAAE,EAAAS,EAAAM,GAAA,GAAAP,EAAA,QAAAQ,UAAA,oCAAAN,GAAA,IAAAD,GAAAI,EAAAJ,EAAAM,GAAA3H,EAAAqH,EAAAJ,EAAAU,GAAApB,EAAAvG,EAAA,EAAApE,EAAAqL,KAAAK,GAAA,CAAAR,IAAA9G,EAAAA,EAAA,GAAAA,EAAA,IAAAuH,EAAAb,GAAA,GAAAe,EAAAzH,EAAAiH,IAAAM,EAAAb,EAAAO,EAAAM,EAAAC,EAAAP,GAAA,OAAAG,EAAA,EAAAN,EAAA,IAAA9G,IAAA4G,EAAA,QAAAL,EAAAO,EAAAF,GAAA,MAAAL,EAAAA,EAAAsB,KAAAf,EAAAG,IAAA,MAAAW,UAAA,wCAAArB,EAAAuB,KAAA,OAAAvB,EAAAU,EAAAV,EAAA/D,MAAAxC,EAAA,IAAAA,EAAA,YAAAA,IAAAuG,EAAAO,EAAA,SAAAP,EAAAsB,KAAAf,GAAA9G,EAAA,IAAAiH,EAAAW,UAAA,oCAAAhB,EAAA,YAAA5G,EAAA,GAAA8G,EAAAlL,CAAA,UAAA2K,GAAAe,EAAAC,EAAAb,EAAA,GAAAO,EAAAT,EAAAqB,KAAAnB,EAAAa,MAAAhH,EAAA,YAAAgG,GAAAO,EAAAlL,EAAAoE,EAAA,EAAAiH,EAAAV,CAAA,SAAAa,EAAA,UAAA5E,MAAA+D,EAAAuB,KAAAR,EAAA,GAAAd,EAAAI,EAAAE,IAAA,GAAAG,CAAA,KAAA1G,EAAA,YAAAyG,IAAA,UAAAe,IAAA,UAAAC,IAAA,CAAAzB,EAAA7G,OAAAuI,eAAA,IAAAjI,EAAA,GAAA0G,GAAAH,EAAAA,EAAA,GAAAG,QAAAS,EAAAZ,EAAA,GAAAG,EAAA,yBAAAH,GAAAU,EAAAe,EAAAjB,UAAAC,EAAAD,UAAArH,OAAAwH,OAAAlH,GAAA,SAAAoH,EAAAxL,GAAA,OAAA8D,OAAAwI,eAAAxI,OAAAwI,eAAAtM,EAAAoM,IAAApM,EAAAuM,UAAAH,EAAAb,EAAAvL,EAAAgL,EAAA,sBAAAhL,EAAAmL,UAAArH,OAAAwH,OAAAD,GAAArL,CAAA,QAAAmM,EAAAhB,UAAAiB,EAAAb,EAAAF,EAAA,cAAAe,GAAAb,EAAAa,EAAA,cAAAD,GAAAA,EAAAK,YAAA,oBAAAjB,EAAAa,EAAApB,EAAA,qBAAAO,EAAAF,GAAAE,EAAAF,EAAAL,EAAA,aAAAO,EAAAF,EAAAP,EAAA,yBAAAS,EAAAF,EAAA,oDAAAoB,EAAA,kBAAAC,EAAAxB,EAAAyB,EAAAnB,EAAA,cAAAD,EAAAvL,EAAA4K,EAAAE,EAAAH,GAAA,IAAAO,EAAApH,OAAA8I,eAAA,IAAA1B,EAAA,gBAAAlL,GAAAkL,EAAA,EAAAK,EAAA,SAAAvL,EAAA4K,EAAAE,EAAAH,GAAA,GAAAC,EAAAM,EAAAA,EAAAlL,EAAA4K,EAAA,CAAAhE,MAAAkE,EAAA+B,YAAAlC,EAAAmC,cAAAnC,EAAAoC,UAAApC,IAAA3K,EAAA4K,GAAAE,MAAA,KAAAE,EAAA,SAAAJ,EAAAE,GAAAS,EAAAvL,EAAA4K,EAAA,SAAA5K,GAAA,YAAAgN,QAAApC,EAAAE,EAAA9K,EAAA,IAAAgL,EAAA,UAAAA,EAAA,WAAAA,EAAA,cAAAO,EAAAvL,EAAA4K,EAAAE,EAAAH,EAAA,UAAAkD,EAAA/C,EAAAH,EAAA3K,EAAA4K,EAAAI,EAAArG,EAAAP,GAAA,QAAA8G,EAAAJ,EAAAnG,GAAAP,GAAAiH,EAAAH,EAAAtE,KAAA,OAAAkE,GAAA,YAAA9K,EAAA8K,EAAA,CAAAI,EAAAgB,KAAAvB,EAAAU,GAAAyC,QAAAC,QAAA1C,GAAA2C,KAAApD,EAAAI,EAAA,UAAA+pB,EAAAjqB,GAAA,sBAAAH,EAAA,KAAA3K,EAAA2D,UAAA,WAAAmK,QAAA,SAAAlD,EAAAI,GAAA,IAAArG,EAAAmG,EAAAsC,MAAAzC,EAAA3K,GAAA,SAAA2Q,EAAA7F,GAAA+C,EAAAlJ,EAAAiG,EAAAI,EAAA2F,EAAAC,EAAA,OAAA9F,EAAA,UAAA8F,EAAA9F,GAAA+C,EAAAlJ,EAAAiG,EAAAI,EAAA2F,EAAAC,EAAA,QAAA9F,EAAA,CAAA6F,OAAA,eAAA1C,EAAArD,EAAA5K,GAAA,gBAAA4K,GAAA,GAAAsD,MAAAC,QAAAvD,GAAA,OAAAA,CAAA,CAAAwD,CAAAxD,IAAA,SAAAA,EAAAmB,GAAA,IAAApB,EAAA,MAAAC,EAAA,yBAAAC,QAAAD,EAAAC,OAAAE,WAAAH,EAAA,uBAAAD,EAAA,KAAA3K,EAAA8K,EAAAI,EAAAG,EAAA1G,EAAA,GAAA6G,GAAA,EAAAR,GAAA,SAAAE,GAAAP,EAAAA,EAAAsB,KAAArB,IAAAyD,KAAA,IAAAtC,EAAA,IAAAjI,OAAA6G,KAAAA,EAAA,OAAAa,GAAA,cAAAA,GAAAxL,EAAAkL,EAAAe,KAAAtB,IAAAuB,QAAAvH,EAAAzF,KAAAc,EAAA4G,OAAAjC,EAAAf,SAAAmI,GAAAP,GAAA,UAAAZ,GAAAI,GAAA,EAAAF,EAAAF,CAAA,iBAAAY,GAAA,MAAAb,EAAA,SAAAU,EAAAV,EAAA,SAAA7G,OAAAuH,KAAAA,GAAA,kBAAAL,EAAA,MAAAF,CAAA,SAAAnG,CAAA,EAAA2J,CAAA1D,EAAA5K,IAAA,SAAA4K,EAAAjG,GAAA,GAAAiG,EAAA,qBAAAA,EAAA,OAAA2D,EAAA3D,EAAAjG,GAAA,IAAAgG,EAAA,GAAA6D,SAAAvC,KAAArB,GAAA6D,MAAA,uBAAA9D,GAAAC,EAAA8D,cAAA/D,EAAAC,EAAA8D,YAAAhM,MAAA,QAAAiI,GAAA,QAAAA,EAAAuD,MAAAS,KAAA/D,GAAA,cAAAD,GAAA,2CAAA5K,KAAA4K,GAAA4D,EAAA3D,EAAAjG,QAAA,GAAAiK,CAAAhE,EAAA5K,IAAA,qBAAAgM,UAAA,6IAAA6C,EAAA,UAAAN,EAAA3D,EAAAjG,IAAA,MAAAA,GAAAA,EAAAiG,EAAAhH,UAAAe,EAAAiG,EAAAhH,QAAA,QAAA5D,EAAA,EAAA8K,EAAAoD,MAAAvJ,GAAA3E,EAAA2E,EAAA3E,IAAA8K,EAAA9K,GAAA4K,EAAA5K,GAAA,OAAA8K,CAAA,CA4BA,IAAMkqB,EAAuC,CAAC,ECvBvC,SAASC,EAAaC,GAC3B,IAAMhhB,EAAQghB,EAAMpV,QAAQ,WAAY,OACxC,OAAO5L,EAAMihB,OAAO,GAAGhwB,cAAgB+O,EAAMzF,MAAM,EACrD,C,6gCCYO,IAAM2mB,EAA4B,SAAH5lB,GAIhC,IAHJQ,EAAKR,EAALQ,MAAOqlB,EAAS7lB,EAAT6lB,UAAWC,EAAY9lB,EAAZ8lB,aAAcrZ,EAAKzM,EAALyM,MAChCsZ,EAAY/lB,EAAZ+lB,aAAcC,EAAMhmB,EAANgmB,OAAQC,EAAYjmB,EAAZimB,aAAcC,EAAMlmB,EAANkmB,OAAQC,EAASnmB,EAATmmB,UAC5C1K,EAAQzb,EAARyb,SAAU2K,EAAWpmB,EAAXomB,YAEJhB,EAAQC,EAAU7kB,GAExB,OACE1K,EAAAA,cAAA,OAAKC,UAAU,WACbD,EAAAA,cAACuwB,EAAY,CACXjB,MAAOA,EACPS,UAAWA,EACXC,aAAcA,IAEhBhwB,EAAAA,cAACwwB,EAAc,CACb7Z,MAAOA,EACPsZ,aAAcA,EACdC,OAAQA,EACRC,aAAcA,EACdC,OAAQA,EACRC,UAAWA,EACX1K,SAAUA,EACV2K,YAAaA,IAIrB,EAEMC,EAID,SAAHjkB,GAAA,IAAMgjB,EAAKhjB,EAALgjB,MAAOS,EAASzjB,EAATyjB,UAAWC,EAAY1jB,EAAZ0jB,aAAY,OACpChwB,EAAAA,cAAA,WAAK,QAEFsvB,EAAMhxB,OAAS,EACd0B,EAAAA,cAAA,UAAQywB,SAAU,SAAA/1B,GAAC,OAAIs1B,EAAat1B,EAAE4zB,OAAOhtB,MAAM,EAAEA,MAAOyuB,GAC1D/vB,EAAAA,cAAA,UAAQ0wB,UAAQ,EAACpvB,MAAM,GAAGqvB,QAAM,GAAC,OAChCrB,EAAMnxB,IAAI,SAAAyyB,GAAI,OACb5wB,EAAAA,cAAA,UAAQxC,IAAKozB,EAAKpzB,IAAK8D,MAAOsvB,EAAKpzB,KAChCmyB,EAAaiB,EAAK1wB,SAAW,KAAO0wB,EAAK7S,MACnC,IAIb/d,EAAAA,cAAA,QAAMgM,MAAO,CAAE6kB,WAAY,MAAOC,WAAY,SAC3CxB,EAAM,GAAKK,EAAaL,EAAM,GAAGpvB,SAAW,KAAOovB,EAAM,GAAGvR,MAAQ,sBAGrE,EAGFyS,EASD,SAAH7N,GAAA,IACAhM,EAAKgM,EAALhM,MAAOsZ,EAAYtN,EAAZsN,aAAcC,EAAMvN,EAANuN,OAAQC,EAAYxN,EAAZwN,aAAcC,EAAMzN,EAANyN,OAAQC,EAAS1N,EAAT0N,UACnD1K,EAAQhD,EAARgD,SAAU2K,EAAW3N,EAAX2N,YAAW,OAErBtwB,EAAAA,cAAA,OAAKgM,MAAO,CAAEC,QAAS,OAAQE,WAAY,WACzCnM,EAAAA,cAAA,OAAKC,UAAU,iBACbD,EAAAA,cAAC+wB,EAAc,CAACpL,SAAUA,EAAU2K,YAAaA,KAEnDtwB,EAAAA,cAAA,OAAKC,UAAU,iBACbD,EAAAA,cAACgxB,EAAe,CAACra,MAAOA,KAE1B3W,EAAAA,cAAA,OAAKC,UAAU,iBACbD,EAAAA,cAACixB,EAAgB,CAACta,MAAOA,KAE3B3W,EAAAA,cAAA,OAAKC,UAAU,iBACbD,EAAAA,cAACkxB,EAAc,CAACjB,aAAcA,EAAcI,UAAWA,KAEzDrwB,EAAAA,cAAA,OAAKC,UAAU,iBACbD,EAAAA,cAACmxB,EAAY,CAACxa,MAAOA,KAEvB3W,EAAAA,cAAA,OAAKC,UAAU,iBACbD,EAAAA,cAACoxB,EAAY,CAACza,MAAOA,KAEvB3W,EAAAA,cAAA,OAAKC,UAAU,iBACbD,EAAAA,cAACqxB,EAAU,CAACnB,OAAQA,EAAQE,OAAQA,EAAQzZ,MAAOA,KAErD3W,EAAAA,cAAA,OAAKC,UAAU,iBACbD,EAAAA,cAACsxB,EAAU,CAACnB,aAAcA,KAExB,EAGFY,EAGD,SAAHnO,GAAA,IAAM+C,EAAQ/C,EAAR+C,SAAU2K,EAAW1N,EAAX0N,YAAW,OAC3BtwB,EAAAA,cAAA,UACEC,UAAS,eAAA/B,OAA8B,WAAbynB,EAAwB,cAAgB,YAClEhZ,QAAS,WAAF,OAAQ2jB,EAAyB,QAAb3K,EAAqB,SAAW,MAAM,EACjE,eAA2B,QAAbA,EAAqB,qCAAuC,iFAE5D,QAAbA,EAAqB3lB,EAAAA,cAAA,KAAGC,UAAU,sBAA2BD,EAAAA,cAAA,KAAGC,UAAU,yBACpE,EAGL+wB,EAA4C,SAAHjE,GAAkB,IAAZpW,EAAKoW,EAALpW,MAC7C4a,GAAS52B,EAAAA,EAAAA,MACf,OACEqF,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,UAAQ2M,QAAS,WAAF,OAAQgK,EAAMiJ,MAAM,EAAE,4DAAA1hB,OAA2DqzB,EAAM,QACpGvxB,EAAAA,cAAA,KAAGC,UAAU,iBAEfD,EAAAA,cAAA,UAAQ2M,QAAS,WAAF,OAAQgK,EAAMkJ,MAAM,EAAE,+CAAA3hB,OAA8CqzB,EAAM,eAAArzB,OAAcqzB,EAAM,QAC3GvxB,EAAAA,cAAA,KAAGC,UAAU,iBAIrB,EAEMgxB,EAA6C,SAAHrC,GAAkB,IAAZjY,EAAKiY,EAALjY,MAC9C4a,GAAS52B,EAAAA,EAAAA,MACf,OACEqF,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,UAAQ2M,QAAS,WAAF,OAAQgK,EAAM6a,iBAAiB,EAAE,yEAAAtzB,OAAwEqzB,EAAM,cAC5HvxB,EAAAA,cAAA,KAAGC,UAAU,uBAEfD,EAAAA,cAAA,UAAQ2M,QAAS,WAAF,OAAQgK,EAAM8a,iBAAiB,EAAE,sEAAAvzB,OAAqEqzB,EAAM,cACzHvxB,EAAAA,cAAA,KAAGC,UAAU,oBAAoB+L,MAAO,CAACoF,UAAW,oBAEtDpR,EAAAA,cAAA,UAAQ2M,QAAS,WAAF,OAAQgK,EAAM+a,sBAAsB,EAAE,oFAAAxzB,OAAmFqzB,EAAM,YAC5IvxB,EAAAA,cAAA,KAAGC,UAAU,uBAEfD,EAAAA,cAAA,UAAQ2M,QAAS,WAAF,OAAQgK,EAAMgb,sBAAsB,EAAE,kFAAAzzB,OAAiFqzB,EAAM,YAC1IvxB,EAAAA,cAAA,KAAGC,UAAU,uBAIrB,EAEMixB,EAGD,SAAHU,GAAoC,IAA9B3B,EAAY2B,EAAZ3B,aAAcI,EAASuB,EAATvB,UACdkB,GAAS52B,EAAAA,EAAAA,MACf,OACEqF,EAAAA,cAAA,UACE2M,QAASsjB,EACTS,SAAUL,EACV,kFAAAnyB,OAAiFqzB,EAAM,QAEtFlB,EAAYrwB,EAAAA,cAAA,KAAGC,UAAU,2BAAgCD,EAAAA,cAAA,KAAGC,UAAU,iBAG7E,EAEMkxB,EAAyC,SAAHU,GAAkB,IAAZlb,EAAKkb,EAALlb,MACqB/M,EAAAjB,GAA/BkB,EAAAA,EAAAA,UAAS8M,EAAMmb,iBAAgB,GAA9DC,EAAWnoB,EAAA,GAAEooB,EAAcpoB,EAAA,GACgCqoB,EAAAtpB,GAA9BkB,EAAAA,EAAAA,UAAS8M,EAAMub,gBAAe,GAA3DlT,EAAUiT,EAAA,GAAEE,EAAaF,EAAA,GAC1BV,GAAS52B,EAAAA,EAAAA,MAkCf,OA/BAqF,EAAAA,UAAgB,WACd,IAAMoyB,EAAkB,WACtBJ,EAAerb,EAAMmb,iBACrBK,EAAcxb,EAAMub,eACtB,EAQA,OALAE,IAGA3U,OAAO8H,iBAAiB,mBAAoB6M,GAErC,WACL3U,OAAOgO,oBAAoB,mBAAoB2G,EACjD,CACF,EAAG,CAACzb,IAiBF3W,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,UACEC,UAAW8xB,EAAc,gBAAkB,kBAC3CplB,QAlBmB,WACvBgK,EAAM0b,aACNL,EAAerb,EAAMmb,gBACvB,EAgBM,0CAAA5zB,OAAyCqzB,EAAM,QAE/CvxB,EAAAA,cAAA,KAAGC,UAAU,eAEfD,EAAAA,cAAA,UACEC,UAAW+e,EAAa,gBAAkB,kBAC1CrS,QApBmB,WACvBgK,EAAM2b,mBACNH,EAAcxb,EAAMub,eACtB,EAkBM,uCAAAh0B,OAAsCqzB,EAAM,cAE5CvxB,EAAAA,cAAA,KAAGC,UAAU,mBAEfD,EAAAA,cAAA,UACE2M,QArBgB,WACpBgK,EAAM4b,eACR,EAoBM7B,UAAW1R,EACX,6CAAA9gB,OAA4CqzB,EAAM,YAElDvxB,EAAAA,cAAA,KAAGC,UAAU,uBAIrB,EAEMuyB,EAAkB,WACtB,IAA0CC,EAAA9pB,GAAbkB,EAAAA,EAAAA,UAAS,KAAI,GAAnCsW,EAAIsS,EAAA,GAAEC,EAAYD,EAAA,GAiBzB,OAfA/mB,EAAAA,EAAAA,WAAU,WACR,IAAMinB,EAAa,WACjB,IAAMvS,EAAcpb,KAAKoZ,MAAkB,KAAZiC,EAAAA,EAAAA,OAC/BqS,EAAatS,EACf,EAGAuS,IAGA,IAAMC,EAAWC,YAAYF,EAAY,KAEzC,OAAO,kBAAMG,cAAcF,EAAS,CACtC,EAAG,IAGD5yB,EAAAA,cAAA,UACE2M,QAAS,WAAF,OAAQuhB,EAAAA,EAAAA,IAAgB,EAAE,EACjCjuB,UAAU,eACV,eAAa,+BAEZkgB,EAAK,IAGZ,EAEMiR,EAAyC,SAAH2B,GAAkB,IAAZpc,EAAKoc,EAALpc,MAC1C4a,GAAS52B,EAAAA,EAAAA,MACf,OACEqF,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,UAAQ2M,QAAS,YACfuhB,EAAAA,EAAAA,IAAgBlpB,KAAKuK,IAAI,IAAK8Q,EAAAA,EAAAA,MAAY,KAC5C,EAAG,uDAAAniB,OAAsDqzB,EAAM,QAC7DvxB,EAAAA,cAAA,KAAGC,UAAU,yBAEfD,EAAAA,cAACwyB,EAAW,MACZxyB,EAAAA,cAAA,UAAQ2M,QAAS,YACfuhB,EAAAA,EAAAA,IAAgBlpB,KAAKC,IAAI,EAAe,KAAZob,EAAAA,EAAAA,OAC9B,EAAG,uDAAAniB,OAAsDqzB,EAAM,QAC7DvxB,EAAAA,cAAA,KAAGC,UAAU,wBAEfD,EAAAA,cAAA,UAAQ2M,QAAS,WAAQgK,EAAMyM,WAAa,EAAG,uCAAAllB,OAAsCqzB,EAAM,QACzFvxB,EAAAA,cAAA,KAAGC,UAAU,mBAIrB,EAEMoxB,EAID,SAAH2B,GAAkC,IAA5B9C,EAAM8C,EAAN9C,OAAQE,EAAM4C,EAAN5C,OAAQzZ,EAAKqc,EAALrc,MAC6Bsc,EAAAtqB,GAAfkB,EAAAA,EAAAA,WAAS,GAAM,GAA5CqpB,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAC1B1B,GAAS52B,EAAAA,EAAAA,MAiBf,OAdA+Q,EAAAA,EAAAA,WAAU,WACR,IAAM0nB,EAAe,WACnBD,EAAcxc,EAAMgJ,UACtB,EAGAyT,IAGA,IAAMR,EAAWC,YAAYO,EAAc,KAE3C,OAAO,kBAAMN,cAAcF,EAAS,CACtC,EAAG,CAACjc,IAGF3W,EAAAA,cAAA,UACEC,UAAWizB,EAAa,MAAQ,SAChCxC,SAAUN,EACVzjB,QAASujB,EACT,mDAAAhyB,OAAkDqzB,EAAM,QAEvDnB,EAASpwB,EAAAA,cAAA,KAAGC,UAAU,2BAAgCD,EAAAA,cAAA,KAAGC,UAAU,gBAG1E,EAEMqxB,EAED,SAAH+B,GAAyB,IAAnBlD,EAAYkD,EAAZlD,aACN,OACEnwB,EAAAA,cAAA,UAAQ2M,QAASwjB,EAAc,eAAa,qEAC1CnwB,EAAAA,cAAA,KAAGC,UAAU,2BAGnB,E,ggCCvUA,IAAMF,GAAO0J,EAAAA,EAAAA,MAAK,kBAAM,sCAAsBf,KAAK,SAAA7O,GAAM,MAAK,CAAE6P,QAAS7P,EAAOkG,KAAM,EAAE,GAClFuzB,GAAQ7pB,EAAAA,EAAAA,MAAK,kBAAM,6BAAmCf,KAAK,SAAA7O,GAAM,MAAK,CAAE6P,QAAS7P,EAAOy5B,MAAO,EAAE,GAQ1F9pB,EAAsB,SAAHU,GAAA,IAAMQ,EAAKR,EAALQ,MAAOC,EAAMT,EAANS,OAAM,OACjD3K,EAAAA,cAACuzB,EAAAA,GAAM,KACLvzB,EAAAA,cAACwzB,EAAAA,GAAM,KACLxzB,EAAAA,cAACyzB,EAAAA,GAAK,CAACjvB,KAAK,IAAIkL,QAAS1P,EAAAA,cAAC0zB,EAAS,CAAChpB,MAAOA,EAAOipB,QAAShpB,OAEtD,EAGEc,EAAe,WH6IG,IAACskB,KC1Jf,IAAI6D,gBAAgB1mB,SAAS2mB,SAASC,QACvC/a,IAAI,OAAS,WD2JlB2W,EAAOK,GAEdvxB,OAAOC,KAAKixB,GAAQ3nB,QAAQ,SAAAvK,GAAG,cAAWkyB,EAAOlyB,EAAI,EG9IzD,EAEMk2B,EAA8C,SAAHpnB,GAA2B,IAArB5B,EAAK4B,EAAL5B,MAAOipB,EAAOrnB,EAAPqnB,QACHI,EAAAprB,GAAjBqrB,EAAAA,EAAAA,MAAiB,GAAlDC,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GAC9BhE,EAAYoE,UAAUF,EAAalb,IAAI,OAAS,IAGDnP,EAAAjB,GAAfkB,EAAAA,EAAAA,WAAS,GAAM,GAA9CuqB,EAAWxqB,EAAA,GAAEyqB,EAAczqB,EAAA,GAC+BqoB,EAAAtpB,GAAjCkB,EAAAA,EAAAA,UAA2B,OAAM,GAA1D8b,EAAQsM,EAAA,GAAE3B,EAAW2B,EAAA,GAGtBtb,EHPgB,SAACjM,EAAYipB,EAAc5D,GACjD,GAAIL,EAAOK,GACT,OAAOL,EAAOK,GAGhB,IAAMpZ,ED8DiB,SAACjM,EAAcipB,EAAkBW,GAEzD,IAAMC,EAAW,IAAIxc,IACfyc,EAAY,IAAIzc,IAEhB0c,EAAc,SAAC7kB,GAChBhH,MAAMC,QAAQ+G,EAAG8kB,gBACpB9kB,EAAG8kB,cAAc3sB,QAAQ,SAAA4sB,GACxBH,EAAUvc,IAAI0c,EAAI76B,GAAI66B,EACvB,EAEF,EAiCA,GA9BAjqB,EAAMA,MAAMkqB,QAAUlqB,EAAMA,MAAMkqB,OAAO7sB,QAAQ,SAAC6H,GACjD2kB,EAAStc,IAAIrI,EAAG9V,GAAI8V,GAChBhH,MAAMC,QAAQ+G,EAAG8kB,gBACpB9kB,EAAG8kB,cAAc3sB,QAAQ,SAAA4sB,GACxBH,EAAUvc,IAAI0c,EAAI76B,GAAI66B,EACvB,EAEF,GAEAjqB,EAAMA,MAAMmqB,iBAAmBnqB,EAAMA,MAAMmqB,gBAAgB9sB,QAAQ,SAAC6H,GACnE2kB,EAAStc,IAAIrI,EAAG9V,GAAI8V,GACpB6kB,EAAY7kB,GAERhH,MAAMC,QAAQ+G,EAAGklB,aACpBllB,EAAGklB,WAAW/sB,QAAQ,SAACgtB,GACtBA,EAAIthB,OAAS7D,EACb2kB,EAAStc,IAAI8c,EAAIj7B,GAAIi7B,GACrBN,EAAYM,GACRnsB,MAAMC,QAAQksB,EAAIC,aACrBD,EAAIC,WAAWjtB,QAAQ,SAACktB,GACvBA,EAAIxhB,OAASshB,EACbR,EAAStc,IAAIgd,EAAIn7B,GAAIm7B,GACrBR,EAAYQ,EACb,EAEF,EAEF,GAGIvqB,EAAMA,MAAMwqB,gBAAiB,CAChC,IASMC,EAAc,SAACvlB,EAAa6D,GACjC7D,EAAG6D,OAASA,EACZ8gB,EAAStc,IAAIrI,EAAG9V,GAAI8V,GACpB6kB,EAAY7kB,GAZc,SAACA,GAC3BA,EAAGwlB,oBAAsBxlB,EAAGwlB,mBAAmBrtB,QAAQ,SAAC3H,GACvD,IAAM20B,EAAGjzB,EAAAA,EAAA,GAAOyyB,EAASxb,IAAI3Y,EAAKi1B,cAAY,IAAEv7B,GAAIsG,EAAKtG,KACzDy6B,EAAStc,IAAI8c,EAAIj7B,GAAIi7B,GACrBA,EAAIthB,OAAS7D,EACb6kB,EAAYr0B,EACb,EACD,CAMCg1B,CAAmBxlB,GACnBA,EAAGkI,UAAYlI,EAAGkI,SAAS/P,QAAQ,SAACgtB,GAAY,OAAKI,EAAYJ,EAAKnlB,EAAG,GACzEA,EAAG0lB,qBAAuB1lB,EAAG0lB,oBAAoBvtB,QAAQ,SAACgtB,GAAY,OAAKI,EAAYJ,EAAKnlB,EAAG,EAChG,EAEAlF,EAAMA,MAAMwqB,gBAAgBntB,QAAQ,SAAC6H,GAAW,OAAKulB,EAAYvlB,EAAI,KAAK,EAC3E,CAGA,IAAA2lB,EAkKD,SAAiB7qB,EAAc4pB,GAC9B,IAAI1D,EAAa,KAAM1wB,EAAkB,GAUzC,OATA1B,OAAOC,KAAKiM,EAAM4kB,OAAO5wB,OAAO,SAAAT,GAAC,OAAIA,EAAEuN,SAAS,QAAQ,GAAE3M,KAAK,SAACZ,GAC/D,OAASyM,EAAM4kB,MAAcrxB,GAAIY,KAAK,SAACyH,GACtC,GAAIA,EAAE9I,KAAO82B,EAGZ,OAFA1D,EAAOtqB,EACPpG,EAAUjC,GACH,CAET,EACD,GACO,CAAC2yB,KAAAA,EAAM1wB,QAAAA,EACf,CA9KyBs1B,CAAQ9qB,EAAO4pB,GAAhC1D,EAAI2E,EAAJ3E,KAAM1wB,EAAOq1B,EAAPr1B,QAEb,IAAK0wB,EAAM,OAAO,KAElB,IAAMja,EAAQ,IAAIwG,EAAAA,GAAUyT,EAAKpzB,IAAKozB,EAAK7S,OAAS6S,EAAKpzB,KACnDgkB,EAAqB,CAACpkB,KAAMuZ,EAAMvZ,KAAMwgB,YAAagT,EAAKhT,YAAa6X,QAAS/qB,EAAM+qB,QAASlB,SAAU,IAG/G,GAFA5d,EAAM6K,SAAWA,GAEZoP,EAAK2D,SAAU,OAAO5d,EAG3B,IAAM+e,EAA0C,CAAC,EACjD,GAAe,mBAAXx1B,GAA2C,kBAAXA,EACnC0wB,EAAK2D,SAASxsB,QAAQ,SAAA0W,GACrB,IAAM7O,EAAK2kB,EAASxb,IAAI0F,EAAI3kB,IACxB8V,SAAAA,EAAI6D,SACPiiB,EAAY9lB,EAAG6D,OAAO3Z,KAAM,EAE9B,QACM,GAAI82B,EAAKvB,iBAEVuB,EAAK2D,SAAS5a,KAAK,SAAA8E,GAAG,OAAIA,EAAI3kB,IAAM82B,EAAKvB,gBAAgB,KAC7DqG,EAAY9E,EAAKvB,mBAAoB,QAChC,GAAe,wBAAXnvB,EAAmC,CAE7C,IAAMiG,EAAUrE,EAAA,CAAIhI,GAAI,kBAAqB4Q,EAAMA,MAAMirB,YACzDpB,EAAStc,IAAI9R,EAAErM,GAAIqM,GACfuE,EAAMA,MAAMkqB,QAAQlqB,EAAMA,MAAMkqB,OAAOl2B,OAAO,SAAAkR,GAAE,MAAmB,YAAfA,EAAGikB,QAAsB,GAAE9rB,QAAQ,SAAA6H,GAAE,OAAIA,EAAG6D,OAAStN,CAAC,GAC1GuE,EAAMA,MAAMmqB,iBAAiBnqB,EAAMA,MAAMmqB,gBAAgBn2B,OAAO,SAAAkR,GAAE,MAAmB,YAAfA,EAAGikB,QAAsB,GAAE9rB,QAAQ,SAAA6H,GAAE,OAAIA,EAAG6D,OAAStN,CAAC,GAChIuvB,EAAYvvB,EAAErM,KAAM,CACrB,CAEA,IAAM0sB,EAAS9b,EAAM4kB,MAAM9I,OAG3BoK,EAAK2D,SAASxsB,QAAQ,SAAC0W,GAEtB,IAAIiX,EAAYjX,EAAI3kB,IAApB,CAEA,IAAM8V,EAAK2kB,EAASxb,IAAI0F,EAAI3kB,IAExB6jB,EAAM,GACN3R,EAAQ,CAAC,EACb,GAAI4D,EAAI,CACP,IAAMgmB,EAAOhmB,EAAGgmB,KAAKhnB,MAAM,KAC3B+O,EAAMiY,EAAKA,EAAKt3B,OAAS,GACrBsR,EAAGimB,aACNlY,GAAO,KAAO/N,EAAGimB,YAElBD,EAAK7tB,QAAQ,SAAA+tB,GACZ,IAAM73B,EAAIuoB,GAAUA,EAAO+N,UAAY/N,EAAO+N,SAAS5a,KAAK,SAAA1b,GAAC,OAAIA,EAAE63B,KAAOA,CAAG,GAC7E73B,IAAM+N,EAAKlK,EAAAA,EAAA,GAAOkK,GAAU/N,GAC7B,EACD,CAEA0Y,EAAMof,QACLtX,EAAI3kB,GACJ8V,GAAMA,EAAGxS,MAAkBqhB,EAAI3kB,GAC/B6jB,EACC/N,GAAMA,EAAGgO,YAAehO,EAAGgO,YAAc,GAC1C5R,GAED4D,GAAM4R,EAAS+S,SAAS36B,KAAK,CAC5BE,GAAI8V,EAAG9V,GACP87B,KAAMhmB,EAAGgmB,KACT/B,SAAUjkB,EAAGikB,SACbmC,WAAYpmB,EAAGomB,WACfC,eAAgB7G,EAAqB1kB,EAAOkF,EAAG9V,IAC/C+7B,WAAYjmB,EAAGimB,YA/Be,CAiChC,GAEIjtB,MAAMC,QAAQ+nB,EAAK8D,gBACtB9D,EAAK8D,cAAc3sB,QAAQ,SAAA0W,GAC1B,IAAMkW,EAAMH,EAAUzb,IAAI0F,EAAI3kB,IAC9B,GAAK66B,EAEL,GAAKhe,EAAMqB,SAASK,IAAIsc,EAAIuB,UAS5B,GAAKvf,EAAMqB,SAASK,IAAIsc,EAAIwB,eAA5B,CASA,IAAInqB,EAAa,CAAC,EAClB2oB,EAAIiB,KAAKhnB,MAAM,KAAK7G,QAAQ,SAAA+tB,GAC3B,IAAM73B,EAAIuoB,GAAUA,EAAOkO,eAAiBlO,EAAOkO,cAAc/a,KAAK,SAAA1b,GAAC,OAAIA,EAAE63B,KAAOA,CAAG,GACvF73B,IAAM+N,EAAKlK,EAAAA,EAAA,GAAOkK,GAAU/N,GAC7B,GACIwgB,EAAI2X,UAASpqB,EAAMoqB,QAAU3X,EAAI2X,SAErCzf,EAAM0f,QAAQ1B,EAAI76B,GAAI66B,EAAIuB,SAAUvB,EAAIwB,cAAexB,EAAI/W,YAAaa,EAAInF,SAAUtN,EARtF,MAPC,GAAIuoB,EAASlc,IAAIsc,EAAIwB,eAAgB,CACpC,IAAMvmB,EAAK2kB,EAASxb,IAAI4b,EAAIwB,eAC5BxyB,QAAQyX,KAAK,mCAAoCxL,EAAG9V,GAAI8V,EAAGxS,KAC5D,MACCuG,QAAQyX,KAAK,sBAAuBuZ,EAAIwB,oBAbzC,GAAI5B,EAASlc,IAAIsc,EAAIuB,UAAW,CAC/B,IAAMtmB,EAAK2kB,EAASxb,IAAI4b,EAAIuB,UAC5BvyB,QAAQyX,KAAK,mCAAoCxL,EAAG9V,GAAI8V,EAAGxS,KAC5D,MACCuG,QAAQyX,KAAK,sBAAuBuZ,EAAIuB,SAqB3C,GAKD,IAAMI,EAAQ,SAAC1mB,GAEd,IADA,IAAIhK,EAAI,EACCO,EAAIyJ,EAAG6D,OAAQtN,EAAGA,EAAIA,EAAEsN,OAAQ7N,IACzC,OAAOA,CACR,EA8CA,OA7CkBpH,OAAOC,KAAKi3B,GAC5Bv3B,IAAI,SAAArE,GAAE,OAAIy6B,EAASxb,IAAIjf,EAAG,GAC1BsF,KAAK,SAACC,EAAGC,GAAC,OAAKg3B,EAAMj3B,GAAKi3B,EAAMh3B,IAAM,EAAI,CAAC,GAEnCyI,QAAQ,SAAA0L,GACjB,IAAIzH,EAAQ,CAAC,EACE,mBAAX9L,GACQq0B,EAASxb,IAAItF,EAAO3Z,IACf87B,KAAKhnB,MAAM,KACtB7G,QAAQ,SAAA+tB,GACZ,IAAM73B,EAAIuoB,GAAUA,EAAO+N,UAAY/N,EAAO+N,SAAS5a,KAAK,SAAA1b,GAAC,OAAIA,EAAE63B,KAAOA,CAAG,GAC7E73B,IAAM+N,EAAKlK,EAAAA,EAAA,GAAOkK,GAAU/N,GAC7B,GAID,IAAMs4B,EAAe3F,EAAK2D,SACxBp2B,IAAI,SAAAsgB,GAAG,OAAI8V,EAASxb,IAAI0F,EAAI3kB,GAAG,GAC/B4E,OAAO,SAAAkR,GACP,SAAKA,GAAMA,EAAG6D,SAAWA,GAGT,yBAAZvT,GAAoD,mBAAduT,EAAO3Z,IAEzB,aAAhB8V,EAAGikB,SAKZ,GACC11B,IAAI,SAAAyR,GAAE,OAAIA,EAAG9V,EAAE,GAGby8B,EAAaj4B,OAAS,GACzBqY,EAAM6f,SACL/iB,EAAO3Z,GACP2Z,EAAOrW,KACPm5B,EACAvqB,EAGH,GAGA2K,EAAM8f,KAAK9C,EAAQhd,EAAM7c,KAClB6c,CACR,CChSgB+f,CAAUhsB,EAAOipB,EAAS5D,GAKxC,OAJIpZ,IACF+Y,EAAOK,GAAapZ,GAGfA,CACT,CGJgBggB,CAASjsB,EAAOipB,EAAS5D,GAGvC6G,EHI2B,SAACjgB,GAC5B,IAAiD/M,EAAAjB,GAAfkB,EAAAA,EAAAA,WAAS,GAAM,GAA1CwmB,EAASzmB,EAAA,GAAEitB,EAAYjtB,EAAA,GAiB9B,MAAO,CAAEymB,UAAAA,EAAWyG,kBAfKC,EAAAA,EAAAA,aAAWtH,EAAAtoB,IAAAE,EAAC,SAAA8C,IAAA,IAAA9J,EAAAuK,EAAA,OAAAzD,IAAAC,EAAA,SAAAyD,GAAA,cAAAA,EAAA1E,EAAA0E,EAAArF,GAAA,OAKhC,OAJHqxB,GAAa,GAAMhsB,EAAA1E,EAAA,EAEX9F,EAAyB,CAC7B+V,UAAW,QACZvL,EAAArF,EAAA,EACKmR,EAAMH,WAAWnW,GAAQ,OAAAwK,EAAArF,EAAA,eAAAqF,EAAA1E,EAAA,EAAAyE,EAAAC,EAAAvE,EAE/B3C,QAAQQ,MAAM,iBAAgByG,GAC9BosB,MAAM,2CAA2C,OAE7B,OAF6BnsB,EAAA1E,EAAA,EAEjD0wB,GAAa,GAAOhsB,EAAA3E,EAAA,iBAAA2E,EAAAxL,EAAA,KAAA8K,EAAA,qBAErB,CAACwM,IAGN,CGvB0CsgB,CAActgB,GAAU,CAAC,GAAzD0Z,EAASuG,EAATvG,UAAWyG,EAAgBF,EAAhBE,iBACnBI,EHyBqB,SAACvgB,EAAkBoZ,GACxC,IAA2CkC,EAAAtpB,GAAfkB,EAAAA,EAAAA,WAAS,GAAM,GAApCumB,EAAM6B,EAAA,GAAEkF,EAASlF,EAAA,GAwBxB,MAAO,CAAE7B,OAAAA,EAAQgH,YAtBEL,EAAAA,EAAAA,aAAWtH,EAAAtoB,IAAAE,EAAC,SAAAgwB,IAAA,IAAAC,EAAA,OAAAnwB,IAAAC,EAAA,SAAAmwB,GAAA,cAAAA,EAAApxB,EAAAoxB,EAAA/xB,GAAA,OACb,OAAhB2xB,GAAU,GAAMI,EAAApxB,EAAA,EAAAoxB,EAAA/xB,EAAA,EAGSwF,MAAM,gBAAkBwsB,mBAAmBzH,GAAY,CAC5E0H,OAAQ,OACR5pB,KAAM8I,EAAM+gB,cACZ,OAEsB,MALVH,EAAAjxB,EAKDqxB,OACXX,MAAM,sCAENrgB,EAAM2L,WACPiV,EAAA/xB,EAAA,eAAA+xB,EAAApxB,EAAA,EAAAmxB,EAAAC,EAAAjxB,EAED3C,QAAQQ,MAAM,eAAcmzB,GAC5BN,MAAM,yCAAyC,OAE9B,OAF8BO,EAAApxB,EAAA,EAE/CgxB,GAAU,GAAOI,EAAArxB,EAAA,iBAAAqxB,EAAAl4B,EAAA,KAAAg4B,EAAA,qBAElB,CAAC1gB,EAAOoZ,IAGb,CGnDiC6H,CAAQjhB,GAAU,CAAC,EAAiBoZ,GAA3DK,EAAM8G,EAAN9G,OAAQgH,EAAUF,EAAVE,WAEhB,IAAKzgB,EACH,OAAO3W,EAAAA,cAAC63B,EAAY,CAACntB,MAAOA,IAG9B,IAAMotB,GAAmBf,EAAAA,EAAAA,aAAY,WACnC1C,GAAgBD,EAClB,EAAG,CAACA,KAGJ1oB,EAAAA,EAAAA,WAAU,WACJiL,GAASA,EAAMvZ,OACjB8P,SAAS6Q,MAAQ,GAAH7f,OAAMyY,EAAMvZ,KAAI,YAElC,EAAG,CAACuZ,IHuC8B,SAClCohB,EACAC,EACArhB,EACAgP,EACA2K,EACAL,IAEAvkB,EAAAA,EAAAA,WAAU,WACR,IAAMusB,EAAgB,SAACv9B,GACrB,IAAMkE,GAAWR,EAAAA,EAAAA,cAAa1D,GAG1BkE,GACFlE,EAAEqxB,iBAGAntB,IAAapC,EAAAA,KACfu7B,IACSn5B,IAAa7D,EAAAA,KACtBi9B,IACSp5B,IAAanC,EAAAA,kBAAoB6zB,GAAe3K,EACzD2K,EAAyB,QAAb3K,EAAqB,SAAW,OACnChP,IAEL/X,IAAalC,EAAAA,iBACfia,EAAM6a,kBACG5yB,IAAajC,EAAAA,eACtBga,EAAM8a,kBACG7yB,IAAahC,EAAAA,sBACtB+Z,EAAM+a,uBACG9yB,IAAa/B,EAAAA,oBACtB8Z,EAAMgb,uBACG/yB,IAAa9B,EAAAA,aAAemzB,EACrCA,IACSrxB,IAAa7B,EAAAA,eACtB4Z,EAAMuhB,YACGt5B,IAAa5B,EAAAA,YACtB2Z,EAAM0b,aACGzzB,IAAa3B,EAAAA,oBACtB0Z,EAAM2b,mBACG1zB,IAAa1B,EAAAA,iBACtByZ,EAAM4b,gBACG3zB,IAAajD,EAAAA,UACtBgb,EAAMwhB,cAAcxhB,EAAMyhB,cAAe,GAChCx5B,IAAa7C,EAAAA,eACtB4a,EAAMwhB,cAAc,EAAG,GAAG,GACjBv5B,IAAahD,EAAAA,WACtB+a,EAAMwhB,aAAaxhB,EAAMyhB,cAAe,GAC/Bx5B,IAAa5C,EAAAA,gBACtB2a,EAAMwhB,aAAa,EAAG,GAAG,GAChBv5B,IAAa/C,EAAAA,QACtB8a,EAAMwhB,aAAa,GAAIxhB,EAAMyhB,eACpBx5B,IAAa3C,EAAAA,aACtB0a,EAAMwhB,aAAa,GAAI,GAAG,GACjBv5B,IAAa9C,EAAAA,UACtB6a,EAAMwhB,aAAa,EAAGxhB,EAAMyhB,eACnBx5B,IAAa1C,EAAAA,gBACtBya,EAAMwhB,aAAa,EAAG,GAAG,GAG/B,EAGA,OADA1a,OAAO8H,iBAAiB,UAAW0S,GAC5B,kBAAMxa,OAAOgO,oBAAoB,UAAWwM,EAAc,CACnE,EAAG,CAACF,EAAYC,EAAYrhB,EAAOgP,EAAU2K,EAAaL,GAC5D,CGtGEoI,CAAqBP,EAAkBV,EAAYzgB,EAAOgP,EAAU2K,EAAawG,GAEjF,IAAMwB,GAAmBvB,EAAAA,EAAAA,aAAY,SAACj9B,GACpCo6B,EAAgB,CAAEp6B,GAAI09B,mBAAmB19B,IAC3C,EAAG,CAACo6B,IAEEqE,GAAexB,EAAAA,EAAAA,aAAY,SAACj9B,GAChC,GAAIA,EAAI,CACN,IAAM4V,EAAUiH,EAAM6K,SAAS+S,SAAS5a,KAAK,SAACtS,GAAM,OAAKA,EAAEvN,KAAOA,CAAE,GACpE6J,QAAQC,KFpEmB40B,EEoEE9oB,EFnE1B3L,KAAKC,MAAMD,KAAKqB,UAAUozB,KEoE/B,CFrEG,IAA0BA,CEsE/B,EAAG,CAAC7hB,IAEL,OACC3W,EAAAA,cAAAA,EAAAA,SAAA,KACCA,EAAAA,cAAC8vB,EAAO,CACPplB,MAAOA,EACPqlB,UAAWA,EACXC,aAAcsI,EACd3hB,MAAOA,EACPsZ,aAAc6G,EACd5G,OAAQkH,EACRjH,aAAc2H,EACd1H,OAAQA,EACRC,UAAWA,EACX1K,SAAUA,EACV2K,YAAaA,IAEdtwB,EAAAA,cAAC8L,EAAAA,SAAQ,CAACC,SAAU/L,EAAAA,cAAA,WAAK,qBACxBA,EAAAA,cAACszB,EAAK,CACL91B,IAAKuyB,EACL9rB,KAAM0S,EACN8hB,SAAUF,EACV5S,SAAUA,KAGXyO,GACAp0B,EAAAA,cAAC8L,EAAAA,SAAQ,CAACC,SAAU/L,EAAAA,cAAA,WAAK,oBACxBA,EAAAA,cAACD,EAAI,OAKV,EAEM83B,EAAmC,SAAHlV,GAAkB,IAAZjY,EAAKiY,EAALjY,MACpC4kB,EAAQC,EAAU7kB,GAWxB,OATA1K,EAAAA,UAAgB,WAEdkN,SAAS6Q,MAAQ,wCAEbuR,EAAMhxB,OAAS,IACjB4O,SAAS2mB,SAAS6E,KAAO,OAASpJ,EAAM,GAAG9xB,IAE/C,EAAG,CAAC8xB,IAEAA,EAAMhxB,OAAS,EACV0B,EAAAA,cAAAA,EAAAA,SAAA,KAAE,kBAAgBsvB,EAAM,GAAGvR,OAE7B/d,EAAAA,cAAAA,EAAAA,SAAA,KAAE,qBACX,C","sources":["webpack://app/./src/style.css","webpack://app/./src/utils/platform.ts","webpack://app/./src/shortcuts.tsx","webpack://app/./src/style.css?7163","webpack://app/./src/websocket.ts","webpack://app/./src/index.tsx","webpack://app/./src/graph-view/svg-text.ts","webpack://app/./src/graph-view/svg-create.ts","webpack://app/./src/graph-view/intersect.ts","webpack://app/./src/graph-view/shapes.ts","webpack://app/./src/graph-view/layout.ts","webpack://app/./src/graph-view/undo.ts","webpack://app/./src/graph-view/constants.ts","webpack://app/./src/graph-view/graph.ts","webpack://app/./src/graph-view/defs.ts","webpack://app/./src/graph-view/edge-utils.ts","webpack://app/./src/parseModel.ts","webpack://app/./src/hooks.ts","webpack://app/./src/utils.ts","webpack://app/./src/components/Toolbar.tsx","webpack://app/./src/Root.tsx"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `html, body, #root {\n    height: 100%;\n}\n\nbody {\n    font-family: sans-serif;\n    color: #666;\n    margin: 0;\n}\n\n#root {\n    display: flex;\n    flex-direction: column;\n}\n#root > div.graph {\n    flex: 1;\n    overflow: auto;\n    position: relative;\n}\n\n.toolbar {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 4px 10px;\n    background-color: #f0f0f0;\n    border-bottom: 1px solid #cccccc;\n}\n\n.toolbar > div {\n    display: flex;\n    align-items: center;\n}\n\n.toolbar button {\n    padding: 5px 8px;\n    margin: 0 2px;\n    cursor: pointer;\n}\n\n.toolbar button:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n}\n\n/* Drag mode toggle button styles */\n.toolbar button.mode-toggle {\n    position: relative;\n    border: 1px solid #8f9fc9;\n    width: 40px;\n    min-height: 28px;\n    background: linear-gradient(to bottom, #abb8db, #8f9fc9);\n    border-color: #8f9fc9;\n    color: white;\n    box-shadow: 2px 2px 2px rgba(0, 0, 0, .2);\n}\n\n.toolbar button.mode-toggle:hover {\n    background: linear-gradient(to bottom, #bcc7e0, #abb8db);\n    border-color: #abb8db;\n}\n\n.toolbar button.mode-toggle.select-mode:active {\n    background: linear-gradient(to bottom, #8f9fc9, #7a8bb5);\n}\n\n/* Pan mode and active toggle - darker blue */\n.toolbar button.mode-toggle.pan-mode,\n.toolbar button.active-toggle {\n    background: linear-gradient(to bottom, #4a90e2, #357abd);\n    border-color: #2968a3;\n    box-shadow: inset 0 1px 2px rgba(0,0,0,0.2);\n}\n\n.toolbar button.mode-toggle.pan-mode:hover,\n.toolbar button.active-toggle:hover {\n    background: linear-gradient(to bottom, #5ba0f2, #4585c7);\n}\n\n.toolbar button.mode-toggle.pan-mode:active {\n    background: linear-gradient(to bottom, #357abd, #2968a3);\n    box-shadow: inset 0 1px 2px rgba(0,0,0,0.2);\n}\n\n/* Toggle buttons when inactive - gray styling */\n.toolbar button.inactive-toggle {\n    background: #c1c1c1;\n    color: #999;\n    border-color: #c1c1c1;\n    box-shadow: none;\n}\n\n.toolbar button.inactive-toggle:hover {\n    background: #b1b1b1;\n}\n\n.toolbar button.inactive-toggle:active {\n    background: #a1a1a1;\n}\n\n/* Toggle buttons when disabled and not active - gray like other disabled buttons */\n.toolbar button.mode-toggle:disabled:not(.pan-mode):not(.active-toggle),\n.toolbar button.active-toggle:disabled:not(.active-toggle) {\n    background: #c1c1c1;\n    color: #999;\n    border-color: #c1c1c1;\n    box-shadow: none;\n}\n\n/* Ensure Font Awesome icons are sized appropriately if not already handled */\n.toolbar button .fas {\n    font-size: 1em;\n    vertical-align: middle;\n}\n\n/* Zoom percentage display */\n.toolbar button.zoom-display {\n    font-family: 'SF Mono', Monaco, 'Roboto Mono', Consolas, monospace;\n    font-size: 11px;\n    font-weight: 600;\n    min-width: 50px;  /* Wider to prevent size change between 99% and 100% */\n    padding: 6px 8px;\n    text-align: center;\n}\n\n.toolbar-group {\n    display: flex;\n    align-items: center;\n    margin-right: 25px; /* Large space between groups */\n}\n\n.toolbar-group:last-child {\n    margin-right: 0; /* Remove right margin from the last group (help button) */\n}\n\nbutton {\n    border: none;\n    background: linear-gradient(to bottom, #4a90e2, #357abd);\n    border-color: #2968a3;\n    border-radius: 3px;\n    padding: 6px 10px;\n    color: #fff;\n    outline: none;\n    box-shadow: 2px 2px 2px rgba(0, 0, 0, .2);\n    margin-right: 5px;\n    min-width: 32px;\n    min-height: 28px;\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n    font-size: 14px;\n    line-height: 1;\n    font-family: \"Segoe UI\", \"Segoe UI Symbol\", \"Segoe UI Emoji\", system-ui, -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", Arial, sans-serif;\n    position: relative;\n}\n\nbutton:hover {\n    background: linear-gradient(to bottom, #5ba0f2, #4585c7);\n}\n\nbutton:active {\n    background: linear-gradient(to bottom, #357abd, #2968a3);\n}\n\nbutton:last-child {\n    margin-right: 0;\n}\n\n/* Save button when no changes - gray */\nbutton.action {\n    background: #c1c1c1;\n    color: #999;\n}\n\nbutton.action:active {\n    background: #b1b1b1;\n}\n\n/* Save button when there are changes - orange */\nbutton.grp {\n    background: linear-gradient(to bottom, #ee9564, #de7d48);\n    margin-right: 0;\n}\n\nbutton.grp:active {\n    background: #d67540;\n}\n\nselect {\n    border: 1px solid #ccc;\n    background: white;\n    border-radius: 3px;\n    padding: 3px 7px;\n    color: #666;\n    outline: none;\n    margin-right: 5px;\n    font-size: 12px;\n}\n\nselect:disabled {\n    background: #f5f5f5;\n    color: #999;\n}\n\nbutton:disabled {\n    background: #c1c1c1;\n    color: #999;\n}\n\n#root > div > svg {\n    position: absolute;\n    user-select: none;\n}\n\n\n.node.selected .nodeBorder, .edge.selected path, .edge.selected rect {\n    stroke: #29c229;\n}\n.edge .v-dot {\n    fill: transparent;\n    stroke: transparent;\n    stroke-width: 3px;\n    cursor: pointer;\n    transition: stroke 0.15s ease;\n}\n.edge .v-dot:hover {\n    stroke: #999;\n    fill: rgba(153, 153, 153, 0.1);\n}\n.edge .v-dot.selected {\n    stroke: #29c229;\n    fill: rgba(41, 194, 41, 0.1);\n}\n.edge .v-dot.selected:hover {\n    stroke: #29c229;\n    fill: rgba(41, 194, 41, 0.2);\n}\n.edge .v-dot.auto.selected {\n    stroke: #777;\n    fill: rgba(119, 119, 119, 0.1);\n}\n.edge .v-dot.auto.selected:hover {\n    stroke: #777;\n    fill: rgba(119, 119, 119, 0.2);\n}\ncircle#prj {\n    fill: none;\n    stroke: #777;\n}\n\n.nodeShadow {\n    fill: none;\n    stroke-width: 4px;\n    stroke: rgba(0, 0, 0, 0.13);\n}\n\ng.node {\n    user-select: none;\n    cursor: default;\n}\n\ng.node text {\n    pointer-events: none;\n}\n\n.icon {\n    fill: #aaa;\n    stroke: #fff;\n}\n#icon-cube {\n    fill: #aaa;\n}\n\n/* Ensure all button icons are uncolored */\nbutton .icon,\nbutton svg,\nbutton path {\n    fill: currentColor !important;\n    stroke: none !important;\n}\n\n/* Font Awesome icon styling in buttons */\nbutton i {\n    font-size: 12px;\n    color: inherit;\n}\n\nrect.elastic {\n    pointer-events: none;\n    stroke: none;\n    fill: #3bd8281f;\n    display: none;\n}\nrect.elastic.on {\n    display: block;\n}\n\n.popover {\n    position: absolute;\n    top: 50px;\n    bottom: 10px;\n    overflow: auto;\n    right: 10px;\n    background: ghostwhite;\n    padding: 30px;\n    box-shadow: 3px 3px 5px rgba(0,0,0, .2);\n    border: solid 1px #eee;\n}\n\n.popover th {\n    text-align: left;\n    padding: 20px 0px 10px;\n}\n.popover td {\n    padding-right: 20px;\n    font-size: 14px;\n}\n\n/* Simple tooltip system with smart positioning */\n[data-tooltip] {\n    position: relative;\n}\n\n[data-tooltip]:hover::after {\n    content: attr(data-tooltip);\n    position: absolute;\n    top: 100%;\n    left: 50%;\n    transform: translateX(-50%);\n    background: rgba(0, 0, 0, 0.9);\n    color: white;\n    padding: 6px 12px;\n    border-radius: 4px;\n    font-size: 12px !important;\n    font-family: sans-serif !important;\n    font-weight: normal !important;\n    white-space: nowrap;\n    z-index: 1000;\n    pointer-events: none;\n    margin-top: 5px;\n    animation: tooltip-appear 0.1s ease-out;\n    min-width: 120px;\n    max-width: calc(100vw - 20px);\n    box-sizing: border-box;\n}\n\n[data-tooltip]:hover::before {\n    content: '';\n    position: absolute;\n    top: 100%;\n    left: 50%;\n    transform: translateX(-50%);\n    border: 4px solid transparent;\n    border-bottom-color: rgba(0, 0, 0, 0.9);\n    z-index: 1000;\n    pointer-events: none;\n    margin-top: 1px;\n    animation: tooltip-appear 0.1s ease-out;\n}\n\n/* Special handling for rightmost elements that might overflow */\n.toolbar-group:nth-last-child(-n+2) button[data-tooltip]:hover::after {\n    /* Apply to last 2 toolbar groups (save and help buttons) */\n    left: auto;\n    right: 0;\n    transform: none;\n}\n\n.toolbar-group:nth-last-child(-n+2) button[data-tooltip]:hover::before {\n    /* Apply to last 2 toolbar groups (save and help buttons) */\n    left: auto;\n    right: 16px;\n    transform: none;\n}\n\n@keyframes tooltip-appear {\n    from {\n        opacity: 0;\n        transform: translateX(-50%) translateY(-5px);\n    }\n    to {\n        opacity: 1;\n        transform: translateX(-50%) translateY(0);\n    }\n}\n\nselect {\n    position: relative;\n}`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/style.css\"],\"names\":[],\"mappings\":\"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\",\"sourcesContent\":[\"html, body, #root {\\n    height: 100%;\\n}\\n\\nbody {\\n    font-family: sans-serif;\\n    color: #666;\\n    margin: 0;\\n}\\n\\n#root {\\n    display: flex;\\n    flex-direction: column;\\n}\\n#root > div.graph {\\n    flex: 1;\\n    overflow: auto;\\n    position: relative;\\n}\\n\\n.toolbar {\\n    display: flex;\\n    justify-content: space-between;\\n    align-items: center;\\n    padding: 4px 10px;\\n    background-color: #f0f0f0;\\n    border-bottom: 1px solid #cccccc;\\n}\\n\\n.toolbar > div {\\n    display: flex;\\n    align-items: center;\\n}\\n\\n.toolbar button {\\n    padding: 5px 8px;\\n    margin: 0 2px;\\n    cursor: pointer;\\n}\\n\\n.toolbar button:disabled {\\n    opacity: 0.5;\\n    cursor: not-allowed;\\n}\\n\\n/* Drag mode toggle button styles */\\n.toolbar button.mode-toggle {\\n    position: relative;\\n    border: 1px solid #8f9fc9;\\n    width: 40px;\\n    min-height: 28px;\\n    background: linear-gradient(to bottom, #abb8db, #8f9fc9);\\n    border-color: #8f9fc9;\\n    color: white;\\n    box-shadow: 2px 2px 2px rgba(0, 0, 0, .2);\\n}\\n\\n.toolbar button.mode-toggle:hover {\\n    background: linear-gradient(to bottom, #bcc7e0, #abb8db);\\n    border-color: #abb8db;\\n}\\n\\n.toolbar button.mode-toggle.select-mode:active {\\n    background: linear-gradient(to bottom, #8f9fc9, #7a8bb5);\\n}\\n\\n/* Pan mode and active toggle - darker blue */\\n.toolbar button.mode-toggle.pan-mode,\\n.toolbar button.active-toggle {\\n    background: linear-gradient(to bottom, #4a90e2, #357abd);\\n    border-color: #2968a3;\\n    box-shadow: inset 0 1px 2px rgba(0,0,0,0.2);\\n}\\n\\n.toolbar button.mode-toggle.pan-mode:hover,\\n.toolbar button.active-toggle:hover {\\n    background: linear-gradient(to bottom, #5ba0f2, #4585c7);\\n}\\n\\n.toolbar button.mode-toggle.pan-mode:active {\\n    background: linear-gradient(to bottom, #357abd, #2968a3);\\n    box-shadow: inset 0 1px 2px rgba(0,0,0,0.2);\\n}\\n\\n/* Toggle buttons when inactive - gray styling */\\n.toolbar button.inactive-toggle {\\n    background: #c1c1c1;\\n    color: #999;\\n    border-color: #c1c1c1;\\n    box-shadow: none;\\n}\\n\\n.toolbar button.inactive-toggle:hover {\\n    background: #b1b1b1;\\n}\\n\\n.toolbar button.inactive-toggle:active {\\n    background: #a1a1a1;\\n}\\n\\n/* Toggle buttons when disabled and not active - gray like other disabled buttons */\\n.toolbar button.mode-toggle:disabled:not(.pan-mode):not(.active-toggle),\\n.toolbar button.active-toggle:disabled:not(.active-toggle) {\\n    background: #c1c1c1;\\n    color: #999;\\n    border-color: #c1c1c1;\\n    box-shadow: none;\\n}\\n\\n/* Ensure Font Awesome icons are sized appropriately if not already handled */\\n.toolbar button .fas {\\n    font-size: 1em;\\n    vertical-align: middle;\\n}\\n\\n/* Zoom percentage display */\\n.toolbar button.zoom-display {\\n    font-family: 'SF Mono', Monaco, 'Roboto Mono', Consolas, monospace;\\n    font-size: 11px;\\n    font-weight: 600;\\n    min-width: 50px;  /* Wider to prevent size change between 99% and 100% */\\n    padding: 6px 8px;\\n    text-align: center;\\n}\\n\\n.toolbar-group {\\n    display: flex;\\n    align-items: center;\\n    margin-right: 25px; /* Large space between groups */\\n}\\n\\n.toolbar-group:last-child {\\n    margin-right: 0; /* Remove right margin from the last group (help button) */\\n}\\n\\nbutton {\\n    border: none;\\n    background: linear-gradient(to bottom, #4a90e2, #357abd);\\n    border-color: #2968a3;\\n    border-radius: 3px;\\n    padding: 6px 10px;\\n    color: #fff;\\n    outline: none;\\n    box-shadow: 2px 2px 2px rgba(0, 0, 0, .2);\\n    margin-right: 5px;\\n    min-width: 32px;\\n    min-height: 28px;\\n    display: inline-flex;\\n    align-items: center;\\n    justify-content: center;\\n    font-size: 14px;\\n    line-height: 1;\\n    font-family: \\\"Segoe UI\\\", \\\"Segoe UI Symbol\\\", \\\"Segoe UI Emoji\\\", system-ui, -apple-system, BlinkMacSystemFont, \\\"Helvetica Neue\\\", Arial, sans-serif;\\n    position: relative;\\n}\\n\\nbutton:hover {\\n    background: linear-gradient(to bottom, #5ba0f2, #4585c7);\\n}\\n\\nbutton:active {\\n    background: linear-gradient(to bottom, #357abd, #2968a3);\\n}\\n\\nbutton:last-child {\\n    margin-right: 0;\\n}\\n\\n/* Save button when no changes - gray */\\nbutton.action {\\n    background: #c1c1c1;\\n    color: #999;\\n}\\n\\nbutton.action:active {\\n    background: #b1b1b1;\\n}\\n\\n/* Save button when there are changes - orange */\\nbutton.grp {\\n    background: linear-gradient(to bottom, #ee9564, #de7d48);\\n    margin-right: 0;\\n}\\n\\nbutton.grp:active {\\n    background: #d67540;\\n}\\n\\nselect {\\n    border: 1px solid #ccc;\\n    background: white;\\n    border-radius: 3px;\\n    padding: 3px 7px;\\n    color: #666;\\n    outline: none;\\n    margin-right: 5px;\\n    font-size: 12px;\\n}\\n\\nselect:disabled {\\n    background: #f5f5f5;\\n    color: #999;\\n}\\n\\nbutton:disabled {\\n    background: #c1c1c1;\\n    color: #999;\\n}\\n\\n#root > div > svg {\\n    position: absolute;\\n    user-select: none;\\n}\\n\\n\\n.node.selected .nodeBorder, .edge.selected path, .edge.selected rect {\\n    stroke: #29c229;\\n}\\n.edge .v-dot {\\n    fill: transparent;\\n    stroke: transparent;\\n    stroke-width: 3px;\\n    cursor: pointer;\\n    transition: stroke 0.15s ease;\\n}\\n.edge .v-dot:hover {\\n    stroke: #999;\\n    fill: rgba(153, 153, 153, 0.1);\\n}\\n.edge .v-dot.selected {\\n    stroke: #29c229;\\n    fill: rgba(41, 194, 41, 0.1);\\n}\\n.edge .v-dot.selected:hover {\\n    stroke: #29c229;\\n    fill: rgba(41, 194, 41, 0.2);\\n}\\n.edge .v-dot.auto.selected {\\n    stroke: #777;\\n    fill: rgba(119, 119, 119, 0.1);\\n}\\n.edge .v-dot.auto.selected:hover {\\n    stroke: #777;\\n    fill: rgba(119, 119, 119, 0.2);\\n}\\ncircle#prj {\\n    fill: none;\\n    stroke: #777;\\n}\\n\\n.nodeShadow {\\n    fill: none;\\n    stroke-width: 4px;\\n    stroke: rgba(0, 0, 0, 0.13);\\n}\\n\\ng.node {\\n    user-select: none;\\n    cursor: default;\\n}\\n\\ng.node text {\\n    pointer-events: none;\\n}\\n\\n.icon {\\n    fill: #aaa;\\n    stroke: #fff;\\n}\\n#icon-cube {\\n    fill: #aaa;\\n}\\n\\n/* Ensure all button icons are uncolored */\\nbutton .icon,\\nbutton svg,\\nbutton path {\\n    fill: currentColor !important;\\n    stroke: none !important;\\n}\\n\\n/* Font Awesome icon styling in buttons */\\nbutton i {\\n    font-size: 12px;\\n    color: inherit;\\n}\\n\\nrect.elastic {\\n    pointer-events: none;\\n    stroke: none;\\n    fill: #3bd8281f;\\n    display: none;\\n}\\nrect.elastic.on {\\n    display: block;\\n}\\n\\n.popover {\\n    position: absolute;\\n    top: 50px;\\n    bottom: 10px;\\n    overflow: auto;\\n    right: 10px;\\n    background: ghostwhite;\\n    padding: 30px;\\n    box-shadow: 3px 3px 5px rgba(0,0,0, .2);\\n    border: solid 1px #eee;\\n}\\n\\n.popover th {\\n    text-align: left;\\n    padding: 20px 0px 10px;\\n}\\n.popover td {\\n    padding-right: 20px;\\n    font-size: 14px;\\n}\\n\\n/* Simple tooltip system with smart positioning */\\n[data-tooltip] {\\n    position: relative;\\n}\\n\\n[data-tooltip]:hover::after {\\n    content: attr(data-tooltip);\\n    position: absolute;\\n    top: 100%;\\n    left: 50%;\\n    transform: translateX(-50%);\\n    background: rgba(0, 0, 0, 0.9);\\n    color: white;\\n    padding: 6px 12px;\\n    border-radius: 4px;\\n    font-size: 12px !important;\\n    font-family: sans-serif !important;\\n    font-weight: normal !important;\\n    white-space: nowrap;\\n    z-index: 1000;\\n    pointer-events: none;\\n    margin-top: 5px;\\n    animation: tooltip-appear 0.1s ease-out;\\n    min-width: 120px;\\n    max-width: calc(100vw - 20px);\\n    box-sizing: border-box;\\n}\\n\\n[data-tooltip]:hover::before {\\n    content: '';\\n    position: absolute;\\n    top: 100%;\\n    left: 50%;\\n    transform: translateX(-50%);\\n    border: 4px solid transparent;\\n    border-bottom-color: rgba(0, 0, 0, 0.9);\\n    z-index: 1000;\\n    pointer-events: none;\\n    margin-top: 1px;\\n    animation: tooltip-appear 0.1s ease-out;\\n}\\n\\n/* Special handling for rightmost elements that might overflow */\\n.toolbar-group:nth-last-child(-n+2) button[data-tooltip]:hover::after {\\n    /* Apply to last 2 toolbar groups (save and help buttons) */\\n    left: auto;\\n    right: 0;\\n    transform: none;\\n}\\n\\n.toolbar-group:nth-last-child(-n+2) button[data-tooltip]:hover::before {\\n    /* Apply to last 2 toolbar groups (save and help buttons) */\\n    left: auto;\\n    right: 16px;\\n    transform: none;\\n}\\n\\n@keyframes tooltip-appear {\\n    from {\\n        opacity: 0;\\n        transform: translateX(-50%) translateY(-5px);\\n    }\\n    to {\\n        opacity: 1;\\n        transform: translateX(-50%) translateY(0);\\n    }\\n}\\n\\nselect {\\n    position: relative;\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","/**\n * Robust platform detection utilities\n */\n\n/**\n * Detects if the user is on a Mac platform using multiple detection methods\n * for maximum compatibility across browsers and future-proofing.\n */\nexport const isMac = (): boolean => {\n  if (typeof navigator === 'undefined') return false;\n  \n  // Method 1: Check userAgentData (modern browsers, most reliable)\n  if ('userAgentData' in navigator && (navigator as any).userAgentData) {\n    const platform = (navigator as any).userAgentData.platform;\n    if (platform && platform.toLowerCase().includes('mac')) {\n      return true;\n    }\n  }\n  \n  // Method 2: Check userAgent string (widely supported)\n  const userAgent = navigator.userAgent.toLowerCase();\n  if (userAgent.includes('mac os') || userAgent.includes('macintosh')) {\n    return true;\n  }\n  \n  // Method 3: Check platform (fallback, deprecated but still widely supported)\n  if (navigator.platform) {\n    const platform = navigator.platform.toLowerCase();\n    if (platform.includes('mac') || platform.includes('darwin')) {\n      return true;\n    }\n  }\n  \n  // Method 4: Check for Mac-specific features as additional validation\n  try {\n    const testEvent = new KeyboardEvent('keydown', { metaKey: true });\n    if (testEvent.metaKey !== undefined) {\n      // Additional heuristic: Mac typically has different key layouts\n      return /mac|darwin|os x/i.test(navigator.userAgent);\n    }\n  } catch (e) {\n    // Ignore errors in older browsers\n  }\n  \n  return false;\n};\n\n/**\n * Gets the appropriate modifier key name for the current platform\n */\nexport const getModifierKeyName = (): string => {\n  return isMac() ? 'Cmd' : 'Ctrl';\n};\n\n/**\n * Gets the appropriate modifier key property for keyboard events\n */\nexport const getModifierKeyProperty = (event: KeyboardEvent): boolean => {\n  return isMac() ? event.metaKey : event.ctrlKey;\n};\n\n/**\n * Gets the appropriate Alt key name for the current platform\n */\nexport const getAltKeyName = (): string => {\n  return isMac() ? 'Option' : 'Alt';\n}; ","import React, {FC} from \"react\";\nimport { isMac, getModifierKeyName, getModifierKeyProperty } from './utils/platform';\n\ninterface Combination {\n\tctrl?: boolean;\n\tshift?: boolean;\n\talt?: boolean;\n\twheel?: boolean\n\tkey?: string;\n\tclick?: boolean;\n}\n\ninterface Shortcut {\n\tid: string,\n\thelp: string,\n\tcombinations: Combination[]\n}\n\nexport const SAVE = 'save'\n\nexport const UNDO = 'undo'\nexport const REDO = 'redo'\nexport const ADD_VERTEX = 'add-vertex'\nexport const ADD_LABEL_VERTEX = 'add-label-vertex'\nexport const DEL_VERTEX = 'del-vertex'\n\nexport const ZOOM_IN = 'zoom-in'\nexport const ZOOM_OUT = 'zoom-out'\nexport const ZOOM_FIT = 'zoom-fit'\nexport const ZOOM_100 = 'zoom-100'\n\nexport const SELECT_ALL = 'select-all'\nexport const DESELECT = 'deselect'\n\nexport const MOVE_LEFT = 'move-left'\nexport const MOVE_RIGHT = 'move-right'\nexport const MOVE_UP = 'move-up'\nexport const MOVE_DOWN = 'move-down'\nexport const MOVE_LEFT_FINE = 'move-left-fine'\nexport const MOVE_RIGHT_FINE = 'move-right-fine'\nexport const MOVE_UP_FINE = 'move-up-fine'\nexport const MOVE_DOWN_FINE = 'move-down-fine'\n\nexport const PAN_VIEW = 'pan-view'\nexport const SELECT_ELEMENT = 'select-element'\nexport const MULTI_SELECT = 'multi-select'\nexport const BOX_SELECT = 'box-select'\nexport const MOVE_ELEMENTS = 'move-elements'\n\nexport const HELP = 'help'\n\n// New shortcuts for toolbar buttons\nexport const TOGGLE_DRAG_MODE = 'toggle_drag_mode'\nexport const ALIGN_HORIZONTAL = 'align_horizontal'\nexport const ALIGN_VERTICAL = 'align_vertical'\nexport const DISTRIBUTE_HORIZONTAL = 'distribute_horizontal'\nexport const DISTRIBUTE_VERTICAL = 'distribute_vertical'\nexport const AUTO_LAYOUT = 'auto_layout'\nexport const RESET_POSITION = 'reset_position'\nexport const TOGGLE_GRID = 'toggle_grid'\nexport const TOGGLE_SNAP_TO_GRID = 'toggle_snap_to_grid'\nexport const SNAP_ALL_TO_GRID = 'snap_all_to_grid'\n\nconst shortcuts: { name: string; list: Shortcut[] }[] = [\n\t{\n\t\tname: 'Help',\n\t\tlist: [\n\t\t\t{\n\t\t\t\tid: HELP,\n\t\t\t\thelp: 'Show/hide this help',\n\t\t\t\tcombinations: [\n\t\t\t\t\t{key: '?', shift: true},\n\t\t\t\t\t{key: 'F1', shift: true}\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: 'File',\n\t\tlist: [\n\t\t\t{\n\t\t\t\tid: SAVE,\n\t\t\t\thelp: 'Save',\n\t\t\t\tcombinations: [{key: 's', ctrl: true}]\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: 'History',\n\t\tlist: [\n\t\t\t{\n\t\t\t\tid: UNDO,\n\t\t\t\thelp: 'Undo',\n\t\t\t\tcombinations: [\n\t\t\t\t\t{ctrl: true, key: 'z'},\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: REDO,\n\t\t\t\thelp: 'Redo',\n\t\t\t\tcombinations: [\n\t\t\t\t\t{ctrl: true, shift: true, key: 'z'},\n\t\t\t\t\t{ctrl: true, key: 'y'},\n\t\t\t\t]\n\t\t\t}\n\n\t\t],\n\t},\n\t{\n\t\tname: 'Relationship editing',\n\t\tlist: [\n\t\t\t{\n\t\t\t\tid: ADD_VERTEX,\n\t\t\t\thelp: 'Add relationship vertex',\n\t\t\t\tcombinations: [\n\t\t\t\t\t{alt: true, click: true},\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: ADD_LABEL_VERTEX,\n\t\t\t\thelp: 'Add label anchor relationship vertex',\n\t\t\t\tcombinations: [\n\t\t\t\t\t{alt: true, shift: true, click: true},\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: DEL_VERTEX,\n\t\t\t\thelp: 'Remove relationship vertex',\n\t\t\t\tcombinations: [\n\t\t\t\t\t{key: 'DELETE'},\n\t\t\t\t\t{key: 'BACKSPACE'}\n\t\t\t\t]\n\t\t\t},\n\t\t]\n\t},\n\t{\n\t\tname: 'Zoom',\n\t\tlist: [\n\t\t\t{\n\t\t\t\tid: ZOOM_IN,\n\t\t\t\thelp: 'Zoom in',\n\t\t\t\tcombinations: [\n\t\t\t\t\t{ctrl: true, key: '='}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: ZOOM_OUT,\n\t\t\t\thelp: 'Zoom out',\n\t\t\t\tcombinations: [\n\t\t\t\t\t{ctrl: true, key: '-'}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: ZOOM_FIT,\n\t\t\t\thelp: 'Zoom - fit',\n\t\t\t\tcombinations: [{ctrl: true, key: '9'}]\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: ZOOM_100,\n\t\t\t\thelp: 'Zoom 100%',\n\t\t\t\tcombinations: [{ctrl: true, key: '0'}]\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: 'wheel_zoom',\n\t\t\t\thelp: 'Zoom in/out with mouse wheel',\n\t\t\t\tcombinations: [{wheel: true}]\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: 'Mouse Interactions',\n\t\tlist: [\n\t\t\t{\n\t\t\t\tid: PAN_VIEW,\n\t\t\t\thelp: 'Pan view (drag empty space)',\n\t\t\t\tcombinations: [{click: true}]\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: SELECT_ELEMENT,\n\t\t\t\thelp: 'Select element',\n\t\t\t\tcombinations: [{click: true}]\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: MULTI_SELECT,\n\t\t\t\thelp: 'Add/remove from selection',\n\t\t\t\tcombinations: [{shift: true, click: true}]\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: BOX_SELECT,\n\t\t\t\thelp: 'Box selection (drag empty space)',\n\t\t\t\tcombinations: [{shift: true, click: true}]\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: MOVE_ELEMENTS,\n\t\t\t\thelp: 'Move selected elements',\n\t\t\t\tcombinations: [{click: true}]\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: 'Select',\n\t\tlist: [\n\t\t\t{\n\t\t\t\tid: SELECT_ALL,\n\t\t\t\thelp: 'Select All',\n\t\t\t\tcombinations: [{ctrl: true, key: 'a'}]\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: DESELECT,\n\t\t\t\thelp: 'Deselect',\n\t\t\t\tcombinations: [{key: 'ESC'}]\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: 'Move',\n\t\tlist: [\n\t\t\t{\n\t\t\t\tid: MOVE_UP,\n\t\t\t\thelp: 'Move up (grid increment)',\n\t\t\t\tcombinations: [{key: 'UP'}]\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: MOVE_UP_FINE,\n\t\t\t\thelp: 'Move up (1 pixel)',\n\t\t\t\tcombinations: [{key: 'UP', shift: true}]\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: MOVE_RIGHT,\n\t\t\t\thelp: 'Move right (grid increment)',\n\t\t\t\tcombinations: [{key: 'RIGHT'}]\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: MOVE_RIGHT_FINE,\n\t\t\t\thelp: 'Move right (1 pixel)',\n\t\t\t\tcombinations: [{key: 'RIGHT', shift: true}]\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: MOVE_DOWN,\n\t\t\t\thelp: 'Move down (grid increment)',\n\t\t\t\tcombinations: [{key: 'DOWN'}]\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: MOVE_DOWN_FINE,\n\t\t\t\thelp: 'Move down (1 pixel)',\n\t\t\t\tcombinations: [{key: 'DOWN', shift: true}]\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: MOVE_LEFT,\n\t\t\t\thelp: 'Move left (grid increment)',\n\t\t\t\tcombinations: [{key: 'LEFT'}]\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: MOVE_LEFT_FINE,\n\t\t\t\thelp: 'Move left (1 pixel)',\n\t\t\t\tcombinations: [{key: 'LEFT', shift: true}]\n\t\t\t},\n\t\t]\n\t},\n\t\t\t{\n\t\t\tname: 'View',\n\t\t\tlist: [\n\t\t\t\t{\n\t\t\t\t\tid: TOGGLE_DRAG_MODE,\n\t\t\t\t\thelp: 'Toggle between pan and select mode',\n\t\t\t\t\tcombinations: [{key: 't'}]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: RESET_POSITION,\n\t\t\t\t\thelp: 'Reset position and view',\n\t\t\t\t\tcombinations: [{key: 'Home', ctrl: true}]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t{\n\t\tname: 'Alignment',\n\t\tlist: [\n\t\t\t{\n\t\t\t\tid: ALIGN_HORIZONTAL,\n\t\t\t\thelp: 'Align selected elements horizontally',\n\t\t\t\tcombinations: [{key: 'h', ctrl: true, shift: true}]\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: ALIGN_VERTICAL,\n\t\t\t\thelp: 'Align selected elements vertically',\n\t\t\t\tcombinations: [{key: 'a', ctrl: true, shift: true}]\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: DISTRIBUTE_HORIZONTAL,\n\t\t\t\thelp: 'Distribute selected elements horizontally',\n\t\t\t\tcombinations: [{key: 'h', ctrl: true, alt: true}]\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: DISTRIBUTE_VERTICAL,\n\t\t\t\thelp: 'Distribute selected elements vertically',\n\t\t\t\tcombinations: [{key: 'v', ctrl: true, alt: true}]\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: 'Layout',\n\t\tlist: [\n\t\t\t{\n\t\t\t\tid: AUTO_LAYOUT,\n\t\t\t\thelp: 'Auto layout all elements',\n\t\t\t\tcombinations: [{key: 'l', ctrl: true}]\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: 'Grid',\n\t\tlist: [\n\t\t\t{\n\t\t\t\tid: TOGGLE_GRID,\n\t\t\t\thelp: 'Toggle grid visibility',\n\t\t\t\tcombinations: [{key: 'g', ctrl: true}]\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: TOGGLE_SNAP_TO_GRID,\n\t\t\t\thelp: 'Toggle snap to grid',\n\t\t\t\tcombinations: [{key: 'g', ctrl: true, shift: true}]\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: SNAP_ALL_TO_GRID,\n\t\t\t\thelp: 'Snap all elements to grid',\n\t\t\t\tcombinations: [{key: 'g', ctrl: true, alt: true}]\n\t\t\t}\n\t\t]\n\t}\n]\n\nconst shortcutMap = shortcuts\n\t.reduce((lst, s) => lst.concat(s.list), [] as Shortcut[])\n\t.reduce<{ [k: string]: Shortcut }>((map, s) => {\n\t\tmap[s.id] = s;\n\t\treturn map\n\t}, {})\n\nconst checkKey = (e: KeyboardEvent | MouseEvent, shortcut: Shortcut, click: boolean, wheel: boolean) => {\n\treturn shortcut.combinations.some(c => {\n\t\tif (Boolean(c.shift) != e.shiftKey) return false\n\t\t// Use platform-appropriate modifier key\n\t\tif (c.ctrl) {\n\t\t\tconst modifierKey = getModifierKeyProperty(e as KeyboardEvent);\n\t\t\tif (!modifierKey) return false;\n\t\t}\n\t\tif (Boolean(c.alt) != e.altKey) return false\n\t\tif (click) return c.click\n\t\tif (wheel) return c.wheel\n\t\tif (c.key) {\n\t\t\tconst ke = e as KeyboardEvent\n\t\t\tif (c.key == 'DELETE') return ke.key == 'Delete'\n\t\t\tif (c.key == 'BACKSPACE') return ke.key == 'Backspace'\n\t\t\tif (c.key == 'ESC') return ke.key == 'Escape'\n\t\t\tif (c.key == 'UP') return ke.key == 'ArrowUp'\n\t\t\tif (c.key == 'DOWN') return ke.key == 'ArrowDown'\n\t\t\tif (c.key == 'LEFT') return ke.key == 'ArrowLeft'\n\t\t\tif (c.key == 'RIGHT') return ke.key == 'ArrowRight'\n\t\t\treturn c.key && ke.key && c.key.toLowerCase() == ke.key.toLowerCase()\n\t\t}\n\t\treturn false\n\t})\n}\n\nexport const findShortcut = (e: KeyboardEvent | MouseEvent, click = false, wheel = false) => {\n\t// Find all matching shortcuts\n\tconst matches = Object.keys(shortcutMap).filter(k => checkKey(e, shortcutMap[k], click, wheel))\n\t\n\tif (matches.length === 0) return undefined\n\tif (matches.length === 1) return matches[0]\n\t\n\t// If multiple matches, prefer the one with more specific modifiers\n\t// Sort by number of modifiers (shift, ctrl, alt) in descending order\n\tconst sortedMatches = matches.sort((a, b) => {\n\t\tconst aShortcut = shortcutMap[a]\n\t\tconst bShortcut = shortcutMap[b]\n\t\t\n\t\tconst aModifiers = aShortcut.combinations[0]\n\t\tconst bModifiers = bShortcut.combinations[0]\n\t\t\n\t\tconst aCount = (aModifiers.shift ? 1 : 0) + (aModifiers.ctrl ? 1 : 0) + (aModifiers.alt ? 1 : 0)\n\t\tconst bCount = (bModifiers.shift ? 1 : 0) + (bModifiers.ctrl ? 1 : 0) + (bModifiers.alt ? 1 : 0)\n\t\t\n\t\treturn bCount - aCount // Descending order (more modifiers first)\n\t})\n\t\n\treturn sortedMatches[0]\n}\n\nconst comboText = (c: Combination) => {\n\treturn [\n\t\tc.ctrl && getModifierKeyName().toUpperCase(),\n\t\tc.shift && 'SHIFT',\n\t\tc.alt && 'ALT',\n\t\tc.key && (c.key.length > 1 ? c.key : `\"${c.key.toUpperCase()}\"`),\n\t\tc.click && 'CLICK',\n\t\tc.wheel && 'WHEEL'\n\t].filter(Boolean).join(' + ')\n}\n\nexport const Help: FC = () => {\n\treturn <div className=\"popover\">\n\t\t<h1>Shortcuts</h1>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t{\n\t\t\t\tshortcuts.map(section => <>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th colSpan={2}>{section.name}</th>\n\t\t\t\t\t</tr>\n\t\t\t\t\t{section.list.map(item => <tr>\n\t\t\t\t\t\t<td>{item.combinations.map(comboText).join(', ')}</td>\n\t\t\t\t\t\t<td>{item.help}</td>\n\t\t\t\t\t</tr>)}\n\t\t\t\t</>)\n\t\t\t}\n\t\t\t</tbody>\n\t\t</table>\n\t</div>\n}\n","\n      import API from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../node_modules/css-loader/dist/cjs.js!./style.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../node_modules/css-loader/dist/cjs.js!./style.css\";\n       export default content && content.locals ? content.locals : undefined;\n","interface LiveReloadOptions {\n\tminDelay: number;\n\tmaxDelay: number;\n\thandshakeTimeout: number;\n}\n\ninterface LiveReloadMessage {\n\tcommand: string;\n\tprotocols?: string[];\n\tver?: string;\n\tpath?: string;\n}\n\nclass Timer {\n\tprivate readonly callback: () => void;\n\tprivate readonly handler: () => void;\n\tprivate running: boolean = false;\n\tprivate timeoutId: ReturnType<typeof setTimeout> | null = null;\n\n\tconstructor(callback: () => void) {\n\t\tthis.callback = callback;\n\t\tthis.handler = () => {\n\t\t\tthis.running = false;\n\t\t\tthis.timeoutId = null;\n\t\t\tthis.callback();\n\t\t};\n\t}\n\n\tstart(timeout: number): void {\n\t\tif (this.running) {\n\t\t\tthis.stop();\n\t\t}\n\t\tthis.timeoutId = setTimeout(this.handler, timeout);\n\t\tthis.running = true;\n\t}\n\n\tstop(): void {\n\t\tif (this.running && this.timeoutId !== null) {\n\t\t\tclearTimeout(this.timeoutId);\n\t\t\tthis.running = false;\n\t\t\tthis.timeoutId = null;\n\t\t}\n\t}\n\n\tisRunning(): boolean {\n\t\treturn this.running;\n\t}\n}\n\n/**\n * RefreshConnector implements the livereload protocol to listen for file changes via WebSocket\n */\nexport class RefreshConnector {\n\tprivate static readonly DEFAULT_OPTIONS: LiveReloadOptions = {\n\t\tminDelay: 1000,\n\t\tmaxDelay: 60000,\n\t\thandshakeTimeout: 5000\n\t};\n\n\tprivate static readonly LIVERELOAD_PROTOCOLS = [\n\t\t'http://livereload.com/protocols/official-9',\n\t\t'http://livereload.com/protocols/2.x-remote-control'\n\t];\n\n\tprivate readonly uri: string;\n\tprivate readonly options: LiveReloadOptions;\n\tprivate readonly fileChangeHandler: (path: string) => void;\n\t\n\tprivate socket: WebSocket | null = null;\n\tprivate nextDelay: number;\n\tprivate connectionDesired: boolean = false;\n\tprivate disconnectionReason: string = '';\n\t\n\tprivate readonly handshakeTimeout: Timer;\n\tprivate readonly reconnectTimer: Timer;\n\n\tconstructor(fileChangeHandler: (file: string) => void, options?: Partial<LiveReloadOptions>) {\n\t\tthis.fileChangeHandler = fileChangeHandler;\n\t\tthis.options = { ...RefreshConnector.DEFAULT_OPTIONS, ...options };\n\t\tthis.uri = 'ws://localhost:35729/livereload';\n\t\tthis.nextDelay = this.options.minDelay;\n\n\t\tthis.handshakeTimeout = new Timer(() => this.handleHandshakeTimeout());\n\t\tthis.reconnectTimer = new Timer(() => this.attemptReconnection());\n\t}\n\n\tconnect(): void {\n\t\tthis.connectionDesired = true;\n\n\t\tif (this.isSocketConnected()) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.prepareForConnection();\n\t\tthis.createWebSocket();\n\t}\n\n\tdisconnect(): void {\n\t\tthis.connectionDesired = false;\n\t\tthis.reconnectTimer.stop();\n\n\t\tif (this.isSocketConnected()) {\n\t\t\tthis.disconnectionReason = 'manual';\n\t\t\tthis.socket!.close();\n\t\t}\n\t}\n\n\tprivate isSocketConnected(): boolean {\n\t\treturn this.socket !== null && this.socket.readyState === WebSocket.OPEN;\n\t}\n\n\tprivate prepareForConnection(): void {\n\t\tthis.reconnectTimer.stop();\n\t\tthis.disconnectionReason = 'cannot-connect';\n\t}\n\n\tprivate createWebSocket(): void {\n\t\tthis.socket = new WebSocket(this.uri);\n\t\tthis.socket.onopen = () => this.handleOpen();\n\t\tthis.socket.onclose = () => this.handleClose();\n\t\tthis.socket.onmessage = (event) => this.handleMessage(event);\n\t\tthis.socket.onerror = () => this.handleError();\n\t}\n\n\tprivate handleOpen(): void {\n\t\tthis.disconnectionReason = 'handshake-failed';\n\t\tthis.startHandshake();\n\t}\n\n\tprivate handleClose(): void {\n\t\tconsole.log(`WebSocket disconnected: ${this.disconnectionReason}. Retry in ${this.nextDelay}ms`);\n\t\tthis.scheduleReconnection();\n\t}\n\n\tprivate handleMessage(event: MessageEvent): void {\n\t\ttry {\n\t\t\tconst message: LiveReloadMessage = JSON.parse(event.data);\n\t\t\tthis.processMessage(message);\n\t\t} catch (error) {\n\t\t\tconsole.error('Failed to parse WebSocket message:', error);\n\t\t}\n\t}\n\n\tprivate handleError(): void {\n\t\t// Error handling is done in onclose\n\t}\n\n\tprivate processMessage(message: LiveReloadMessage): void {\n\t\tswitch (message.command) {\n\t\t\tcase 'hello':\n\t\t\t\tthis.handleHelloMessage();\n\t\t\t\tbreak;\n\t\t\tcase 'reload':\n\t\t\t\tthis.handleReloadMessage(message);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tconsole.log('Unknown WebSocket message received:', message);\n\t\t}\n\t}\n\n\tprivate handleHelloMessage(): void {\n\t\tthis.handshakeTimeout.stop();\n\t\tthis.nextDelay = this.options.minDelay;\n\t}\n\n\tprivate handleReloadMessage(message: LiveReloadMessage): void {\n\t\t// The livereload server closes connection after sending reload\n\t\t// We must reconnect\n\t\tthis.reconnectTimer.stop();\n\t\tthis.connect();\n\n\t\tif (message.path) {\n\t\t\tthis.fileChangeHandler(message.path);\n\t\t}\n\t}\n\n\tprivate startHandshake(): void {\n\t\tconst helloMessage: LiveReloadMessage = {\n\t\t\tcommand: 'hello',\n\t\t\tprotocols: RefreshConnector.LIVERELOAD_PROTOCOLS,\n\t\t\tver: '3.3.1'\n\t\t};\n\t\t\n\t\tthis.sendCommand(helloMessage);\n\t\tthis.handshakeTimeout.start(this.options.handshakeTimeout);\n\t}\n\n\tprivate handleHandshakeTimeout(): void {\n\t\tif (this.isSocketConnected()) {\n\t\t\tthis.disconnectionReason = 'handshake-timeout';\n\t\t\tthis.socket!.close();\n\t\t}\n\t}\n\n\tprivate attemptReconnection(): void {\n\t\tif (this.connectionDesired) {\n\t\t\tthis.connect();\n\t\t}\n\t}\n\n\tprivate scheduleReconnection(): void {\n\t\tif (!this.connectionDesired) {\n\t\t\treturn; // Don't reconnect after manual disconnection\n\t\t}\n\n\t\tif (!this.reconnectTimer.isRunning()) {\n\t\t\tthis.reconnectTimer.start(this.nextDelay);\n\t\t\tthis.nextDelay = Math.min(this.options.maxDelay, this.nextDelay * 2);\n\t\t}\n\t}\n\n\tprivate sendCommand(command: LiveReloadMessage): void {\n\t\tif (this.isSocketConnected()) {\n\t\t\tthis.socket!.send(JSON.stringify(command));\n\t\t}\n\t}\n}","import { createRoot } from 'react-dom/client';\nimport React, { Suspense, lazy, useEffect, useState } from 'react';\nimport { refreshGraph } from \"./Root\";\nimport './style.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { RefreshConnector } from \"./websocket\";\n\nconst Root = lazy(() => import('./Root').then(module => ({ default: module.Root })));\n\ninterface ModelData {\n\tmodel: any;\n\tlayout: any;\n}\n\ninterface AppState {\n\tdata: ModelData | null;\n\terror: string | null;\n\tloading: boolean;\n}\n\nconst App: React.FC = () => {\n\tconst [state, setState] = useState<AppState>({\n\t\tdata: null,\n\t\terror: null,\n\t\tloading: true\n\t});\n\n\tconst loadData = async () => {\n\t\tsetState(prev => ({ ...prev, loading: true, error: null }));\n\t\t\n\t\ttry {\n\t\t\tconst [modelResponse, layoutResponse] = await Promise.all([\n\t\t\t\tfetch('data/model.json'),\n\t\t\t\tfetch('data/layout.json')\n\t\t\t]);\n\n\t\t\tif (!modelResponse.ok) {\n\t\t\t\tthrow new Error(`Failed to fetch model: ${modelResponse.statusText}`);\n\t\t\t}\n\t\t\t\n\t\t\tif (!layoutResponse.ok) {\n\t\t\t\tthrow new Error(`Failed to fetch layout: ${layoutResponse.statusText}`);\n\t\t\t}\n\n\t\t\tconst [model, layout] = await Promise.all([\n\t\t\t\tmodelResponse.json(),\n\t\t\t\tlayoutResponse.json()\n\t\t\t]);\n\n\t\t\tsetState({\n\t\t\t\tdata: { model, layout },\n\t\t\t\terror: null,\n\t\t\t\tloading: false\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tconsole.error('Failed to load data:', error);\n\t\t\tsetState({\n\t\t\t\tdata: null,\n\t\t\t\terror: error instanceof Error ? error.message : 'Unknown error occurred',\n\t\t\t\tloading: false\n\t\t\t});\n\t\t}\n\t};\n\n\tconst handleFileChange = (path: string) => {\n\t\tif (path.endsWith('.svg')) {\n\t\t\treturn; // Ignore SVG changes to avoid infinite loops\n\t\t}\n\t\t\n\t\tconsole.log('File changed:', path);\n\t\trefreshGraph();\n\t\tloadData();\n\t};\n\n\tuseEffect(() => {\n\t\t// Setup refresh connector\n\t\tconst refreshConnector = new RefreshConnector(handleFileChange);\n\t\trefreshConnector.connect();\n\n\t\t// Initial data load\n\t\tloadData();\n\n\t\t// Cleanup function\n\t\treturn () => {\n\t\t\t// RefreshConnector cleanup would go here if it had a disconnect method\n\t\t};\n\t}, []);\n\n\tif (state.loading) {\n\t\treturn <LoadingScreen />;\n\t}\n\n\tif (state.error) {\n\t\treturn <ErrorScreen error={state.error} onRetry={loadData} />;\n\t}\n\n\tif (!state.data) {\n\t\treturn <ErrorScreen error=\"No data available\" onRetry={loadData} />;\n\t}\n\n\treturn (\n\t\t<Suspense fallback={<LoadingScreen />}>\n\t\t\t<Root model={state.data.model} layout={state.data.layout} />\n\t\t</Suspense>\n\t);\n};\n\nconst LoadingScreen: React.FC = () => (\n\t<div style={{\n\t\tdisplay: 'flex',\n\t\tjustifyContent: 'center',\n\t\talignItems: 'center',\n\t\theight: '100vh',\n\t\tfontFamily: 'Arial, sans-serif'\n\t}}>\n\t\t<div>Loading...</div>\n\t</div>\n);\n\nconst ErrorScreen: React.FC<{ error: string; onRetry: () => void }> = ({ error, onRetry }) => (\n\t<div style={{\n\t\tpadding: '20px',\n\t\tcolor: 'red',\n\t\tfontFamily: 'monospace',\n\t\twhiteSpace: 'pre-wrap',\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'column',\n\t\talignItems: 'center',\n\t\tjustifyContent: 'center',\n\t\theight: '100vh'\n\t}}>\n\t\t<h2>Error loading application</h2>\n\t\t<p>{error}</p>\n\t\t<button \n\t\t\tonClick={onRetry}\n\t\t\tstyle={{\n\t\t\t\tpadding: '10px 20px',\n\t\t\t\tfontSize: '16px',\n\t\t\t\tcursor: 'pointer',\n\t\t\t\tbackgroundColor: '#007bff',\n\t\t\t\tcolor: 'white',\n\t\t\t\tborder: 'none',\n\t\t\t\tborderRadius: '4px'\n\t\t\t}}\n\t\t>\n\t\t\tRetry\n\t\t</button>\n\t</div>\n);\n\n// Initialize the application\nconst container = document.getElementById('root');\nif (!container) {\n\tthrow new Error('Root container not found');\n}\n\nconst root = createRoot(container);\nroot.render(<App />);","const textMeasure = () => {\n\tconst svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n\tdocument.body.appendChild(svg);\n\n\treturn {\n\t\tmeasure: (text: string, attrs: { [key: string]: string }) => {\n\t\t\tconst node = document.createElementNS('http://www.w3.org/2000/svg', 'text')\n\t\t\tnode.setAttribute('x', '0');\n\t\t\tnode.setAttribute('y', '0');\n\t\t\tfor (let attr in attrs) {\n\t\t\t\tnode.setAttribute(attr, attrs[attr]);\n\t\t\t}\n\t\t\tnode.appendChild(document.createTextNode(text));\n\n\t\t\tsvg.appendChild(node);\n\t\t\tconst {width, height} = node.getBBox();\n\t\t\tsvg.removeChild(node);\n\t\t\treturn {width, height};\n\t\t},\n\t\tclean: () => {\n\t\t\tdocument.body.removeChild(svg);\n\t\t}\n\t}\n}\n\n// Helper function to break long words that exceed width\nconst breakLongWord = (word: string, maxWidth: number, attrs: { [key: string]: string }, mt: any): string[] => {\n\tconst parts: string[] = [];\n\tlet currentPart = '';\n\t\n\tfor (let i = 0; i < word.length; i++) {\n\t\tconst testPart = currentPart + word[i];\n\t\tconst size = mt.measure(testPart, attrs);\n\t\t\n\t\tif (size.width > maxWidth && currentPart.length > 0) {\n\t\t\tparts.push(currentPart);\n\t\t\tcurrentPart = word[i];\n\t\t} else {\n\t\t\tcurrentPart = testPart;\n\t\t}\n\t}\n\t\n\tif (currentPart.length > 0) {\n\t\tparts.push(currentPart);\n\t}\n\t\n\treturn parts;\n}\n\n// split a text in lines wrapped at a certain width\nexport const svgTextWrap = (text: string, width: number, attrs: { [key: string]: string }) => {\n\tconst mt = textMeasure()\n\tlet maxW = 0;\n\t\n\tconst ret = text.trim().split('\\n').map(text => { //split paragraphs\n\t\t//do one paragraph\n\t\tconst words = text.trim().split(/\\s+/);\n\t\tlet lines: string[] = [];\n\t\tlet currentLine: string[] = [];\n\t\t\n\t\twords.forEach(word => {\n\t\t\t// First check if the single word exceeds the width\n\t\t\tconst wordSize = mt.measure(word, attrs);\n\t\t\tif (wordSize.width > width) {\n\t\t\t\t// If we have content in current line, finish it first\n\t\t\t\tif (currentLine.length > 0) {\n\t\t\t\t\tlines.push(currentLine.join(' '));\n\t\t\t\t\tcurrentLine = [];\n\t\t\t\t}\n\t\t\t\t// Break the long word into smaller parts\n\t\t\t\tconst brokenParts = breakLongWord(word, width, attrs, mt);\n\t\t\t\t// Add all but the last part as complete lines\n\t\t\t\tfor (let i = 0; i < brokenParts.length - 1; i++) {\n\t\t\t\t\tlines.push(brokenParts[i]);\n\t\t\t\t\tmaxW = Math.max(maxW, mt.measure(brokenParts[i], attrs).width);\n\t\t\t\t}\n\t\t\t\t// Start new line with the last part\n\t\t\t\tif (brokenParts.length > 0) {\n\t\t\t\t\tcurrentLine = [brokenParts[brokenParts.length - 1]];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Normal word processing\n\t\t\t\tconst newLine = [...currentLine, word];\n\t\t\t\tconst size = mt.measure(newLine.join(' '), attrs);\n\t\t\t\tif (size.width > width && currentLine.length > 0) {\n\t\t\t\t\tlines.push(currentLine.join(' '));\n\t\t\t\t\tcurrentLine = [word];\n\t\t\t\t} else {\n\t\t\t\t\tmaxW = Math.max(maxW, size.width)\n\t\t\t\t\tcurrentLine = newLine;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tif (currentLine.length > 0) {\n\t\t\tlines.push(currentLine.join(' '));\n\t\t}\n\t\treturn lines;\n\t}).reduce((a, v) => a.concat(v), []) //flatten\n\n\tmt.clean()\n\treturn {lines: ret, maxW};\n};\n\n\n","import {svgTextWrap} from \"./svg-text\";\n\nexport const create = {\n\telement(type: string, attrs: Record<string, string | number> = {}, className?: string) {\n\t\tconst el = document.createElementNS('http://www.w3.org/2000/svg', type);\n\t\tObject.entries(attrs).forEach(([k, v]) => el.setAttribute(k, String(v)));\n\t\tif (className) el.classList.add(className);\n\t\treturn el;\n\t},\n\n\tuse(id: string, attrs: Record<string, string | number> = {}) {\n\t\tconst el = this.element('use', attrs);\n\t\tel.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', '#' + id);\n\t\treturn el;\n\t},\n\n\tpath(path: string, attrs: Record<string, string | number> = {}, className?: string) {\n\t\tconst p = this.element(\"path\", {...attrs, d: path}, className);\n\t\treturn p;\n\t},\n\n\ttext(text: string, attrs: Record<string, string | number> = {}) {\n\t\tconst t = this.element('text', attrs) as SVGTextElement;\n\t\tif (text) t.textContent = text;\n\t\treturn t;\n\t},\n\n\ttextArea(text: string, width: number, fontSize: number, bold: boolean, x = 0, y = 0, anchor = '') {\n\t\tconst attrs: Record<string, string> = {\n\t\t\t'font-size': `${fontSize}px`,\n\t\t\t'font-weight': bold ? 'bold' : 'normal'\n\t\t};\n\t\tconst {lines, maxW} = svgTextWrap(text, width, attrs);\n\t\tconst txt = this.text('', {x: 0, y, 'text-anchor': anchor || undefined});\n\t\t\n\t\tlines.forEach((line, i) => {\n\t\t\tconst span = this.element('tspan', {x, dy: `${fontSize + 2}px`, ...attrs});\n\t\t\tspan.textContent = line;\n\t\t\ttxt.append(span);\n\t\t});\n\t\t\n\t\treturn {txt, dy: (lines.length + 1) * (fontSize + 2), maxW};\n\t},\n\n\trect(width: number, height: number, x = 0, y = 0, r = 0, className?: string) {\n\t\treturn this.element('rect', {x, y, rx: r, ry: r, width, height}, className) as SVGRectElement;\n\t},\n\n\ticon(icon: string, x = 0, y = 0) {\n\t\treturn this.use(icon, {x, y});\n\t},\n\n\texpand(x: number, y: number, expanded: boolean) {\n\t\tconst g = this.element('g', {transform: `translate(${x},${y})`}, 'expand') as SVGGElement;\n\t\tg.append(\n\t\t\tthis.rect(19, 19, 0, 0, 1),\n\t\t\tthis.text(expanded ? '-' : '+', {x: 10, y: 14, 'text-anchor': 'middle'})\n\t\t);\n\t\treturn g;\n\t}\n};\n\nexport function setPosition(g: SVGGElement, x: number, y: number) {\n\tg.setAttribute('transform', `translate(${x},${y})`);\n}","interface Point {\n\tx: number;\n\ty: number;\n}\n\ninterface BBox extends Point {\n\twidth: number;\n\theight: number;\n}\n\n\nexport function insideBox(p: Point, b: BBox, centeredBox = true): boolean {\n\treturn centeredBox ?\n\t\t(p.x > b.x - b.width / 2 && p.x < b.x + b.width / 2 && p.y > b.y - b.height / 2 && p.y < b.y + b.height / 2) :\n\t\t(p.x > b.x && p.x < b.x + b.width && p.y > b.y && p.y < b.y + b.height)\n}\n\nexport function boxesOverlap(b1: BBox, b2: BBox): boolean {\n\treturn b1.x < b2.x + b2.width && b1.y < b2.y + b2.height && b1.x + b1.width > b2.x && b1.y + b1.height > b2.y\n}\n\nexport function uncenterBox(b: BBox): BBox {\n\treturn {x: b.x - b.width / 2, y: b.y - b.height / 2, width: b.width, height: b.height}\n}\n\nexport function scaleBox(b: BBox, sc: number): BBox {\n\treturn {x: b.x * sc, y: b.y * sc, width: b.width * sc, height: b.height * sc}\n}\n\n// intersect 2 segments (p1->q1) with (p2, q2)\n// if the lines intersect, the result contains the x and y of the intersection (treating the lines as infinite)\n// and booleans for whether line segment 1 or line segment 2 contain the point\nfunction segmentIntersection(p1: Point, q1: Point, p2: Point, q2: Point) {\n\tlet denominator, a, b, numerator1, numerator2,\n\t\tresult: { x: number, y: number, onLine1: boolean, onLine2: boolean } = {\n\t\t\tx: null,\n\t\t\ty: null,\n\t\t\tonLine1: false,\n\t\t\tonLine2: false\n\t\t};\n\tdenominator = (q2.y - p2.y) * (q1.x - p1.x) - (q2.x - p2.x) * (q1.y - p1.y);\n\tif (denominator == 0) {\n\t\treturn result;\n\t}\n\ta = p1.y - p2.y;\n\tb = p1.x - p2.x;\n\tnumerator1 = ((q2.x - p2.x) * a) - ((q2.y - p2.y) * b);\n\tnumerator2 = ((q1.x - p1.x) * a) - ((q1.y - p1.y) * b);\n\ta = numerator1 / denominator;\n\tb = numerator2 / denominator;\n\n\t// if we cast these lines infinitely in both directions, they intersect here:\n\tresult.x = p1.x + (a * (q1.x - p1.x));\n\tresult.y = p1.y + (a * (q1.y - p1.y));\n\n\t// if line1 is a segment and line2 is infinite, they intersect if:\n\tif (a > 0 && a < 1) {\n\t\tresult.onLine1 = true;\n\t}\n\t// if line2 is a segment and line1 is infinite, they intersect if:\n\tif (b >= 0 && b <= 1) {\n\t\tresult.onLine2 = true;\n\t}\n\t// if line1 and line2 are segments, they intersect if both of the above are true\n\treturn result;\n}\n\n// intersects a segment (p1->p2) with a box\nexport function intersectRectFull(p1: Point, p2: Point, box: BBox): Point[] {\n\tconst w = box.width / 2\n\tconst h = box.height / 2\n\tconst segs: { p: Point; q: Point }[] = [\n\t\t{p: {x: box.x - w, y: box.y - h}, q: {x: box.x - w, y: box.y + h}},\n\t\t{p: {x: box.x - w, y: box.y - h}, q: {x: box.x + w, y: box.y - h}},\n\t\t{p: {x: box.x + w, y: box.y - h}, q: {x: box.x + w, y: box.y + h}},\n\t\t{p: {x: box.x - w, y: box.y + h}, q: {x: box.x + w, y: box.y + h}},\n\t]\n\treturn segs.map(s => segmentIntersection(p1, p2, s.p, s.q)).filter(ret => ret.onLine1 && ret.onLine2)\n}\n\n// intersects a line that goes from p to the center of the box\nexport function intersectRect(box: BBox, p: Point): Point {\n\tif (insideBox(p, box)) return {x: box.x, y: box.y}\n\treturn intersectRectFull(box, p, box)[0] || {x: box.x, y: box.y}\n}\n\nexport function intersectEllipse(ellCenter: Point, rx: number, ry: number, nodeCenter: Point, point: Point) {\n\n\t//translate all to center ellipse\n\tconst p1 = {x: point.x - ellCenter.x, y: point.y - ellCenter.y}\n\tconst p2 = {x: nodeCenter.x - ellCenter.x, y: nodeCenter.y - ellCenter.y}\n\n\tif (p2.x == p1.x) { //hack to avoid singularity\n\t\tp1.x += .0000001\n\t}\n\n\tconst s = (p2.y - p1.y) / (p2.x - p1.x);\n\tconst si = p2.y - (s * p2.x);\n\tconst a = (ry * ry) + (rx * rx * s * s);\n\tconst b = 2 * rx * rx * si * s;\n\tconst c = rx * rx * si * si - rx * rx * ry * ry;\n\n\tconst radicand_sqrt = Math.sqrt((b * b) - (4 * a * c));\n\tconst x = p1.x > p2.x ?\n\t\t(-b + radicand_sqrt) / (2 * a) :\n\t\t(-b - radicand_sqrt) / (2 * a)\n\tconst pos = {\n\t\tx: x,\n\t\ty: s * x + si\n\t}\n\t//translate back\n\tpos.x += ellCenter.x;\n\tpos.y += ellCenter.y\n\n\treturn pos;\n}\n\nexport interface Segment {\n\tp: Point;\n\tq: Point;\n}\n\n// given a polyline as a list of segments, interrupt it over the box so no line is inside the box\nexport function intersectPolylineBox(segments: Segment[], box: BBox) {\n\tfor (let i = 0; i < segments.length; i++) {\n\t\tconst s = segments[i]\n\t\tif (insideBox(s.p, box)) {\n\t\t\tif (insideBox(s.q, box)) { // segment both ends inside box\n\t\t\t\tsegments.splice(i, 1)\n\t\t\t\ti -= 1\n\t\t\t} else { // segment start inside box\n\t\t\t\ts.p = intersectRectFull(s.p, s.q, box)[0]\n\t\t\t}\n\t\t} else {\n\t\t\tif (insideBox(s.q, box)) { // segment end inside box\n\t\t\t\ts.q = intersectRectFull(s.p, s.q, box)[0]\n\t\t\t} else { // both ends outside\n\t\t\t\tconst ret = intersectRectFull(s.p, s.q, box)\n\t\t\t\tif (ret.length == 2) {  // intersects the box, splice segment\n\t\t\t\t\t// order the intersection points, closest first\n\t\t\t\t\tconst dst1 = Math.abs(ret[0].x - s.p.x) + Math.abs(ret[0].y - s.p.y)\n\t\t\t\t\tconst dst2 = Math.abs(ret[1].x - s.p.x) + Math.abs(ret[1].y - s.p.y)\n\t\t\t\t\tif (dst1 > dst2) ret.reverse()\n\t\t\t\t\t// split the segment in 2\n\t\t\t\t\tconst s2 = {p: ret[1], q: s.q}\n\t\t\t\t\ts.q = ret[0]\n\t\t\t\t\tsegments.splice(i + 1, 0, s2)\n\t\t\t\t\ti += 1\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport function project(p: Point, a: Point, b: Point): Point {\n\tlet atob = {x: b.x - a.x, y: b.y - a.y};\n\tlet atop = {x: p.x - a.x, y: p.y - a.y};\n\tlet len = atob.x * atob.x + atob.y * atob.y;\n\tlet dot = atop.x * atob.x + atop.y * atob.y;\n\tlet t = Math.min(1, Math.max(0, dot / len));\n\treturn {\n\t\tx: a.x + atob.x * t,\n\t\ty: a.y + atob.y * t\n\t};\n}\n\nexport function cabDistance(p1: Point, p2: Point): number {\n\treturn Math.abs(p2.x - p1.x) + Math.abs(p2.y - p1.y)\n}","import {intersectEllipse, intersectRect} from \"./intersect\";\n\ninterface Point {\n\tx: number;\n\ty: number;\n}\n\ninterface BBox extends Point {\n\twidth: number;\n\theight: number;\n}\n\ninterface D3Node extends BBox {\n\tintersect: (p: Point) => Point\n}\n\nclass D3Element {\n\tprivate readonly _el: SVGElement\n\n\tconstructor(el: SVGElement) {\n\t\tthis._el = el;\n\t}\n\n\tnode() {\n\t\treturn this._el;\n\t}\n\n\tattr(name: string, value: string | number) {\n\t\tthis._el.setAttribute(name, String(value))\n\t\treturn this;\n\t}\n\n\tinsert(type: string, pos: string) {\n\t\tconst el = document.createElementNS('http://www.w3.org/2000/svg', type)\n\t\tconst el2 = this._el.insertBefore(el, this._el.querySelector(pos))\n\t\treturn new D3Element(el2)\n\t}\n}\n\n\nfunction rect(parent: D3Element, bbox: BBox, node: D3Node, rounded = false) {\n\tconst shapeSvg = parent.insert(\"rect\", \":first-child\")\n\t\t.attr(\"rx\", rounded ? node.width / 8 : 3)\n\t\t.attr(\"ry\", rounded ? node.width / 8 : 3)\n\t\t.attr(\"x\", -bbox.width / 2)\n\t\t.attr(\"y\", -bbox.height / 2)\n\t\t.attr(\"width\", bbox.width)\n\t\t.attr(\"height\", bbox.height);\n\n\tnode.intersect = function (point) {\n\t\treturn intersectRect(node, point);\n\t};\n\n\treturn shapeSvg;\n}\n\n\nfunction cylinder(parent: D3Element, bbox: BBox, node: D3Node) {\n\tconst w = bbox.width;\n\tconst rx = w / 2;\n\tconst ry = rx / (5.5 + w / 70); // Make ellipse even flatter - increased to 5.5\n\tconst h = bbox.height;\n\n\tconst shape =\n\t\t`M 0,${ry} a${rx},${ry} 0,0,0 ${w} 0 a ${rx},${ry} 0,0,0 ${-w} 0 l 0,${h - 2 * ry} a ${rx},${ry} 0,0,0 ${w} 0 l 0,${-h + 2 * ry}`;\n\n\tconst shapeSvg = parent\n\t\t.attr('label-offset-y', 2 * ry)\n\t\t.insert('path', ':first-child')\n\t\t.attr('d', shape)\n\t\t.attr('transform', 'translate(' + -w / 2 + ',' + -(h / 2) + ')');\n\n\tnode.intersect = function (point: Point) {\n\t\tconst pos = intersectRect(node, point)\n\t\tlet cy = node.y + node.height / 2 - ry\n\t\tif (pos.y > cy)\n\t\t\treturn intersectEllipse({x: node.x, y: cy}, rx, ry, node, point)\n\n\t\tcy = node.y - node.height / 2 + ry\n\t\tif (pos.y < cy)\n\t\t\treturn intersectEllipse({x: node.x, y: cy}, rx, ry, node, point)\n\n\t\treturn pos;\n\t};\n\n\treturn shapeSvg;\n}\n\nfunction person(parent: D3Element, bbox: BBox, node: D3Node) {\n\tconst w = bbox.width;\n\tconst h = bbox.height;\n\n\tconst shape =\n\t\t`M ${.38 * w},${h / 3} A${w / 2},${h / 2} 0,0,0 0 ${h / 2}\n\t\tL${w / 11},${h} L${w - w / 11},${h} L${w},${h / 2}\n\t\tA${w / 2},${h / 2} 0,0,0 ${w - .38 * w} ${h / 3} \n\t\tA${w / 6},${w / 6} 0,1,0 ${.38 * w} ${h / 3}`;\n\n\tconst shapeSvg = parent\n\t\t.attr('label-offset-y', h * .4)\n\t\t.insert('path', ':first-child')\n\t\t.attr('d', shape)\n\t\t.attr('transform', 'translate(' + -w / 2 + ',' + -(h / 2) + ')');\n\n\tnode.intersect = function (point: Point) {\n\t\tconst pos = intersectRect(node, point)\n\t\treturn pos;\n\t};\n\n\treturn shapeSvg;\n}\n\nfunction _ellipse(parent: D3Element, bbox: BBox, node: D3Node, rx: number, ry: number) {\n\tconst shapeSvg = parent.insert(\"ellipse\", \":first-child\")\n\t\t.attr(\"cx\", 0)\n\t\t.attr(\"cy\", 0)\n\t\t.attr('rx', rx)\n\t\t.attr('ry', ry)\n\t\t.attr(\"width\", node.width)\n\t\t.attr(\"height\", node.height);\n\n\tnode.intersect = function (point) {\n\t\treturn intersectEllipse(node, rx, ry, node, point)\n\t};\n\treturn shapeSvg;\n}\n\nfunction circle(parent: D3Element, bbox: BBox, node: D3Node) {\n\treturn _ellipse(parent, bbox, node, node.width / 2, node.width / 2)\n}\n\nfunction ellipse(parent: D3Element, bbox: BBox, node: D3Node) {\n\treturn _ellipse(parent, bbox, node, node.width * .55, node.width * .45)\n}\n\nfunction hexagon(parent: D3Element, bbox: BBox, node: D3Node) {\n\tconst sz = node.width / 2\n\t// drawing a hexagon from polar coords\n\t// [0,1,2,3,4,5,6].map(i=>`${Math.sin(Math.PI/3*i+Math.PI/6).toFixed(4)},${Math.cos(Math.PI/3*i+Math.PI/6).toFixed(4)}`).join(',')\n\tconst shapeSvg = parent.insert(\"polygon\", \":first-child\")\n\t\t.attr(\"points\",\n\t\t\t[0.5000, 0.8660, 1.0000, 0.0000, 0.5000, -0.8660, -0.5000, -0.8660, -1.0000, -0.0000, -0.5000, 0.8660, 0.5000, 0.8660].map(n => n * sz).join(','))\n\t\t.attr(\"width\", node.width)\n\t\t.attr(\"height\", node.height);\n\n\tnode.intersect = function (point) {\n\t\treturn intersectEllipse(node, node.width / 2, node.width / 2, node, point)\n\t};\n\treturn shapeSvg;\n}\n\nfunction component(parent: D3Element, bbox: BBox, node: D3Node) {\n\tconst dx = node.width / 10\n\tconst shapeSvg = parent.insert('g', ':first-child')\n\tshapeSvg.insert(\"rect\", \":first-child\")\n\t\t.attr(\"rx\", 3).attr(\"ry\", 3)\n\t\t.attr(\"x\", -node.width / 2 - dx)\n\t\t.attr(\"y\", -node.height / 2 + dx)\n\t\t.attr(\"width\", dx * 2)\n\t\t.attr(\"height\", dx);\n\tshapeSvg.insert(\"rect\", \":first-child\")\n\t\t.attr(\"rx\", 3).attr(\"ry\", 3)\n\t\t.attr(\"x\", -node.width / 2 - dx)\n\t\t.attr(\"y\", -node.height / 2 + dx * 2.5)\n\t\t.attr(\"width\", dx * 2)\n\t\t.attr(\"height\", dx);\n\tshapeSvg.insert(\"rect\", \":first-child\")\n\t\t.attr(\"rx\", 3).attr(\"ry\", 3)\n\t\t.attr(\"x\", -node.width / 2)\n\t\t.attr(\"y\", -node.height / 2)\n\t\t.attr(\"width\", node.width)\n\t\t.attr(\"height\", node.height);\n\n\tnode.intersect = function (point) {\n\t\treturn intersectRect({x: node.x - dx / 2, y: node.y, width: node.width + dx, height: node.height}, point);\n\t};\n\n\treturn shapeSvg;\n}\n\nfunction folder(parent: D3Element, bbox: BBox, node: D3Node) {\n\tconst dy = node.width / 20\n\tconst shapeSvg = parent\n\t\t.attr('label-offset-y', dy * 2)\n\t\t.insert('g', ':first-child')\n\tshapeSvg.insert(\"rect\", \":first-child\")\n\t\t.attr(\"rx\", 3).attr(\"ry\", 3)\n\t\t.attr(\"x\", -node.width / 2)\n\t\t.attr(\"y\", -node.height / 2 + dy * 2)\n\t\t.attr(\"width\", node.width)\n\t\t.attr(\"height\", node.height - dy * 2);\n\tshapeSvg.insert(\"path\", \":first-child\")\n\t\t.attr('d', `M0,${-node.height / 2 + 2 * dy} l${dy},${-2 * dy} h${node.width / 2 - dy * 2} v${dy * 2}`)\n\n\tnode.intersect = function (point) {\n\t\treturn intersectRect({x: node.x, y: node.y + dy / 2, width: node.width, height: node.height + dy}, point);\n\t};\n\n\treturn shapeSvg;\n}\n\nfunction mobiledevicelandscape(parent: D3Element, bbox: BBox, node: D3Node, rounded = false) {\n\tconst dx = node.width / 8\n\tconst r = node.width / 14\n\tconst shapeSvg = parent.insert('g', ':first-child')\n\tshapeSvg.insert('path', ':first-child')\n\t\t.attr('d', `M${-node.width / 2},${-node.height / 2} l0,${node.height} M${node.width / 2},${-node.height / 2} l0,${node.height}`)\n\tshapeSvg.insert('circle', ':first-child')\n\t\t.attr('cx', -node.width / 2 - dx / 2)\n\t\t.attr('cy', 0)\n\t\t.attr('r', r * .4)\n\tshapeSvg.insert('rect', ':first-child')\n\t\t.attr('x', node.width / 2 + dx / 2 - r * .2)\n\t\t.attr('y', -r)\n\t\t.attr('width', r * .4)\n\t\t.attr('height', r * 2)\n\tshapeSvg.insert(\"rect\", \":first-child\")\n\t\t.attr(\"rx\", r)\n\t\t.attr(\"ry\", r)\n\t\t.attr(\"x\", -bbox.width / 2 - dx)\n\t\t.attr(\"y\", -bbox.height / 2)\n\t\t.attr(\"width\", bbox.width + 2 * dx)\n\t\t.attr(\"height\", bbox.height);\n\n\tnode.intersect = function (point) {\n\t\treturn intersectRect({x: node.x, y: node.y, width: node.width + 2 * dx, height: node.height}, point);\n\t};\n\n\treturn shapeSvg;\n}\n\nfunction mobiledeviceportrait(parent: D3Element, bbox: BBox, node: D3Node) {\n\tconst dy = node.width / 8\n\tconst r = node.width / 14\n\tconst shapeSvg = parent.insert('g', ':first-child')\n\tshapeSvg.insert('path', ':first-child')\n\t\t.attr('d', `M${-node.width / 2},${-node.height / 2} l${node.width},0 M${-node.width / 2},${node.height / 2} l${node.width},0`)\n\tshapeSvg.insert('circle', ':first-child')\n\t\t.attr('cx', 0)\n\t\t.attr('cy', node.height / 2 + dy / 2)\n\t\t.attr('r', r * .4)\n\tshapeSvg.insert('rect', ':first-child')\n\t\t.attr('x', -r)\n\t\t.attr('y', -node.height / 2 - dy / 2 - r * .2)\n\t\t.attr('width', r * 2)\n\t\t.attr('height', r * .4)\n\tshapeSvg.insert(\"rect\", \":first-child\")\n\t\t.attr(\"rx\", r)\n\t\t.attr(\"ry\", r)\n\t\t.attr(\"x\", -bbox.width / 2)\n\t\t.attr(\"y\", -bbox.height / 2 - dy)\n\t\t.attr(\"width\", bbox.width)\n\t\t.attr(\"height\", bbox.height + 2 * dy);\n\n\tnode.intersect = function (point) {\n\t\treturn intersectRect({x: node.x, y: node.y, width: node.width, height: node.height + 2 * dy}, point);\n\t};\n\n\treturn shapeSvg;\n}\n\nfunction pipe(parent: D3Element, bbox: BBox, node: D3Node) {\n\tconst w = node.width;\n\tconst h = node.height;\n\tconst ry = h / 2;\n\tconst rx = ry / (2.5 + w / 70);\n\n\tconst shape =\n\t\t`M${-rx},0\n\t\ta${rx},${ry} 0,0,1 0,${h}\n\t\ta${rx},${ry} 0,0,1 0,${-h}\n\t\tl${w},0\n\t\ta${rx},${ry} 0,0,1 0,${h}\n\t\tl${-w},0`;\n\n\tconst shapeSvg = parent\n\t\t.insert('path', ':first-child')\n\t\t.attr('d', shape)\n\t\t.attr('transform', 'translate(' + -w / 2 + ',' + -(h / 2) + ')');\n\n\tnode.intersect = function (point: Point) {\n\t\treturn intersectRect({x: node.x - rx, y: node.y, width: node.width + 2 * rx, height: node.height}, point)\n\t};\n\n\treturn shapeSvg;\n}\n\nfunction robot(parent: D3Element, bbox: BBox, node: D3Node) {\n\tconst headW = node.width * .45\n\tconst r = node.width / 16\n\tconst dy = headW / 2 - r\n\tconst shapeSvg = parent\n\t\t.attr('label-offset-y', headW)\n\t\t.insert('g', ':first-child')\n\t\t.attr('transform', 'translate(0,' + (headW / 4) + ')');\n\t// head\n\tshapeSvg.insert(\"rect\", \":first-child\")\n\t\t.attr(\"rx\", r).attr(\"ry\", r)\n\t\t.attr('x', -headW / 2)\n\t\t.attr('y', -node.height / 2 - headW / 2)\n\t\t.attr('width', headW)\n\t\t.attr('height', headW)\n\t// ears\n\tshapeSvg.insert(\"path\", \":first-child\")\n\t\t.attr('d', `\n\t\t\tM${-headW / 2},${-node.height / 2 + r / 2} h-20 v-40 h20\n\t\t\tM${headW / 2},${-node.height / 2 + r / 2} h20 v-40 h-20\n\t\t`)\n\t// body\n\tshapeSvg.insert(\"rect\", \":first-child\")\n\t\t.attr(\"rx\", r).attr(\"ry\", r)\n\t\t.attr(\"x\", -node.width / 2)\n\t\t.attr(\"y\", -node.height / 2 + dy)\n\t\t.attr(\"width\", node.width)\n\t\t.attr(\"height\", node.height - dy);\n\n\tnode.intersect = function (point) {\n\t\treturn intersectRect({x: node.x, y: node.y, width: node.width, height: node.height + headW / 2}, point);\n\t};\n\n\treturn shapeSvg;\n}\n\nfunction webbrowser(parent: D3Element, bbox: BBox, node: D3Node) {\n\tconst dy = node.height / 8\n\tconst shapeSvg = parent\n\t\t.attr('label-offset-y', dy)\n\t\t.insert('g', ':first-child')\n\tshapeSvg.insert(\"path\", \":first-child\")\n\t\t.attr('d', `\n\t\t\tM${-node.width / 2},${-node.height / 2 + dy} h${node.width}\n\t\t\tM${-node.width / 2 + dy / 4},${-node.height / 2 + dy / 4} h${dy / 2} v${dy / 2} h${-dy / 2} z\n\t\t\tM${-node.width / 2 + dy},${-node.height / 2 + dy / 4} h${node.width - dy - dy / 4} v${dy / 2} h${-node.width + dy + dy / 4} z\n\t\t`)\n\tshapeSvg.insert(\"rect\", \":first-child\")\n\t\t.attr(\"rx\", 3).attr(\"ry\", 3)\n\t\t.attr(\"x\", -node.width / 2)\n\t\t.attr(\"y\", -node.height / 2)\n\t\t.attr(\"width\", node.width)\n\t\t.attr(\"height\", node.height);\n\n\tnode.intersect = function (point) {\n\t\treturn intersectRect(node, point);\n\t};\n\n\treturn shapeSvg;\n}\n\nexport const shapes: { [key: string]: (parent: SVGElement, node: D3Node) => SVGElement } = {\n\tbox: (parent: SVGElement, node: D3Node) => rect(new D3Element(parent), node, node).node(),\n\troundedbox: (parent: SVGElement, node: D3Node) => rect(new D3Element(parent), node, node, true).node(),\n\tcomponent: (parent: SVGElement, node: D3Node) => component(new D3Element(parent), node, node).node(),\n\tcylinder: (parent: SVGElement, node: D3Node) => cylinder(new D3Element(parent), node, node).node(),\n\tperson: (parent: SVGElement, node: D3Node) => person(new D3Element(parent), node, node).node(),\n\tcircle: (parent: SVGElement, node: D3Node) => circle(new D3Element(parent), node, node).node(),\n\tellipse: (parent: SVGElement, node: D3Node) => ellipse(new D3Element(parent), node, node).node(),\n\thexagon: (parent: SVGElement, node: D3Node) => hexagon(new D3Element(parent), node, node).node(),\n\tfolder: (parent: SVGElement, node: D3Node) => folder(new D3Element(parent), node, node).node(),\n\tmobiledevicelandscape: (parent: SVGElement, node: D3Node) => mobiledevicelandscape(new D3Element(parent), node, node).node(),\n\tmobiledeviceportrait: (parent: SVGElement, node: D3Node) => mobiledeviceportrait(new D3Element(parent), node, node).node(),\n\tmobiledevice: (parent: SVGElement, node: D3Node) => mobiledeviceportrait(new D3Element(parent), node, node).node(),\n\tpipe: (parent: SVGElement, node: D3Node) => pipe(new D3Element(parent), node, node).node(),\n\trobot: (parent: SVGElement, node: D3Node) => robot(new D3Element(parent), node, node).node(),\n\twebbrowser: (parent: SVGElement, node: D3Node) => webbrowser(new D3Element(parent), node, node).node(),\n}\n","import {GraphData, Node, Group} from \"./graph\";\n\nexport interface LayoutOptions {\n\tdirection?: 'UP' | 'DOWN' | 'LEFT' | 'RIGHT';\n\tnodeSpacing?: number;\n\tlayerSpacing?: number;\n\tcompactLayout?: boolean;\n}\n\n// Simplified spacing configuration\ninterface SpacingConfig {\n\tnodeSpacing: number;\n\tlayerSpacing: number;\n\tcomponentSpacing: number;\n\tpadding: number;\n\tgroupMultiplier: number;\n}\n\n// Default spacing configuration\nconst DEFAULT_SPACING: SpacingConfig = {\n\tnodeSpacing: 100,\n\tlayerSpacing: 100,\n\tcomponentSpacing: 50,\n\tpadding: 50,\n\tgroupMultiplier: 0.8,\n};\n\n// Helper function to get effective spacing for a context\nfunction getEffectiveSpacing(\n\tuserOptions: LayoutOptions = {},\n\tisGroup: boolean = false\n): SpacingConfig {\n\t// Apply user overrides to base config\n\tconst effectiveConfig: SpacingConfig = {\n\t\tnodeSpacing: userOptions.nodeSpacing ?? DEFAULT_SPACING.nodeSpacing,\n\t\tlayerSpacing: userOptions.layerSpacing ?? DEFAULT_SPACING.layerSpacing,\n\t\tcomponentSpacing: DEFAULT_SPACING.componentSpacing,\n\t\tpadding: DEFAULT_SPACING.padding,\n\t\tgroupMultiplier: DEFAULT_SPACING.groupMultiplier,\n\t};\n\t\n\t// Apply group multiplier if in group context\n\tif (isGroup) {\n\t\teffectiveConfig.nodeSpacing = Math.max(\n\t\t\teffectiveConfig.nodeSpacing * effectiveConfig.groupMultiplier,\n\t\t\t20\n\t\t);\n\t\teffectiveConfig.layerSpacing = Math.max(\n\t\t\teffectiveConfig.layerSpacing * effectiveConfig.groupMultiplier,\n\t\t\t25\n\t\t);\n\t\teffectiveConfig.componentSpacing = Math.max(\n\t\t\teffectiveConfig.componentSpacing * effectiveConfig.groupMultiplier,\n\t\t\t15\n\t\t);\n\t\teffectiveConfig.padding = Math.max(\n\t\t\teffectiveConfig.padding * effectiveConfig.groupMultiplier,\n\t\t\t15\n\t\t);\n\t}\n\t\n\treturn effectiveConfig;\n}\n\n// Simplified ELK layout options builder\nfunction getELKOptions(\n\tspacing: SpacingConfig,\n\tuserOptions: LayoutOptions\n): Record<string, string> {\n\tconst {\n\t\tdirection = 'DOWN',\n\t\tcompactLayout = false\n\t} = userOptions;\n\t\n\tconst baseOptions: Record<string, string> = {\n\t\t'elk.algorithm': 'layered',\n\t\t'elk.direction': direction,\n\t\t'elk.spacing.nodeNode': spacing.nodeSpacing.toString(),\n\t\t'elk.spacing.componentComponent': spacing.componentSpacing.toString(),\n\t\t'elk.padding': `[top=${spacing.padding},left=${spacing.padding},bottom=${spacing.padding},right=${spacing.padding}]`,\n\t\t'elk.layered.spacing.nodeNodeBetweenLayers': spacing.layerSpacing.toString(),\n\t\t'elk.layered.spacing.edgeNodeBetweenLayers': '40',\n\t\t'elk.edgeRouting': 'POLYLINE',\n\t\t'elk.layered.edgeRouting.selfLoopDistribution': 'EQUALLY',\n\t\t'elk.layered.edgeRouting.selfLoopOrdering': 'STACKED',\n\t\t'elk.layered.nodePlacement.favorStraightEdges': 'true',\n\t\t'elk.layered.nodePlacement.linearSegmentsDeflectionDampening': '0.3',\n\t\t'elk.layered.nodePlacement.strategy': 'NETWORK_SIMPLEX',\n\t\t'elk.layered.cycleBreaking.strategy': 'GREEDY',\n\t\t'elk.layered.crossingMinimization.strategy': 'LAYER_SWEEP',\n\t\t'elk.layered.crossingMinimization.semiInteractive': 'false',\n\t\t'elk.layered.considerModelOrder.strategy': 'NODES_AND_EDGES',\n\t\t'elk.layered.thoroughness': '15',\n\t};\n\t\n\tif (compactLayout) {\n\t\tbaseOptions['elk.layered.compaction.postCompaction.strategy'] = 'EDGE_LENGTH';\n\t\tbaseOptions['elk.layered.compaction.connectedComponents'] = 'true';\n\t}\n\t\n\treturn baseOptions;\n}\n\nexport async function autoLayout(graph: GraphData, options: LayoutOptions = {}): Promise<{\n\tnodes: Array<{id: string, x: number, y: number}>,\n\tedges: Array<{id: string, vertices: Array<{x: number, y: number}>, label?: {x: number, y: number}}>\n}> {\n\t// Dynamically import ELK only when auto-layout is used\n\tconst ELK = await import('elkjs/lib/elk.bundled.js').then(module => module.default);\n\tconst elk = new ELK();\n\t// Get systematic spacing configuration\n\tconst rootSpacing = getEffectiveSpacing(options, false);\n\t\n\t// Build ELK graph structure\n\tconst elkGraph = {\n\t\tid: \"root\",\n\t\tlayoutOptions: getELKOptions(rootSpacing, options),\n\t\tchildren: [] as any[],\n\t\tedges: [] as any[]\n\t};\n\n\t// Add ONLY actual nodes to ELK graph (exclude edge vertices)\n\tconst nodeMap = new Map<string, Node>();\n\tgraph.nodesMap.forEach(node => {\n\t\tnodeMap.set(node.id, node);\n\t\telkGraph.children.push({\n\t\t\tid: node.id,\n\t\t\twidth: node.width,\n\t\t\theight: node.height,\n\t\t});\n\t});\n\n\t// Handle grouped nodes (hierarchical layout)\n\tconst processedGroups = new Set<string>();\n\tconst nodeToGroupMap = new Map<string, string>();\n\t\n\tgraph.groupsMap.forEach(group => {\n\t\tif (!processedGroups.has(group.id)) {\n\t\t\tprocessedGroups.add(group.id);\n\t\t\t\n\t\t\t// Get group-specific spacing\n\t\t\tconst groupSpacing = getEffectiveSpacing(options, true);\n\t\t\t\n\t\t\t// Create group node\n\t\t\tconst groupNode = {\n\t\t\t\tid: group.id,\n\t\t\t\tchildren: [] as any[],\n\t\t\t\tedges: [] as any[],\n\t\t\t\tlayoutOptions: getELKOptions(groupSpacing, options)\n\t\t\t};\n\n\t\t\t// Add group members as children and track membership\n\t\t\tgroup.nodes.forEach(member => {\n\t\t\t\tif (!isGroup(member)) {\n\t\t\t\t\tnodeToGroupMap.set(member.id, group.id);\n\t\t\t\t\t// Move node from root to group\n\t\t\t\t\tconst nodeIndex = elkGraph.children.findIndex(n => n.id === member.id);\n\t\t\t\t\tif (nodeIndex >= 0) {\n\t\t\t\t\t\tconst node = elkGraph.children.splice(nodeIndex, 1)[0];\n\t\t\t\t\t\tgroupNode.children.push(node);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Add group to root if it has children\n\t\t\tif (groupNode.children.length > 0) {\n\t\t\t\telkGraph.children.push(groupNode);\n\t\t\t}\n\t\t}\n\t});\n\n\t// Add edges to ELK graph with proper hierarchical placement\n\tgraph.edges.forEach(edge => {\n\t\tconst fromGroup = nodeToGroupMap.get(edge.from.id);\n\t\tconst toGroup = nodeToGroupMap.get(edge.to.id);\n\t\t\n\t\tconst elkEdge = {\n\t\t\tid: edge.id,\n\t\t\tsources: [edge.from.id],\n\t\t\ttargets: [edge.to.id],\n\t\t\tsections: edge.vertices?.length ? [{\n\t\t\t\tstartPoint: {x: edge.vertices[0].x, y: edge.vertices[0].y},\n\t\t\t\tendPoint: {x: edge.vertices[edge.vertices.length - 1].x, y: edge.vertices[edge.vertices.length - 1].y},\n\t\t\t\tbendPoints: edge.vertices.slice(1, -1).map(v => ({x: v.x, y: v.y}))\n\t\t\t}] : undefined\n\t\t};\n\n\t\t// Place edge in appropriate container\n\t\tif (fromGroup && toGroup && fromGroup === toGroup) {\n\t\t\t// Both nodes in same group\n\t\t\tconst groupContainer = elkGraph.children.find(c => c.id === fromGroup);\n\t\t\tif (groupContainer) {\n\t\t\t\tgroupContainer.edges.push(elkEdge);\n\t\t\t}\n\t\t} else {\n\t\t\t// Cross-group or root-level edge\n\t\t\telkGraph.edges.push(elkEdge);\n\t\t}\n\t});\n\n\ttry {\n\t\tconst layoutedGraph = await elk.layout(elkGraph);\n\t\t\n\t\t// Extract results\n\t\tconst nodes: Array<{id: string, x: number, y: number}> = [];\n\t\tconst edges: Array<{id: string, vertices: Array<{x: number, y: number}>, label?: {x: number, y: number}}> = [];\n\n\t\t// Extract nodes from layout result\n\t\tconst extractNodes = (container: any, offsetX = 0, offsetY = 0) => {\n\t\t\tcontainer.children?.forEach((child: any) => {\n\t\t\t\tif (child.children) {\n\t\t\t\t\t// This is a group, recurse\n\t\t\t\t\textractNodes(child, offsetX + (child.x || 0), offsetY + (child.y || 0));\n\t\t\t\t} else {\n\t\t\t\t\t// This is a node\n\t\t\t\t\tnodes.push({\n\t\t\t\t\t\tid: child.id,\n\t\t\t\t\t\tx: offsetX + (child.x || 0) + (child.width || 0) / 2,\n\t\t\t\t\t\ty: offsetY + (child.y || 0) + (child.height || 0) / 2\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\t// Process original edges and extract routing node positions\n\t\tgraph.edges.forEach(originalEdge => {\n\t\t\tconst vertices: Array<{x: number, y: number}> = [];\n\t\t\tlet label: {x: number, y: number} | undefined;\n\n\t\t\t// Store routing nodes with their vertex numbers for proper sorting\n\t\t\tconst routingNodesWithIndex: Array<{x: number, y: number, index: number}> = [];\n\t\t\t\n\t\t\t// Find routing nodes and store with their index\n\t\t\tconst findRoutingNodesWithIndex = (searchContainer: any, offsetX = 0, offsetY = 0) => {\n\t\t\t\tsearchContainer.children?.forEach((child: any) => {\n\t\t\t\t\tconst vertexMatch = child.id.match(new RegExp(`^${originalEdge.id.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&')}-vertex-(\\\\d+)$`));\n\t\t\t\t\tif (vertexMatch) {\n\t\t\t\t\t\troutingNodesWithIndex.push({\n\t\t\t\t\t\t\tx: offsetX + (child.x || 0) + (child.width || 0) / 2,\n\t\t\t\t\t\t\ty: offsetY + (child.y || 0) + (child.height || 0) / 2,\n\t\t\t\t\t\t\tindex: parseInt(vertexMatch[1])\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tif (child.children) {\n\t\t\t\t\t\tfindRoutingNodesWithIndex(child, offsetX + (child.x || 0), offsetY + (child.y || 0));\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t};\n\t\t\t\n\t\t\tfindRoutingNodesWithIndex(layoutedGraph);\n\t\t\t\n\t\t\t// Sort by vertex index and add to vertices array\n\t\t\troutingNodesWithIndex.sort((a, b) => a.index - b.index);\n\t\t\tvertices.push(...routingNodesWithIndex.map(node => ({x: node.x, y: node.y})));\n\n\t\t\t// Calculate label position if edge has a label\n\t\t\tif (originalEdge.label && originalEdge.label.trim() && vertices.length >= 2) {\n\t\t\t\tconst midIndex = Math.floor(vertices.length / 2);\n\t\t\t\tif (vertices.length % 2 === 0) {\n\t\t\t\t\t// Even number of vertices, interpolate between middle two\n\t\t\t\t\tconst v1 = vertices[midIndex - 1];\n\t\t\t\t\tconst v2 = vertices[midIndex];\n\t\t\t\t\tlabel = {\n\t\t\t\t\t\tx: (v1.x + v2.x) / 2,\n\t\t\t\t\t\ty: (v1.y + v2.y) / 2\n\t\t\t\t\t};\n\t\t\t\t} else {\n\t\t\t\t\t// Odd number of vertices, use middle vertex\n\t\t\t\t\tlabel = vertices[midIndex];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tedges.push({\n\t\t\t\tid: originalEdge.id,\n\t\t\t\tvertices,\n\t\t\t\tlabel\n\t\t\t});\n\t\t});\n\n\t\t// Also process any remaining edges from ELK layout (fallback)\n\t\tconst processRemainingEdges = (container: any) => {\n\t\t\tcontainer.edges?.forEach((edge: any) => {\n\t\t\t\t// Skip segment edges (they are internal routing edges)\n\t\t\t\tif (edge.id.includes('-segment-')) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Skip if we already processed this edge from original graph\n\t\t\t\tif (edges.some(e => e.id === edge.id)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst vertices: Array<{x: number, y: number}> = [];\n\t\t\t\tlet label: {x: number, y: number} | undefined;\n\n\t\t\t\t// Fallback to sections if no routing nodes found\n\t\t\t\tif (edge.sections && edge.sections.length > 0) {\n\t\t\t\t\tconst section = edge.sections[0];\n\t\t\t\t\t\n\t\t\t\t\t// Add start point\n\t\t\t\t\tif (section.startPoint) {\n\t\t\t\t\t\tvertices.push({x: section.startPoint.x, y: section.startPoint.y});\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// Add bend points\n\t\t\t\t\tif (section.bendPoints) {\n\t\t\t\t\t\tsection.bendPoints.forEach((bp: any) => {\n\t\t\t\t\t\t\tvertices.push({x: bp.x, y: bp.y});\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// Add end point\n\t\t\t\t\tif (section.endPoint) {\n\t\t\t\t\t\tvertices.push({x: section.endPoint.x, y: section.endPoint.y});\n\t\t\t\t\t}\n\n\t\t\t\t\t// Calculate label position (middle of edge)\n\t\t\t\t\tif (vertices.length >= 2) {\n\t\t\t\t\t\tconst midIndex = Math.floor(vertices.length / 2);\n\t\t\t\t\t\tif (vertices.length % 2 === 0) {\n\t\t\t\t\t\t\t// Even number of vertices, interpolate between middle two\n\t\t\t\t\t\t\tconst v1 = vertices[midIndex - 1];\n\t\t\t\t\t\t\tconst v2 = vertices[midIndex];\n\t\t\t\t\t\t\tlabel = {\n\t\t\t\t\t\t\t\tx: (v1.x + v2.x) / 2,\n\t\t\t\t\t\t\t\ty: (v1.y + v2.y) / 2\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Odd number of vertices, use middle vertex\n\t\t\t\t\t\t\tlabel = vertices[midIndex];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tedges.push({\n\t\t\t\t\tid: edge.id,\n\t\t\t\t\tvertices,\n\t\t\t\t\tlabel\n\t\t\t\t});\n\t\t\t});\n\n\t\t\t// Process child containers\n\t\t\tcontainer.children?.forEach((child: any) => {\n\t\t\t\tif (child.edges) {\n\t\t\t\t\tprocessRemainingEdges(child);\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\textractNodes(layoutedGraph);\n\t\tprocessRemainingEdges(layoutedGraph);\n\n\t\t// Normalize coordinates to start near (0,0) to prevent huge canvas sizes\n\t\t// while preserving relative positioning between elements\n\t\tif (nodes.length > 0) {\n\t\t\t// Find the minimum coordinates across all elements\n\t\t\tconst minX = Math.min(...nodes.map(n => n.x));\n\t\t\tconst minY = Math.min(...nodes.map(n => n.y));\n\t\t\t\n\t\t\t// Add some padding so content doesn't start at exact (0,0)\n\t\t\tconst padding = 50;\n\t\t\tconst offsetX = -minX + padding;\n\t\t\tconst offsetY = -minY + padding;\n\t\t\t\n\t\t\t// Normalize all node positions\n\t\t\tnodes.forEach(node => {\n\t\t\t\tnode.x += offsetX;\n\t\t\t\tnode.y += offsetY;\n\t\t\t});\n\t\t\t\n\t\t\t// Normalize all edge positions\n\t\t\tedges.forEach(edge => {\n\t\t\t\tedge.vertices.forEach(vertex => {\n\t\t\t\t\tvertex.x += offsetX;\n\t\t\t\t\tvertex.y += offsetY;\n\t\t\t\t});\n\t\t\t\tif (edge.label) {\n\t\t\t\t\tedge.label.x += offsetX;\n\t\t\t\t\tedge.label.y += offsetY;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\treturn { nodes, edges };\n\n\t} catch (error) {\n\t\tconsole.warn('ELK layout failed, using fallback:', error);\n\t\treturn createFallbackLayout(graph);\n\t}\n}\n\n// Simplified fallback layout\nfunction createFallbackLayout(graph: GraphData): {\n\tnodes: Array<{id: string, x: number, y: number}>,\n\tedges: Array<{id: string, vertices: Array<{x: number, y: number}>}>\n} {\n\tconst nodes: Array<{id: string, x: number, y: number}> = [];\n\tconst edges: Array<{id: string, vertices: Array<{x: number, y: number}>}> = [];\n\n\t// Simple grid layout for nodes\n\tlet x = 0, y = 0;\n\tconst spacing = 300;\n\tconst maxCols = Math.ceil(Math.sqrt(graph.nodesMap.size));\n\n\tlet col = 0;\n\tgraph.nodesMap.forEach(node => {\n\t\tnodes.push({\n\t\t\tid: node.id,\n\t\t\tx: x,\n\t\t\ty: y\n\t\t});\n\n\t\tcol++;\n\t\tif (col >= maxCols) {\n\t\t\tcol = 0;\n\t\t\tx = 0;\n\t\t\ty += spacing;\n\t\t} else {\n\t\t\tx += spacing;\n\t\t}\n\t});\n\n\t// Simple straight line edges\n\tgraph.edges.forEach(edge => {\n\t\tedges.push({\n\t\t\tid: edge.id,\n\t\t\tvertices: []\n\t\t});\n\t});\n\n\treturn { nodes, edges };\n}\n\nfunction isGroup(member: Node | Group): member is Group {\n\treturn 'nodes' in member;\n}","/**\n * Undo functionality\n * at every change in the document, Undo can save a new version\n * so the user can \"undo\" and \"redo\" changes by reverting to an\n * older version of the document\n */\n\nexport class Undo<Doc> {\n\tprivate readonly versions: Doc[] = [];\n\tprivate pos: number = 0;\n\tprivate lastSavedPos: number = 0;\n\tprivate readonly exportDoc: () => Doc;\n\tprivate readonly importDoc: (d: Doc) => void;\n\tchange: () => void;\n\tprivate tmpPreviousState: Doc | null = null;\n\n\tconstructor(id: string, exportDoc: () => Doc, importDoc: (d: Doc) => void) {\n\t\tthis.exportDoc = exportDoc;\n\t\tthis.importDoc = importDoc;\n\t\tthis.change = debounce(() => this.saveNow(), 300);\n\t}\n\n\t// Store the state previous to the changes collected in the debounce period\n\tbeforeChange() {\n\t\tif (!this.tmpPreviousState) {\n\t\t\tthis.tmpPreviousState = this.deepClone(this.exportDoc());\n\t\t}\n\t}\n\n\tlength() {\n\t\treturn this.versions.length;\n\t}\n\n\tcurrentState() {\n\t\treturn this.deepClone(this.versions[this.pos - 1]);\n\t}\n\n\tprivate saveNow() {\n\t\tif (!this.tmpPreviousState) {\n\t\t\tthrow Error(\"undo.change() was called without previously calling undo.beforeChange()!\");\n\t\t}\n\t\t\n\t\tthis.versions[this.pos] = this.deepClone(this.exportDoc());\n\t\tthis.versions[this.pos - 1] = this.tmpPreviousState;\n\t\tthis.tmpPreviousState = null;\n\t\tthis.pos += 1;\n\t\t\n\t\t// Remove anything that might be on top of this version\n\t\tthis.versions.splice(this.pos);\n\t}\n\n\tprivate deepClone(doc: Doc): Doc {\n\t\t// Use modern structuredClone if available, fallback to JSON\n\t\tif (typeof structuredClone !== 'undefined') {\n\t\t\treturn structuredClone(doc);\n\t\t}\n\t\treturn JSON.parse(JSON.stringify(doc));\n\t}\n\n\tundo() {\n\t\tif (this.pos < 2) return;\n\t\tthis.pos -= 1;\n\t\tconst doc = this.versions[this.pos - 1];\n\t\tthis.importDoc(this.deepClone(doc));\n\t}\n\n\tredo() {\n\t\tif (this.pos > this.versions.length - 1) return;\n\t\tconst doc = this.versions[this.pos];\n\t\tthis.importDoc(this.deepClone(doc));\n\t\tthis.pos += 1;\n\t}\n\n\tchanged() {\n\t\treturn this.pos !== this.lastSavedPos;\n\t}\n\n\tsetSaved() {\n\t\tthis.lastSavedPos = this.pos;\n\t}\n}\n\nfunction debounce(func: () => void, wait: number) {\n\tlet timeout: ReturnType<typeof setTimeout>;\n\treturn function () {\n\t\tconst context = this;\n\t\tconst later = function () {\n\t\t\ttimeout = null;\n\t\t\tfunc.apply(context);\n\t\t};\n\t\tclearTimeout(timeout);\n\t\ttimeout = setTimeout(later, wait);\n\t};\n}","// Constants and default configurations for the graph view\n\nexport interface Point {\n\tx: number;\n\ty: number;\n}\n\nexport interface BBox extends Point {\n\twidth: number;\n\theight: number;\n}\n\nexport interface NodeStyle {\n\t// Width of element, in pixels.\n\twidth?: number\n\t// Height of element, in pixels.\n\theight?: number\n\t// Background color of element as HTML RGB hex string (e.g. \"#ffffff\")\n\tbackground?: string\n\t// Stroke color of element as HTML RGB hex string (e.g. \"#000000\")\n\tstroke?: string\n\t// Foreground (text) color of element as HTML RGB hex string (e.g. \"#ffffff\")\n\tcolor?: string\n\t// Standard font size used to render text, in pixels.\n\tfontSize?: number\n\t// Shape used to render element.\n\tshape?: string\n\t// URL of PNG/JPG/GIF file or Base64 data URI representation.\n\ticon?: string\n\t// Type of border used to render element.\n\tborder?: string\n\t// Opacity used to render element; 0-100.\n\topacity?: number\n\t// Whether element metadata should be shown.\n\tmetadata?: boolean\n\t// Whether element description should be shown.\n\tdescription?: boolean\n}\n\nexport interface EdgeStyle {\n\t// Thickness of line, in pixels.\n\tthickness?: number\n\t// Color of line as HTML RGB hex string (e.g. \"#ffffff\").\n\tcolor?: string\n\t// Standard font size used to render relationship annotation, in pixels.\n\tfontSize?: number\n\t// Width of relationship annotation, in pixels.\n\twidth?: number\n\t// Whether line is dashed.\n\tdashed?: boolean\n\t// Position of label along edge (0-100).\n\tposition?: number\n\t// Opacity used to render relationship; 0-100.\n\topacity?: number\n\t// Arrow style for the edge.\n\tarrowStyle?: 'normal' | 'large' | 'small' | 'none'\n}\n\n// Default styles\nexport const DEFAULT_EDGE_STYLE: EdgeStyle = {\n\tthickness: 3,\n\tcolor: '#999',\n\topacity: 1,\n\tfontSize: 22,\n\tdashed: true,\n};\n\nexport const DEFAULT_NODE_STYLE: NodeStyle = {\n\twidth: 280,\n\theight: 180,\n\tbackground: 'rgba(255, 255, 255, .9)',\n\tcolor: '#666',\n\topacity: .9,\n\tstroke: '#999',\n\tfontSize: 22,\n\tshape: 'Box'\n};\n\n// SVG styles\nexport const SVG_STYLES = {\n\tnodeBorder: {\n\t\tfill: \"rgba(255, 255, 255, 0.86)\",\n\t\tstroke: \"#aaa\",\n\t\tfilter: 'url(#shadow)',\n\t},\n\tnodeText: {\n\t\t'font-family': 'Arial, sans-serif',\n\t\tstroke: \"none\"\n\t},\n\tedgeText: {\n\t\t'font-family': 'Arial, sans-serif',\n\t\tstroke: \"none\"\n\t},\n\tedgeRect: {\n\t\tfill: \"none\",\n\t\tstroke: \"none\",\n\t},\n\tgroupRect: {\n\t\tfill: \"rgba(0, 0, 0, 0.02)\",\n\t\tstroke: \"#666\",\n\t\t'stroke-width': 3,\n\t\t\"stroke-dasharray\": 4,\n\t},\n\tgroupText: {\n\t\tfill: \"#666\",\n\t\t\"font-size\": 22,\n\t\tcursor: \"default\"\n\t}\n};\n\n// Configuration constants\nexport const SVG_PADDING = 20;\nexport const DEFAULT_GRID_SIZE = 25;\nexport const EDGE_SPREAD_DISTANCE = 70;\nexport const EDGE_SPREAD_DISTANCE_X = 200;\n\n// Utility function to apply styles to SVG elements\nexport const applyStyle = (el: SVGElement, style: { [key: string]: string | number }) => {\n\tObject.keys(style).forEach(key => {\n\t\tconst value = style[key];\n\t\tif (typeof value === 'number') {\n\t\t\tel.style.setProperty(key, value.toString());\n\t\t} else {\n\t\t\tel.style.setProperty(key, value);\n\t\t}\n\t});\n};\n\n// Utility function to calculate distance between two points\nexport const calculateDistance = (p1: Point, p2: Point): number => {\n\treturn Math.sqrt((p2.x - p1.x) * (p2.x - p1.x) + (p2.y - p1.y) * (p2.y - p1.y));\n};","import {defs} from \"./defs\";\nimport {create, setPosition} from \"./svg-create\";\nimport {cursorInteraction} from \"svg-editor-tools/lib/cursor-interaction\";\nimport {shapes} from \"./shapes\";\nimport {\n\tboxesOverlap,\n\tcabDistance,\n\tinsideBox,\n\tintersectPolylineBox,\n\tproject,\n\tscaleBox,\n\tSegment,\n\tuncenterBox\n} from \"./intersect\";\nimport {autoLayout} from \"./layout\";\nimport {Undo} from \"./undo\";\nimport {\n\tADD_LABEL_VERTEX,\n\tADD_VERTEX,\n\tDEL_VERTEX,\n\tDESELECT,\n\tfindShortcut,\n\tREDO,\n\tSELECT_ALL,\n\tUNDO,\n\tZOOM_100,\n\tZOOM_FIT,\n\tZOOM_IN,\n\tZOOM_OUT\n} from \"../shortcuts\";\nimport {\n\tPoint,\n\tBBox,\n\tNodeStyle,\n\tEdgeStyle,\n\tDEFAULT_EDGE_STYLE,\n\tDEFAULT_NODE_STYLE,\n\tSVG_STYLES,\n\tSVG_PADDING,\n\tDEFAULT_GRID_SIZE,\n\tapplyStyle,\n\tcalculateDistance\n} from \"./constants\";\nimport {\n\tcalculateEdgeVertices,\n\tcalculateLabelPosition,\n\tcreateEdgeSegments\n} from \"./edge-utils\";\n\n\n// Point and BBox interfaces are now imported from constants\n\nexport interface Group extends BBox {\n\tid: string;\n\tname: string;\n\tnodes: (Node | Group)[];\n\tref?: SVGGElement;\n\tstyle: NodeStyle;\n}\n\nexport interface Node extends BBox {\n\tid: string;\n\ttitle: string;\n\tsub: string;\n\tdescription: string;\n\n\tref?: SVGGElement;\n\tselected?: boolean;\n\n\tintersect: (p: Point) => Point\n\n\tstyle: NodeStyle\n}\n\n// NodeStyle interface is now imported from constants\n\n// EdgeStyle interface is now imported from constants\n\n// Default styles are now imported from constants\nconst defaultEdgeStyle = DEFAULT_EDGE_STYLE;\nconst defaultNodeStyle = DEFAULT_NODE_STYLE;\n\n// Edge and EdgeVertex interfaces are now defined in edge-utils.ts\n// Using local interfaces for compatibility with existing code\ninterface Edge {\n\tid: string;\n\tlabel: string;\n\tfrom: Node;\n\tto: Node;\n\tvertices?: EdgeVertex[];\n\tref?: SVGGElement;\n\tstyle: EdgeStyle;\n\tinitVertex: (p: Point) => EdgeVertex\n}\n\ninterface EdgeVertex extends Point {\n\tid: string\n\tselected?: boolean\n\tedge: Edge\n\tref?: SVGElement\n\tlabel?: boolean\n\tauto?: boolean\n}\n\ninterface Layout {\n\t[k: string]: Point | (Point & { label: boolean })[]\n}\n\nexport class GraphData {\n\tid: string;\n\tname: string;\n\tnodesMap: Map<string, Node>;\n\tedges: Edge[];\n\tedgeVertices: Map<string, EdgeVertex>\n\tgroupsMap: Map<string, Group>;\n\tmetadata: any;\n\tprivate _undo: Undo<Layout>;\n\tprivate _gridVisible: boolean = true;\n\tprivate _snapToGrid: boolean = true;\n\tprivate _gridSize: number = 25;\n\tprivate _skipAutoFit: boolean = false;\n\n\tconstructor(id?: string, name?: string) {\n\t\tthis.id = id;\n\t\tthis.name = name;\n\n\t\tthis.edges = [];\n\t\tthis.edgeVertices = new Map;\n\t\tthis.nodesMap = new Map;\n\t\tthis.groupsMap = new Map;\n\n\t\tthis._undo = new Undo<Layout>(\n\t\t\tthis.id,\n\t\t\t() => this.exportLayout(true),\n\t\t\t(lo) => this.importLayout(lo, true)\n\t\t)\n\n\t\t// @ts-ignore\n\t\twindow.graph = this\n\t}\n\n\t// after the graph model is build using addNode, addEdge etc, initialize\n\tinit(layout?: Layout) {\n\t\tlayout && this.importLayout(layout)\n\t\tthis._undo = new Undo<Layout>(\n\t\t\tthis.id,\n\t\t\t() => this.exportLayout(true),\n\t\t\t(lo) => this.importLayout(lo, true)\n\t\t)\n\t\tif (this._undo.length()) {\n\t\t\tthis.importLayout(this._undo.currentState())\n\t\t}\n\t}\n\n\taddNode(id: string, label: string, sub: string, description: string, style: NodeStyle) {\n\t\tif (this.nodesMap.has(id)) throw Error('duplicate node: ' + id)\n\t\t\n\t\t// ALWAYS use fixed dimensions - ignore any width/height from incoming styles\n\t\t// This ensures visual consistency regardless of model data\n\t\tconst shape = style.shape || 'Box';\n\t\tconst isPersonShape = shape.toLowerCase() === 'person';\n\t\tconst isCylinderShape = shape.toLowerCase() === 'cylinder';\n\t\t\n\t\t// Fixed dimensions based only on shape type - completely ignore style.width/height\n\t\tlet width: number;\n\t\tlet height: number;\n\t\t\n\t\tif (isPersonShape) {\n\t\t\twidth = 200;\n\t\t\theight = 240;\n\t\t} else if (isCylinderShape) {\n\t\t\t// Make cylinders wider to better accommodate text content\n\t\t\twidth = 280; // Same width as boxes for consistency\n\t\t\theight = 180; // Same height as boxes for consistency\n\t\t} else {\n\t\t\t// Standard rectangular shapes\n\t\t\twidth = 280;\n\t\t\theight = 180;\n\t\t}\n\t\t\n\t\t// Remove any width/height from style to prevent conflicts\n\t\tconst cleanStyle = {...style};\n\t\tdelete cleanStyle.width;\n\t\tdelete cleanStyle.height;\n\t\t\n\t\tconst n: Node = {\n\t\t\tid, title: label, sub, description, style: {...defaultNodeStyle, ...cleanStyle},\n\t\t\tx: 0, y: 0, width, height, intersect: null\n\t\t}\n\t\t// console.log(label, id, style, {...defaultNodeStyle, ...style})\n\t\tthis.nodesMap.set(n.id, n)\n\t}\n\n\tnodes() {\n\t\treturn Array.from(this.nodesMap.values())\n\t}\n\n\taddEdge(id: string, fromNode: string, toNode: string, label: string, vertices: Point[], style: EdgeStyle) {\n\t\tvertices && vertices.forEach((p, i) => {\n\t\t\tconst v = p as EdgeVertex\n\t\t\tv.id = `v-${id}-${i}`\n\t\t\tthis.edgeVertices.set(v.id, v)\n\t\t})\n\t\tconst randomID = () => Math.round(Math.random() * 1e10).toString(36)\n\t\tconst initVertex = (p: Point) => {\n\t\t\tconst v = p as EdgeVertex\n\t\t\tif (!v.id) {\n\t\t\t\tv.id = `v-${randomID()}`\n\t\t\t\tthis.edgeVertices.set(v.id, v)\n\t\t\t}\n\t\t\tv.edge = edge\n\t\t\treturn p as EdgeVertex\n\t\t}\n\t\tconst edge = {\n\t\t\tid,\n\t\t\tfrom: this.nodesMap.get(fromNode),\n\t\t\tto: this.nodesMap.get(toNode),\n\t\t\tlabel,\n\t\t\tvertices: null as EdgeVertex[],\n\t\t\tstyle: {...defaultEdgeStyle, ...style},\n\t\t\tinitVertex\n\t\t}\n\t\tthis.edges.push(edge)\n\t\tif (vertices) {\n\t\t\tedge.vertices = vertices.map(p => edge.initVertex(p))\n\t\t}\n\t}\n\n\taddGroup(id: string, name: string, nodesOrGroups: string[], style: NodeStyle) {\n\t\tif (this.groupsMap.has(id)) {\n\t\t\tconsole.error(`Group exists: ${id} ${name}`)\n\t\t\treturn\n\t\t}\n\t\tconst group: Group = {\n\t\t\tid, name, x: null, y: null, width: null, height: null,\n\t\t\tnodes: nodesOrGroups.map(k => {\n\t\t\t\tconst n = this.nodesMap.get(k) || this.groupsMap.get(k)\n\t\t\t\tif (!n) console.error(`Node or group ${k} not found for group ${id} \"${name}\"`)\n\t\t\t\treturn n\n\t\t\t}).filter(Boolean),\n\t\t\tstyle\n\t\t}\n\t\tthis.groupsMap.set(id, group)\n\t}\n\n\t// private rebuildNode(node: Node) {\n\t// \tconst p = node.ref.parentElement;\n\t// \tp.removeChild(node.ref)\n\t// \tnode.ref = buildNode(node, this)\n\t// \tp.appendChild(node.ref)\n\t// \tthis.redrawEdges(node)\n\t// \tthis.redrawGroups(node)\n\t// }\n\n\tsetNodeSelected(node: Node, selected: boolean) {\n\t\tnode.selected = selected\n\t\tselected ?\n\t\t\tnode.ref.classList.add('selected') :\n\t\t\tnode.ref.classList.remove('selected')\n\t\tthis.updateEdgesSel()\n\t}\n\n\tprivate updateEdgesSel() {\n\t\tthis.edges.forEach(e => {\n\t\t\tif (e.to.selected || e.from.selected) {\n\t\t\t\te.ref.classList.add('selected')\n\t\t\t} else {\n\t\t\t\te.ref.classList.remove('selected')\n\t\t\t}\n\t\t})\n\t}\n\n\tmoveNode(n: Node, x: number, y: number, disableSnap: boolean = false, skipUndo: boolean = false) {\n\t\tif (!n) return\n\t\t\n\t\t// Apply snap-to-grid if enabled and not explicitly disabled\n\t\tif (this._snapToGrid && !disableSnap) {\n\t\t\tconst snapped = this.snapToGrid(x, y);\n\t\t\tx = snapped.x;\n\t\t\ty = snapped.y;\n\t\t}\n\t\t\n\t\tif (n.x == x && n.y == y) return\n\t\t\n\t\tif (!skipUndo) {\n\t\t\tthis._undo.beforeChange()\n\t\t}\n\t\tn.x = x;\n\t\tn.y = y;\n\t\tsetPosition(n.ref, x, y)\n\t\tthis.redrawEdges(n);\n\t\tthis.redrawGroups(n)\n\t\tif (!skipUndo) {\n\t\t\tthis._undo.change()\n\t\t}\n\t}\n\n\tmoveEdgeVertex(v: EdgeVertex, x: number, y: number, disableSnap: boolean = false, skipUndo: boolean = false) {\n\t\t\n\t\tif (this._snapToGrid && !disableSnap) {\n\t\t\tconst snapped = this.snapToGrid(x, y);\n\t\t\tx = snapped.x;\n\t\t\ty = snapped.y;\n\t\t}\n\t\t// Use exact coordinates (no rounding needed with modern grid system)\n\t\t\n\t\tif (v.x == x && v.y == y) return\n\t\tif (!skipUndo) {\n\t\t\tthis._undo.beforeChange()\n\t\t}\n\t\tv.x = x;\n\t\tv.y = y;\n\t\tthis.redrawEdge(v.edge)\n\t\tif (!skipUndo) {\n\t\t\tthis._undo.change()\n\t\t}\n\t}\n\n\tmoveSelected(dx: number, dy: number, disableSnap: boolean = false) {\n\t\tthis.nodes().forEach(n => n.selected && this.moveNode(n, n.x + dx, n.y + dy, disableSnap, false))\n\t\tthis.edgeVertices.forEach(v => v.selected && this.moveEdgeVertex(v, v.x + dx, v.y + dy, disableSnap, false))\n\t}\n\n\tinsertEdgeVertex(edge: Edge, p: Point, pos: number, isLabel: boolean) {\n\t\tthis._undo.beforeChange()\n\t\tconst v = edge.initVertex(p)\n\t\tv.selected = true\n\t\tif (isLabel) { // when shift down, make it label position\n\t\t\tedge.vertices.forEach(v => v.label = false)\n\t\t\tv.label = true\n\t\t}\n\t\tedge.vertices.splice(pos - 1, 0, v)\n\t\tthis.redrawEdge(edge)\n\t\tthis._undo.change()\n\t}\n\n\tdeleteEdgeVertex(v: EdgeVertex) {\n\t\tthis._undo.beforeChange()\n\t\tif (v.auto) {\n\t\t\tv.auto = true\n\t\t} else {\n\t\t\tv.edge.vertices.splice(v.edge.vertices.indexOf(v), 1)\n\t\t\tthis.edgeVertices.delete(v.id)\n\t\t}\n\t\tthis.redrawEdge(v.edge)\n\t\tthis._undo.change()\n\t}\n\n\tchanged() {\n\t\treturn this._undo.changed()\n\t}\n\n\tundo() {\n\t\tthis._undo.undo()\n\t}\n\n\tredo() {\n\t\tthis._undo.redo()\n\t}\n\n\t// moves the entire graph to be aligned top-left of the drawing area\n\t// used to bring back to visible the nodes that end up at negative coordinates\n\talignTopLeft() {\n\t\tconst contentBounds = this.calculateContentBounds()\n\t\tconst padding = 100 // Reasonable padding for viewport\n\t\t\n\t\tconst offsetX = -contentBounds.x + padding\n\t\tconst offsetY = -contentBounds.y + padding\n\t\t\n\t\t// Set flag to prevent React useEffect from calling fitToView during this operation\n\t\tthis._skipAutoFit = true\n\t\t\n\t\tthis._undo.beforeChange()\n\t\t\n\t\tthis.nodesMap.forEach(node => {\n\t\t\tthis.moveNode(node, node.x + offsetX, node.y + offsetY, true, true) // Disable snap and undo during reset\n\t\t})\n\t\t\n\t\tthis.edgeVertices.forEach(vertex => {\n\t\t\tthis.moveEdgeVertex(vertex, vertex.x + offsetX, vertex.y + offsetY, true, true) // Disable snap and undo during reset\n\t\t})\n\t\t\n\t\tthis._undo.change()\n\t\t\n\t\t// DON'T clear view state here - let resetPanTransform handle it to avoid React useEffect recursion\n\t}\n\t\n\t// Reset pan transform to (0,0) while preserving zoom\n\tresetPanTransform() {\n\t\tconst currentZoom = getZoom()\n\t\tconst zoomGroup = svg.querySelector('g.zoom') as SVGGElement\n\t\tif (zoomGroup) {\n\t\t\tzoomGroup.setAttribute('transform', `scale(${currentZoom}) translate(0, 0)`)\n\t\t\tupdatePanningOptimized(this)\n\t\t}\n\t\t\n\t\t// Clear view state so this reset is not overridden\n\t\tclearViewState(this.id)\n\t\t\n\t\t// Reset the skip auto fit flag after reset is complete\n\t\tthis._skipAutoFit = false\n\t}\n\t\n\t// Check if auto-fit should be skipped (used by React useEffect)\n\tshouldSkipAutoFit(): boolean {\n\t\treturn this._skipAutoFit\n\t}\n\n\t// Reset view to default state: 100% zoom, centered at origin\n\tresetView() {\n\t\tconst zoomGroup = svg.querySelector('g.zoom') as SVGGElement\n\t\tif (zoomGroup) {\n\t\t\t// Reset to 100% zoom, centered at origin\n\t\t\tzoomGroup.setAttribute('transform', 'scale(1) translate(0, 0)')\n\t\t\tupdatePanning()\n\t\t}\n\t\t\n\t\t// Clear any saved view state so this reset position is not overridden\n\t\tclearViewState(this.id)\n\t}\n\n\t//redraw connected edges\n\tprivate redrawEdges(n: Node) {\n\t\tthis.edges.forEach(e => (n == e.from || n == e.to) && this.redrawEdge(e))\n\t\tthis.updateEdgesSel()\n\t}\n\n\tredrawEdge(e: Edge) {\n\t\tconst p = e.ref.parentElement;\n\t\tp.removeChild(e.ref)\n\t\te.ref = buildEdge(this, e)\n\t\tp.append(e.ref)\n\t}\n\n\tprivate redrawGroups(node: Node) {\n\t\tthis.groupsMap.forEach(group => {\n\t\t\t//if (group.nodes.indexOf(node) == -1) return\n\t\t\tconst p = group.ref.parentElement\n\t\t\tp.removeChild(group.ref)\n\t\t\tbuildGroup(group)\n\t\t\tp.append(group.ref)\n\t\t})\n\t}\n\n\texportSVG() {\n\t\t// Get the original SVG\n\t\tconst originalSvg: SVGSVGElement = document.querySelector('svg#graph')\n\t\tconst elastic = originalSvg.querySelector('rect.elastic')\n\t\t\n\t\t// Clone the SVG for export (completely separate from the live one)\n\t\tconst exportSvg = originalSvg.cloneNode(true) as SVGSVGElement\n\t\t\n\t\t// Remove elastic element from export\n\t\tconst exportElastic = exportSvg.querySelector('rect.elastic')\n\t\tif (exportElastic) {\n\t\t\texportElastic.remove()\n\t\t}\n\t\t\n\t\t// Calculate actual content bounds including all elements\n\t\tconst contentBounds = this.calculateContentBounds()\n\t\t\n\t\t// Add padding around content\n\t\tconst padding = 50\n\t\t\n\t\t// Calculate final export dimensions (always positive)\n\t\tconst exportWidth = contentBounds.width + (padding * 2)\n\t\tconst exportHeight = contentBounds.height + (padding * 2)\n\t\t\n\t\t// Calculate offset to move content to start at (padding, padding) within the export area\n\t\tconst offsetX = -contentBounds.x + padding\n\t\tconst offsetY = -contentBounds.y + padding\n\t\t\n\t\t// Apply export positioning to the cloned SVG elements\n\t\tconst exportZoomGroup = exportSvg.querySelector('g.zoom') as SVGGElement\n\t\tif (exportZoomGroup) {\n\t\t\t// Reset zoom to 1 and apply offset transform to position content properly\n\t\t\texportZoomGroup.setAttribute('transform', `scale(1) translate(${offsetX}, ${offsetY})`)\n\t\t}\n\t\t\n\t\t// Set proper viewBox and dimensions for export - viewBox always starts at (0,0)\n\t\texportSvg.setAttribute('viewBox', `0 0 ${exportWidth} ${exportHeight}`)\n\t\texportSvg.setAttribute('width', String(exportWidth))\n\t\texportSvg.setAttribute('height', String(exportHeight))\n\t\t\n\t\t// Add required SVG namespace for browser compatibility\n\t\texportSvg.setAttribute('xmlns', 'http://www.w3.org/2000/svg')\n\t\t\n\t\t// Inject metadata with current layout\n\t\tconst script = document.createElement('script')\n\t\tscript.setAttribute('type', 'application/json')\n\t\tthis.metadata.layout = this.exportLayout()\n\t\tscript.append('<![CDATA[' + escapeCdata(JSON.stringify(this.metadata, null, 2)) + ']]>')\n\t\texportSvg.insertBefore(script, exportSvg.firstChild)\n\t\t\n\t\t// Get the export SVG as string\n\t\tconst src = exportSvg.outerHTML\n\t\t\n\t\t// No restoration needed since we never touched the original SVG!\n\t\treturn src\n\t}\n\n\t// Calculate the actual bounds of all content including nodes, edges, and groups\n\tcalculateContentBounds(): BBox {\n\t\tlet minX = Infinity, minY = Infinity, maxX = -Infinity, maxY = -Infinity\n\t\t\n\t\t// Process nodes (including their actual dimensions)\n\t\tthis.nodes().forEach(node => {\n\t\t\tconst left = node.x - node.width / 2\n\t\t\tconst right = node.x + node.width / 2\n\t\t\tconst top = node.y - node.height / 2\n\t\t\tconst bottom = node.y + node.height / 2\n\t\t\t\n\t\t\tminX = Math.min(minX, left)\n\t\t\tmaxX = Math.max(maxX, right)\n\t\t\tminY = Math.min(minY, top)\n\t\t\tmaxY = Math.max(maxY, bottom)\n\t\t})\n\t\t\n\t\t// Process edge vertices (much faster than complex label calculations)\n\t\tthis.edgeVertices.forEach(vertex => {\n\t\t\tminX = Math.min(minX, vertex.x - 5)\n\t\t\tmaxX = Math.max(maxX, vertex.x + 5)\n\t\t\tminY = Math.min(minY, vertex.y - 5)\n\t\t\tmaxY = Math.max(maxY, vertex.y + 5)\n\t\t})\n\t\t\n\t\t// Process groups\n\t\tthis.groupsMap.forEach(group => {\n\t\t\tconst left = group.x - group.width / 2\n\t\t\tconst right = group.x + group.width / 2\n\t\t\tconst top = group.y - group.height / 2\n\t\t\tconst bottom = group.y + group.height / 2\n\t\t\t\n\t\t\tminX = Math.min(minX, left)\n\t\t\tmaxX = Math.max(maxX, right)\n\t\t\tminY = Math.min(minY, top)\n\t\t\tmaxY = Math.max(maxY, bottom)\n\t\t})\n\t\t\n\t\t// Process edges (simplified - just endpoints and vertices, skip complex label calculations)\n\t\tthis.edges.forEach(edge => {\n\t\t\t// Edge endpoints\n\t\t\tminX = Math.min(minX, edge.from.x - 10, edge.to.x - 10)\n\t\t\tmaxX = Math.max(maxX, edge.from.x + 10, edge.to.x + 10)\n\t\t\tminY = Math.min(minY, edge.from.y - 10, edge.to.y - 10)\n\t\t\tmaxY = Math.max(maxY, edge.from.y + 10, edge.to.y + 10)\n\t\t\t\n\t\t\t// Edge vertices (if any)\n\t\t\tif (edge.vertices) {\n\t\t\t\tedge.vertices.forEach(vertex => {\n\t\t\t\t\tminX = Math.min(minX, vertex.x - 10)\n\t\t\t\t\tmaxX = Math.max(maxX, vertex.x + 10)\n\t\t\t\t\tminY = Math.min(minY, vertex.y - 10)\n\t\t\t\t\tmaxY = Math.max(maxY, vertex.y + 10)\n\t\t\t\t})\n\t\t\t}\n\t\t\t\n\t\t\t// Simplified label bounds (avoid expensive path calculations)\n\t\t\tif (edge.label && edge.label.trim()) {\n\t\t\t\t// Just use approximate center between from and to nodes\n\t\t\t\tconst centerX = (edge.from.x + edge.to.x) / 2\n\t\t\t\tconst centerY = (edge.from.y + edge.to.y) / 2\n\t\t\t\tconst approxLabelSize = edge.label.length * 10 + 50 // Rough estimate\n\t\t\t\t\n\t\t\t\tminX = Math.min(minX, centerX - approxLabelSize)\n\t\t\t\tmaxX = Math.max(maxX, centerX + approxLabelSize)\n\t\t\t\tminY = Math.min(minY, centerY - 25)\n\t\t\t\tmaxY = Math.max(maxY, centerY + 25)\n\t\t\t}\n\t\t})\n\t\t\n\t\t// Handle empty graph\n\t\tif (minX === Infinity) {\n\t\t\treturn { x: 0, y: 0, width: 100, height: 100 }\n\t\t}\n\t\t\n\t\treturn {\n\t\t\tx: minX,\n\t\t\ty: minY,\n\t\t\twidth: maxX - minX,\n\t\t\theight: maxY - minY\n\t\t}\n\t}\n\n\n\n\t/**\n\t * @param full when true, the edges without vertices are saved too, used for undo buffer\n\t *        for saving, full is false\n\t */\n\texportLayout(full = false) {\n\t\tconst ret: Layout = {}\n\t\tthis.nodes().forEach(n => ret[n.id] = {x: n.x, y: n.y})\n\t\tthis.edges.forEach(e => {\n\t\t\tif (!e.vertices) return\n\t\t\tconst lst = e.vertices.filter(v => !v.auto).map(v => ({x: v.x, y: v.y, label: v.label}));\n\t\t\t(lst.length || full) && (ret[`e-${e.id}`] = lst)\n\t\t})\n\t\treturn ret\n\t}\n\n\tsetSaved() {\n\t\tthis._undo.setSaved()\n\t}\n\n\timportLayout(layout: { [key: string]: any }, rerender = false) {\n\t\t// First pass: collect all coordinate values to find bounds\n\t\tconst coordinates: Array<{x: number, y: number}> = [];\n\t\t\n\t\tObject.entries(layout).forEach(([k, v]) => {\n\t\t\tif (!k.startsWith('e-') && v.x !== undefined && v.y !== undefined) {\n\t\t\t\t// Node coordinates\n\t\t\t\tcoordinates.push({x: v.x, y: v.y});\n\t\t\t} else if (k.startsWith('e-') && Array.isArray(v)) {\n\t\t\t\t// Edge vertex coordinates\n\t\t\t\tv.forEach((vertex: any) => {\n\t\t\t\t\tif (vertex.x !== undefined && vertex.y !== undefined) {\n\t\t\t\t\t\tcoordinates.push({x: vertex.x, y: vertex.y});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t\t\n\t\t// Calculate normalization offset if we have coordinates\n\t\tlet offsetX = 0;\n\t\tlet offsetY = 0;\n\t\t\n\t\tif (coordinates.length > 0) {\n\t\t\tconst minX = Math.min(...coordinates.map(c => c.x));\n\t\t\tconst minY = Math.min(...coordinates.map(c => c.y));\n\t\t\t\n\t\t\t// Only normalize if coordinates are problematic (negative or very large)\n\t\t\tif (minX < -100 || minY < -100 || Math.max(...coordinates.map(c => c.x)) > 3000 || Math.max(...coordinates.map(c => c.y)) > 2000) {\n\t\t\t\tconst padding = 50;\n\t\t\t\toffsetX = -minX + padding;\n\t\t\t\toffsetY = -minY + padding;\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Second pass: apply coordinates with normalization\n\t\tObject.entries(layout).forEach(([k, v]) => {\n\t\t\t// nodes\n\t\t\tconst n = this.nodesMap.get(k)\n\t\t\tif (n) {\n\t\t\t\tn.x = v.x + offsetX\n\t\t\t\tn.y = v.y + offsetY\n\t\t\t} else\n\t\t\t\t// edge vertices\n\t\t\tif (k.startsWith('e-')) {\n\t\t\t\tconst edge = this.edges.find(e => e.id == k.slice(2))\n\t\t\t\tif (!edge) return;\n\t\t\t\tedge.vertices && edge.vertices.forEach(v => this.edgeVertices.delete(v.id))\n\t\t\t\tedge.vertices = v.map((p: Point) => {\n\t\t\t\t\tconst normalizedPoint = { \n\t\t\t\t\t\tx: p.x + offsetX, \n\t\t\t\t\t\ty: p.y + offsetY \n\t\t\t\t\t} as Point;\n\t\t\t\t\t// Preserve any additional properties like 'label'\n\t\t\t\t\tObject.assign(normalizedPoint, p, { x: p.x + offsetX, y: p.y + offsetY });\n\t\t\t\t\treturn edge.initVertex(normalizedPoint);\n\t\t\t\t})\n\t\t\t\treturn;\n\t\t\t}\n\t\t})\n\t\tif (rerender) {\n\t\t\tthis.nodes().forEach(n => setPosition(n.ref, n.x, n.y))\n\t\t\tthis.edges.forEach(e => this.redrawEdge(e))\n\t\t\tthis.updateEdgesSel()\n\t\t\tthis.redrawGroups(null)\n\t\t}\n\t}\n\n\tasync autoLayout(options?: import('./layout').LayoutOptions) {\n\t\ttry {\n\t\t\tconst auto = await autoLayout(this, options)\n\t\t\t\n\t\t\tthis._undo.beforeChange()\n\t\t\t\n\t\t\t// Apply node positions\n\t\t\tauto.nodes.forEach(an => {\n\t\t\t\tconst n = this.nodesMap.get(an.id)\n\t\t\t\tif (n) {\n\t\t\t\t\tthis.moveNode(n, an.x, an.y, false, true) // Skip undo for individual moves\n\t\t\t\t}\n\t\t\t})\n\t\t\t\n\t\t\t// Clear existing edge vertices before applying new layout\n\t\t\tthis.edgeVertices.clear()\n\t\t\t\n\t\t\t// Apply edge routing from ELK layout\n\t\t\tauto.edges.forEach(ae => {\n\t\t\t\tconst edge = this.edges.find(e => e.id == ae.id)\n\t\t\t\tif (edge) {\n\t\t\t\t\t// Clear existing vertices\n\t\t\t\t\tedge.vertices = []\n\t\t\t\t\t\n\t\t\t\t\t// Add routing vertices from ELK (these are proper bend points, not nodes)\n\t\t\t\t\tif (ae.vertices && ae.vertices.length > 0) {\n\t\t\t\t\t\tedge.vertices = ae.vertices.map(p => {\n\t\t\t\t\t\t\tconst vertex = edge.initVertex(p)\n\t\t\t\t\t\t\tvertex.auto = true // Mark as auto-generated\n\t\t\t\t\t\t\treturn vertex\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// Handle edge label positioning\n\t\t\t\t\tif (ae.label) {\n\t\t\t\t\t\tconst labelVertex = edge.initVertex(ae.label)\n\t\t\t\t\t\tlabelVertex.label = true\n\t\t\t\t\t\tlabelVertex.auto = true\n\t\t\t\t\t\tedge.vertices.push(labelVertex)\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// Redraw the edge with new routing\n\t\t\t\t\tthis.redrawEdge(edge)\n\t\t\t\t}\n\t\t\t})\n\t\t\t\n\t\t\t// Fit the layout to the viewport with optimal positioning\n\t\t\tthis.fitToView()\n\t\t\t\n\t\t\tthis._undo.change()\n\t\t\t\n\t\t} catch (error) {\n\t\t\tconsole.error('Auto layout failed:', error)\n\t\t\t// Could show user notification here\n\t\t}\n\t}\n\n\talignSelectionV() {\n\t\tconst lst: Point[] = this.nodes().filter(n => n.selected)\n\t\tlst.push(...Array.from(this.edgeVertices.values()).filter(v => v.selected))\n\t\tlet minY = Math.min(...lst.map(p => p.y))\n\t\tthis.nodesMap.forEach(n => n.selected && this.moveNode(n, n.x, minY, false, false))\n\t\tthis.edgeVertices.forEach(v => v.selected && this.moveEdgeVertex(v, v.x, minY, false, false))\n\t}\n\n\talignSelectionH() {\n\t\tconst lst: Point[] = this.nodes().filter(n => n.selected)\n\t\tlst.push(...Array.from(this.edgeVertices.values()).filter(v => v.selected))\n\t\tlet minX = Math.min(...lst.map(p => p.x))\n\t\tthis.nodesMap.forEach(n => n.selected && this.moveNode(n, minX, n.y, false, false))\n\t\tthis.edgeVertices.forEach(v => v.selected && this.moveEdgeVertex(v, minX, v.y, false, false))\n\t}\n\n\tdistributeSelectionH() {\n\t\tconst selectedNodes = this.nodes().filter(n => n.selected)\n\t\tconst selectedVertices = Array.from(this.edgeVertices.values()).filter(v => v.selected)\n\t\t\n\t\tif (selectedNodes.length + selectedVertices.length < 3) return // Need at least 3 elements to distribute\n\t\t\n\t\tthis._undo.beforeChange()\n\t\t\n\t\t// Combine and sort by X coordinate\n\t\tconst allElements = [...selectedNodes, ...selectedVertices]\n\t\tallElements.sort((a, b) => a.x - b.x)\n\t\t\n\t\tconst minX = allElements[0].x\n\t\tconst maxX = allElements[allElements.length - 1].x\n\t\tconst spacing = (maxX - minX) / (allElements.length - 1)\n\t\t\n\t\t// Distribute elements evenly between leftmost and rightmost\n\t\tallElements.forEach((element, index) => {\n\t\t\tconst newX = minX + (index * spacing)\n\t\t\tif ('title' in element) {\n\t\t\t\t// It's a Node\n\t\t\t\tthis.moveNode(element as Node, newX, element.y, false, true)\n\t\t\t} else {\n\t\t\t\t// It's an EdgeVertex\n\t\t\t\tthis.moveEdgeVertex(element as EdgeVertex, newX, element.y, false, true)\n\t\t\t}\n\t\t})\n\t\t\n\t\tthis._undo.change()\n\t}\n\n\tdistributeSelectionV() {\n\t\tconst selectedNodes = this.nodes().filter(n => n.selected)\n\t\tconst selectedVertices = Array.from(this.edgeVertices.values()).filter(v => v.selected)\n\t\t\n\t\tif (selectedNodes.length + selectedVertices.length < 3) return // Need at least 3 elements to distribute\n\t\t\n\t\tthis._undo.beforeChange()\n\t\t\n\t\t// Combine and sort by Y coordinate\n\t\tconst allElements = [...selectedNodes, ...selectedVertices]\n\t\tallElements.sort((a, b) => a.y - b.y)\n\t\t\n\t\tconst minY = allElements[0].y\n\t\tconst maxY = allElements[allElements.length - 1].y\n\t\tconst spacing = (maxY - minY) / (allElements.length - 1)\n\t\t\n\t\t// Distribute elements evenly between topmost and bottommost\n\t\tallElements.forEach((element, index) => {\n\t\t\tconst newY = minY + (index * spacing)\n\t\t\tif ('title' in element) {\n\t\t\t\t// It's a Node\n\t\t\t\tthis.moveNode(element as Node, element.x, newY, false, true)\n\t\t\t} else {\n\t\t\t\t// It's an EdgeVertex\n\t\t\t\tthis.moveEdgeVertex(element as EdgeVertex, element.x, newY, false, true)\n\t\t\t}\n\t\t})\n\t\t\n\t\tthis._undo.change()\n\t}\n\n\t// Set edge selection state\n\tsetEdgeSelected(edge: Edge, selected: boolean) {\n\t\t// Mark the edge as selected by selecting its connected nodes\n\t\tif (selected) {\n\t\t\tthis.setNodeSelected(edge.from, true)\n\t\t\tthis.setNodeSelected(edge.to, true)\n\t\t}\n\t\t// Update visual selection\n\t\tthis.updateEdgesSel()\n\t}\n\n\t// Fit the entire graph to the current viewport\n\tfitToView() {\n\t\tconst contentBounds = this.calculateContentBounds()\n\t\t\n\t\t// Handle edge case where there's no content\n\t\tif (contentBounds.width === 0 || contentBounds.height === 0) {\n\t\t\treturn\n\t\t}\n\t\t\n\t\t// Get viewport dimensions\n\t\tconst viewportWidth = svg.parentElement?.clientWidth || 800\n\t\tconst viewportHeight = svg.parentElement?.clientHeight || 600\n\t\t\n\t\t// Add padding around content\n\t\tconst padding = 40\n\t\t\n\t\t// Calculate zoom to fit content with padding\n\t\tconst zoomX = (viewportWidth - padding * 2) / contentBounds.width\n\t\tconst zoomY = (viewportHeight - padding * 2) / contentBounds.height\n\t\tconst optimalZoom = Math.min(zoomX, zoomY)\n\t\t\n\t\t// Clamp zoom between reasonable bounds\n\t\tconst finalZoom = Math.max(Math.min(optimalZoom, 2), 0.1)\n\t\t\n\t\t// Calculate content center in drawing coordinates\n\t\tconst contentCenterX = contentBounds.x + contentBounds.width / 2\n\t\tconst contentCenterY = contentBounds.y + contentBounds.height / 2\n\t\t\n\t\t// Calculate viewport center in screen coordinates\n\t\tconst viewportCenterX = viewportWidth / 2\n\t\tconst viewportCenterY = viewportHeight / 2\n\t\t\n\t\t// Calculate translation needed to center content in viewport\n\t\t// With translate(x,y) scale(zoom), translation is in screen coordinates\n\t\tconst translateX = viewportCenterX - (contentCenterX * finalZoom)\n\t\tconst translateY = viewportCenterY - (contentCenterY * finalZoom)\n\t\t\n\t\t// Apply zoom and translation transform\n\t\tconst zoomGroup = svg.querySelector('g.zoom') as SVGGElement\n\t\tif (zoomGroup) {\n\t\t\tzoomGroup.setAttribute('transform', `translate(${translateX}, ${translateY}) scale(${finalZoom})`)\n\t\t}\n\t\t\n\t\t// Update panning\n\t\tupdatePanning()\n\t\t\n\t\t// Save view state so this fit position is preserved after reload\n\t\tsaveViewState(this.id)\n\t}\n\n\t// Save current layout state for restoration\n\tprivate saveLayoutState(): Layout {\n\t\treturn this.exportLayout(true) // Include all vertices for complete state\n\t}\n\n\t// Restore layout state\n\tprivate restoreLayoutState(state: Layout) {\n\t\tthis.importLayout(state, true) // Rerender after restoring\n\t}\n\n\t// Grid functionality\n\tisGridVisible(): boolean {\n\t\treturn this._gridVisible;\n\t}\n\n\tisSnapToGrid(): boolean {\n\t\treturn this._snapToGrid;\n\t}\n\n\tgetGridSize(): number {\n\t\treturn this._gridSize;\n\t}\n\n\ttoggleGrid() {\n\t\tthis._gridVisible = !this._gridVisible;\n\t\tthis.updateGridDisplay();\n\t\t// Force toolbar update by dispatching a custom event\n\t\twindow.dispatchEvent(new CustomEvent('gridStateChanged'));\n\t}\n\n\ttoggleSnapToGrid() {\n\t\tthis._snapToGrid = !this._snapToGrid;\n\t\t// Force toolbar update by dispatching a custom event\n\t\twindow.dispatchEvent(new CustomEvent('gridStateChanged'));\n\t}\n\n\tsnapAllToGrid() {\n\t\tif (!this._snapToGrid) return;\n\t\t\n\t\tthis._undo.beforeChange();\n\t\tthis.nodes().forEach(node => {\n\t\t\tconst snappedX = Math.round(node.x / this._gridSize) * this._gridSize;\n\t\t\tconst snappedY = Math.round(node.y / this._gridSize) * this._gridSize;\n\t\t\tthis.moveNode(node, snappedX, snappedY, false, true);\n\t\t});\n\t\tthis._undo.change();\n\t}\n\n\t// Helper method to snap a point to grid\n\tprivate snapToGrid(x: number, y: number): { x: number, y: number } {\n\t\treturn {\n\t\t\tx: Math.round(x / this._gridSize) * this._gridSize,\n\t\t\ty: Math.round(y / this._gridSize) * this._gridSize\n\t\t};\n\t}\n\n\tupdateGridDisplay() {\n\t\tif (!svg) return;\n\n\t\t// Remove existing grid pattern and background\n\t\tconst existingGrid = svg.querySelector('#grid-pattern');\n\t\tif (existingGrid) {\n\t\t\texistingGrid.remove();\n\t\t}\n\n\t\tconst existingGridRect = svg.querySelector('#grid-background');\n\t\tif (existingGridRect) {\n\t\t\texistingGridRect.remove();\n\t\t}\n\n\t\tif (!this._gridVisible) return;\n\n\t\t// Create grid pattern in defs\n\t\tlet defs = svg.querySelector('defs');\n\t\tif (!defs) {\n\t\t\tdefs = document.createElementNS('http://www.w3.org/2000/svg', 'defs');\n\t\t\tsvg.insertBefore(defs, svg.firstChild);\n\t\t}\n\n\t\tconst pattern = document.createElementNS('http://www.w3.org/2000/svg', 'pattern');\n\t\tpattern.id = 'grid-pattern';\n\t\tpattern.setAttribute('width', this._gridSize.toString());\n\t\tpattern.setAttribute('height', this._gridSize.toString());\n\t\tpattern.setAttribute('patternUnits', 'userSpaceOnUse');\n\n\t\tconst path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n\t\tpath.setAttribute('d', `M ${this._gridSize} 0 L 0 0 0 ${this._gridSize}`);\n\t\tpath.setAttribute('fill', 'none');\n\t\tpath.setAttribute('stroke', '#d0d0d0');\n\t\tpath.setAttribute('stroke-width', '1');\n\t\tpath.setAttribute('opacity', '0.8');\n\n\t\tpattern.appendChild(path);\n\t\tdefs.appendChild(pattern);\n\n\t\t// Create grid background rectangle\n\t\tconst rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n\t\trect.id = 'grid-background';\n\t\trect.setAttribute('x', '-10000');\n\t\trect.setAttribute('y', '-10000');\n\t\trect.setAttribute('width', '20000');\n\t\trect.setAttribute('height', '20000');\n\t\trect.setAttribute('fill', 'url(#grid-pattern)');\n\t\trect.setAttribute('pointer-events', 'none');\n\n\t\t// Insert grid as first child of zoom group so it transforms with content\n\t\tconst zoomGroup = svg.querySelector('g.zoom');\n\t\tif (zoomGroup) {\n\t\t\tzoomGroup.insertBefore(rect, zoomGroup.firstChild);\n\t\t}\n\t}\n}\n\nfunction escapeCdata(code: string) {\n\treturn code.replace(/]]>/g, ']]]>]><![CDATA[')\n}\n\n\n\nlet svg: SVGSVGElement = document.querySelector('svg#graph')\nif (!svg) {\n\tsvg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n\tsvg.setAttribute('id', 'graph')\n\tsvg.addEventListener('click', e => clickListener(e))\n\t// addCursorInteraction(svg) // Call will be updated in buildGraph\n}\nsvg.setAttribute('width', '100%')\nsvg.setAttribute('height', '100%')\n\nlet clickListener: (e: MouseEvent) => void\nlet dragging = false;\nlet selectListener: (n: Node) => void\n\n\nexport const buildGraph = (data: GraphData, onNodeSelect: (n: Node) => void, dragMode: 'pan' | 'select') => {\n\t// empty svg\n\tsvg.innerHTML = defs\n\tdocument.body.append(svg) // make sure svg element is connected, we will measure texts sizes\n\t// @ts-ignore\n\tsvg.__data = data\n\n\tselectListener = onNodeSelect\n\n\t//use event delegation\n\tclickListener = e => {\n\t\tif (dragging) {\n\t\t\treturn;\n\t\t}\n\t\t// const el = (e.target as any).closest('.node > .expand');\n\t}\n\n\t_buildGraph(data)\n\tconst elasticEl = create.rect(300, 300, 50, 50, 0, 'elastic')\n\tsvg.append(elasticEl)\n\n\t// Initialize grid display now that the zoom group exists\n\tdata.updateGridDisplay()\n\n\t// Call addCursorInteraction with dragMode\n\taddCursorInteraction(svg, dragMode)\n\n\treturn {\n\t\tsvg,\n\t\tsetZoom,\n\t}\n}\n\nexport const buildGraphView = (data: GraphData) => {\n\tsvg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n\tsvg.setAttribute('id', 'graph')\n\t_buildGraph(data)\n\treturn svg\n}\n\nconst _buildGraph = (data: GraphData) => {\n\t//toplevel groups\n\tconst zoomG = create.element('g', {}, 'zoom') as SVGGElement\n\tconst nodesG = create.element('g', {}, 'nodes') as SVGGElement\n\tconst edgesG = create.element('g', {}, 'edges') as SVGGElement\n\tconst groupsG = create.element('g', {}, 'groups') as SVGGElement\n\tzoomG.append(groupsG, edgesG, nodesG)\n\n\n\tdata.nodesMap.forEach((n) => {\n\t\tbuildNode(n, data)\n\t\tnodesG.append(n.ref)\n\t})\n\n\tdata.edges.forEach(e => {\n\t\tbuildEdge(data, e)\n\t\tedgesG.append(e.ref)\n\t})\n\n\tdata.groupsMap.forEach((group) => {\n\t\tbuildGroup(group)\n\t\tgroupsG.append(group.ref)\n\t})\n\n\tsvg.append(zoomG)\n}\n\nfunction buildEdge(data: GraphData, edge: Edge) {\n\tconst n1 = edge.from, n2 = edge.to;\n\n\tconst g = create.element('g', {}, 'edge') as SVGGElement\n\tg.setAttribute('id', edge.id)\n\tg.setAttribute('data-from', edge.from.id)\n\tg.setAttribute('data-to', edge.to.id)\n\n\tconst position = (edge.style.position || 50) / 100\n\n\t// Calculate edge vertices using utility function\n\tconst vertices = calculateEdgeVertices(edge, data)\n\n\t// Calculate label position using utility function\n\tconst pLabel = calculateLabelPosition(vertices, position, n1)\n\n\tconst {bg, txt, bbox} = buildEdgeLabel(pLabel, edge)\n\tg.append(bg, txt)\n\n\t// Create edge segments and path using utility function\n\tconst {segments, path} = createEdgeSegments(vertices, bbox, n1, n2)\n\n\tconst p = create.path(path, {'marker-end': 'url(#arrow)'}, 'edge')\n\tp.setAttribute('fill', 'none')\n\tp.setAttribute('stroke', edge.style.color)\n\tp.setAttribute('stroke-width', String(edge.style.thickness))\n\tp.setAttribute('stroke-linecap', 'round')\n\tedge.style.dashed && p.setAttribute('stroke-dasharray', '8')\n\tg.append(p)\n\n\t// drag handlers\n\tedge.vertices = vertices.slice(1, -1).map(p => edge.initVertex(p))\n\tedge.vertices.forEach((p, i) => {\n\t\tconst v = p as EdgeVertex\n\t\tv.ref = create.element('circle', {id: v.id, cx: p.x, cy: p.y, r: 7, fill: 'none'}, 'v-dot')\n\t\tv.selected && v.ref.classList.add('selected')\n\t\tv.auto && v.ref.classList.add('auto')\n\t\tg.append(v.ref)\n\t})\n\n\tedge.ref = g\n\treturn g\n}\n\nfunction buildEdgeLabel(pLabel: Point, edge: Edge) {\n\t// label\n\tconst fontSize = edge.style.fontSize\n\tlet {txt, dy, maxW} = create.textArea(edge.label, 200, fontSize, false, pLabel.x, pLabel.y, 'middle')\n\t//move text up to center relative to the edge\n\tdy -= fontSize / 2\n\ttxt.setAttribute('y', String(pLabel.y - dy / 2))\n\n\tmaxW += fontSize\n\tapplyStyle(txt, styles.edgeText)\n\ttxt.setAttribute('stroke', 'none')\n\ttxt.setAttribute('font-size', String(edge.style.fontSize))\n\ttxt.setAttribute('fill', edge.style.color)\n\n\tconst bbox = {x: pLabel.x - maxW / 2, y: pLabel.y - dy / 2, width: maxW, height: dy}\n\tconst bg = create.rect(bbox.width, bbox.height, bbox.x, bbox.y)\n\tapplyStyle(bg, styles.edgeRect)\n\ttxt.setAttribute('data-field', 'label')\n\n\tbbox.x += bbox.width / 2\n\tbbox.y += bbox.height / 2\n\treturn {bg, txt, bbox}\n}\n\n\nfunction buildNode(n: Node, data: GraphData) {\n\t// @ts-ignore\n\twindow.gdata = data\n\n\t// Use the pre-calculated dimensions from addNode\n\tconst w = n.width;\n\tconst h = n.height;\n\n\tconst g = create.element('g', {}, 'node') as SVGGElement\n\tg.setAttribute('id', n.id)\n\tn.selected && g.classList.add('selected')\n\tsetPosition(g, n.x, n.y)\n\n\t// Ensure we use the correct shape from style, defaulting to Box\n\tconst shapeType = n.style.shape || 'Box';\n\tconst shapeFn = shapes[shapeType.toLowerCase()] || shapes.box\n\tconst shape: SVGElement = shapeFn(g, n);\n\n\tshape.classList.add('nodeBorder')\n\n\t// Apply generic styles first\n\tapplyStyle(shape, styles.nodeBorder)\n\t// Then apply tag-specific styles to override generic ones\n\tshape.setAttribute('fill', n.style.background)\n\tshape.setAttribute('stroke', n.style.stroke)\n\t// Consistent border width for all elements\n\tshape.setAttribute('stroke-width', '3')\n\tshape.setAttribute('opacity', String(n.style.opacity))\n\tsetBorderStyle(shape, n.style.border)\n\n\tconst tg = create.element('g') as SVGGElement\n\tlet cy = Number(g.getAttribute('label-offset-y')) || 0\n\t\n\t// Consistent text width calculation for all shapes\n\tconst textPadding = 12; // Standard padding\n\tconst maxTextWidth = Math.max(w - (textPadding * 2), 80); // Ensure reasonable minimum width\n\t\n\t{\n\t\tconst fontSize = n.style.fontSize\n\t\t// Use 95% of available width for titles - much more aggressive\n\t\tconst {txt, dy} = create.textArea(n.title, maxTextWidth * 0.95, fontSize, true, 0, cy, 'middle')\n\t\tapplyStyle(txt, styles.nodeText)\n\t\ttxt.setAttribute('fill', n.style.color)\n\t\ttxt.setAttribute('data-field', 'name')\n\n\t\ttg.append(txt)\n\t\tcy += dy + 6 // Reduced spacing after title\n\t}\n\t{\n\t\tconst txt = create.text(`[${n.sub}]`, {x: 0, y: cy, 'text-anchor': 'middle'})\n\t\tapplyStyle(txt, styles.nodeText)\n\t\ttxt.setAttribute('fill', n.style.color)\n\t\ttxt.setAttribute('font-size', String(0.75 * n.style.fontSize))\n\t\ttg.append(txt)\n\t\tcy += 12 // Reduced spacing\n\t}\n\t{\n\t\tcy += 6 // Reduced spacing before description\n\t\tconst fontSize = Math.min(n.style.fontSize * 0.8, 16) // Keep smaller description text\n\t\t// Use 95% of available width for descriptions too - much more aggressive\n\t\tconst {txt, dy} = create.textArea(n.description, maxTextWidth * 0.95, fontSize, false, 0, cy, 'middle')\n\t\tapplyStyle(txt, styles.nodeText)\n\t\ttxt.setAttribute('fill', n.style.color)\n\t\ttxt.setAttribute('data-field', 'description')\n\t\ttg.append(txt)\n\t\tcy += dy\n\t}\n\n\t// Better vertical centering with improved padding\n\tsetPosition(tg, 0, -cy / 2)\n\tg.append(tg)\n\n\t// @ts-ignore\n\tg.__data = n;\n\tn.ref = g;\n\n\treturn g\n}\n\n\nfunction buildGroup(group: Group) {\n\tif (group.nodes.length == 0) {\n\t\treturn\n\t}\n\tconst g = create.element('g', {}, 'group') as SVGGElement\n\n\tlet p0: Point = {x: 1e100, y: 1e100}, p1: Point = {x: 0, y: 0}\n\tgroup.nodes.forEach(n => {\n\t\tconst b = {x: n.x - n.width / 2, y: n.y - n.height / 2, width: n.width, height: n.height}\n\t\tp0.x = Math.min(p0.x, b.x)\n\t\tp0.y = Math.min(p0.y, b.y)\n\t\tp1.x = Math.max(p1.x, b.x + b.width)\n\t\tp1.y = Math.max(p1.y, b.y + b.height)\n\t})\n\tconst pad = 25\n\tconst w = Math.max(p1.x - p0.x, 200)\n\tconst h = p1.y - p0.y + pad * 1.5\n\tconst bb = {\n\t\tx: p0.x - pad,\n\t\ty: p0.y - pad,\n\t\twidth: w + pad * 2,\n\t\theight: h + pad * 2,\n\t}\n\tconst r = create.rect(bb.width, bb.height, bb.x, bb.y)\n\tgroup.x = bb.x + bb.width / 2\n\tgroup.y = bb.y + bb.height / 2\n\tgroup.width = bb.width\n\tgroup.height = bb.height\n\tapplyStyle(r, styles.groupRect)\n\tgroup.style.stroke && r.setAttribute('stroke', group.style.stroke)\n\tgroup.style.background && r.setAttribute('fill', group.style.background)\n\n\tconst txt = create.text(group.name, {x: p0.x, y: bb.y + bb.height - styles.groupText[\"font-size\"]})\n\tapplyStyle(txt, styles.groupText)\n\tgroup.style.color && txt.setAttribute('fill', group.style.color)\n\n\tg.append(r, txt)\n\tgroup.ref = g\n}\n\nfunction findClosestSegment(graph: GraphData, p: Point) {\n\t// find the closest point on a segment\n\tlet fnd = {dst: Number.POSITIVE_INFINITY, pos: -1, edge: null as Edge, prj: null as Point}\n\tgraph.edges.forEach(edge => {\n\t\tconst vertices = edge.vertices || []\n\t\tconst pts = [edge.from, ...vertices, edge.to]\n\t\tfor (let i = 1; i < pts.length; i++) {\n\t\t\tconst prj = project(p, pts[i - 1], pts[i])\n\t\t\tconst dst = cabDistance(p, prj)\n\t\t\tif (dst > 50) continue\n\t\t\tif (dst < fnd.dst) {\n\t\t\t\tfnd = {dst, pos: i, prj, edge}\n\t\t\t}\n\t\t}\n\t})\n\treturn fnd.edge ? fnd : null\n}\n\nfunction mouseToDrawing(e: MouseEvent): Point {\n\t// transform event coords to drawing coords\n\tconst b = svg.getBoundingClientRect()\n\tconst z = getZoom()\n\t\n\t// Get current pan transform\n\tconst currentTransform = getCurrentTransform()\n\t\n\t// Convert screen coordinates to drawing coordinates accounting for zoom and pan\n\t// The transform values are in screen coordinates, so we need to divide by zoom and subtract\n\treturn {\n\t\tx: (e.clientX - b.x - currentTransform.x) / z,\n\t\ty: (e.clientY - b.y - currentTransform.y) / z\n\t}\n}\n\ninterface Handle extends Point {\n\tid: string\n\tselected?: boolean\n\tref?: SVGElement\n}\n\n// Custom cursor interaction that prioritizes panning over selection\nfunction addCustomCursorInteraction(svg: SVGSVGElement, conn: {\n\tnodeFromEvent(e: MouseEvent): Handle | null;\n\tsetSelection(handles: Handle[]): void;\n\tsetDragging(dragging: boolean): void;\n\tisSelected(handle: Handle): boolean;\n\tgetSelection(): Handle[];\n\tgetZoom(): number;\n\tmoveNode(h: Handle, x: number, y: number): void;\n\tboxSelection(box: DOMRect, add: boolean): void;\n\tupdatePanning(): void;\n}, dragMode: 'pan' | 'select') {\n\tlet ini: { x: number; y: number; n: Handle }[] = []\n\tlet elastic: any = null\n\tlet isPanning = false\n\tlet panStartX = 0\n\tlet panStartY = 0\n\tlet initialTransform = { x: 0, y: 0 }\n\tlet pendingSelectionChange: { node: Handle; shiftKey: boolean } | null = null\n\tlet hasDragged = false\n\t\n\t// Store event listeners for cleanup\n\tconst eventListeners: Array<{ element: Element | Window, event: string, handler: EventListener }> = []\n\n\t// Simple elastic selection box implementation - use mouseToDrawing for proper coordinate conversion\n\tfunction createElastic() {\n\t\tlet startDrawingX = 0, startDrawingY = 0, rect: SVGRectElement | null = null\n\t\t\n\t\treturn {\n\t\t\tini(e: MouseEvent) {\n\t\t\t\t// Use mouseToDrawing to get proper drawing coordinates (accounts for zoom and pan)\n\t\t\t\tconst pt = mouseToDrawing(e)\n\t\t\t\tstartDrawingX = pt.x\n\t\t\t\tstartDrawingY = pt.y\n\t\t\t\t\n\t\t\t\trect = document.createElementNS(\"http://www.w3.org/2000/svg\", \"rect\")\n\t\t\t\trect.setAttribute('fill', 'rgba(0, 100, 255, 0.1)')\n\t\t\t\trect.setAttribute('stroke', 'rgba(0, 100, 255, 0.5)')\n\t\t\t\trect.setAttribute('stroke-width', '1')\n\t\t\t\trect.setAttribute('stroke-dasharray', '3,3')\n\t\t\t\trect.setAttribute('x', String(startDrawingX))\n\t\t\t\trect.setAttribute('y', String(startDrawingY))\n\t\t\t\trect.setAttribute('width', '0')\n\t\t\t\trect.setAttribute('height', '0')\n\t\t\t\t\n\t\t\t\t// Add to the zoom group so it transforms with the content\n\t\t\t\tconst zoomGroup = svg.querySelector('g.zoom')\n\t\t\t\tif (zoomGroup) {\n\t\t\t\t\tzoomGroup.appendChild(rect)\n\t\t\t\t} else {\n\t\t\t\t\tsvg.appendChild(rect)\n\t\t\t\t}\n\t\t\t},\n\t\t\tupdate(e: MouseEvent) {\n\t\t\t\tif (!rect) return\n\t\t\t\t\n\t\t\t\t// Convert current mouse position to drawing coordinates (accounts for zoom and pan)\n\t\t\t\tconst currentPt = mouseToDrawing(e)\n\t\t\t\tconst currentDrawingX = currentPt.x\n\t\t\t\tconst currentDrawingY = currentPt.y\n\t\t\t\t\n\t\t\t\t// Calculate rectangle bounds in drawing coordinates\n\t\t\t\tconst x = Math.min(startDrawingX, currentDrawingX)\n\t\t\t\tconst y = Math.min(startDrawingY, currentDrawingY)\n\t\t\t\tconst width = Math.abs(currentDrawingX - startDrawingX)\n\t\t\t\tconst height = Math.abs(currentDrawingY - startDrawingY)\n\t\t\t\t\n\t\t\t\trect.setAttribute('x', String(x))\n\t\t\t\trect.setAttribute('y', String(y))\n\t\t\t\trect.setAttribute('width', String(width))\n\t\t\t\trect.setAttribute('height', String(height))\n\t\t\t},\n\t\t\tend(): DOMRect | null {\n\t\t\t\tif (!rect) return null\n\t\t\t\t\n\t\t\t\t// Get final rectangle bounds in drawing coordinates\n\t\t\t\tconst x = parseFloat(rect.getAttribute('x') || '0')\n\t\t\t\tconst y = parseFloat(rect.getAttribute('y') || '0')\n\t\t\t\tconst width = parseFloat(rect.getAttribute('width') || '0')\n\t\t\t\tconst height = parseFloat(rect.getAttribute('height') || '0')\n\t\t\t\t\n\t\t\t\trect.remove()\n\t\t\t\trect = null\n\t\t\t\t\n\t\t\t\t// Return drawing coordinates directly for boxSelection since we're now working in the same coordinate system\n\t\t\t\tif (width > 5 && height > 5) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tx: x, y: y, width: width, height: height,\n\t\t\t\t\t\tleft: x, top: y, right: x + width, bottom: y + height\n\t\t\t\t\t} as DOMRect\n\t\t\t\t}\n\t\t\t\treturn null\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction getCurrentTransformLocal() {\n\t\tconst zoomGroup = svg.querySelector('g.zoom') as SVGGElement\n\t\tif (!zoomGroup) return { x: 0, y: 0 }\n\t\t\n\t\tconst transform = zoomGroup.getAttribute('transform') || ''\n\t\tconst translateMatch = transform.match(/translate\\(([^,]+),([^)]+)\\)/)\n\t\tif (translateMatch) {\n\t\t\treturn {\n\t\t\t\tx: parseFloat(translateMatch[1]) || 0,\n\t\t\t\ty: parseFloat(translateMatch[2]) || 0\n\t\t\t}\n\t\t}\n\t\treturn { x: 0, y: 0 }\n\t}\n\n\tfunction setTransform(x: number, y: number) {\n\t\tconst zoomGroup = svg.querySelector('g.zoom') as SVGGElement\n\t\tif (!zoomGroup) return\n\t\t\n\t\tconst zoom = getZoom()\n\t\tzoomGroup.setAttribute('transform', `translate(${x}, ${y}) scale(${zoom})`)\n\t}\n\n\tfunction onMouseDown(e: MouseEvent) {\n\t\te.preventDefault();\n\t\thasDragged = false\n\t\tpendingSelectionChange = null\n\n\t\tconst node = conn.nodeFromEvent(e)\n\t\t\n\t\t// Determine effective mode: invert if shift is held\n\t\tconst effectiveMode = e.shiftKey ? (dragMode === 'pan' ? 'select' : 'pan') : dragMode\n\t\t\n\t\tif (!node) { // Clicked on empty space\n\t\t\tif (effectiveMode === 'pan') {\n\t\t\t\t// Pan mode: pan and deselect\n\t\t\t\tisPanning = true;\n\t\t\t\telastic = null;\n\t\t\t\tpanStartX = e.clientX;\n\t\t\t\tpanStartY = e.clientY;\n\t\t\t\tinitialTransform = getCurrentTransformLocal();\n\t\t\t\tini = [];\n\t\t\t\t// Deselect all elements when clicking empty space in pan mode\n\t\t\t\tconn.setSelection([]);\n\t\t\t} else {\n\t\t\t\t// Select mode: ONLY select, no panning\n\t\t\t\tisPanning = false;\n\t\t\t\telastic = createElastic();\n\t\t\t\tif (elastic) elastic.ini(e);\n\t\t\t\tini = [];\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t// Clicked on a node/vertex - behavior depends on effective mode\n\t\tif (effectiveMode === 'pan') {\n\t\t\t// Pan mode: select the element, don't pan\n\t\t\tisPanning = false;\n\t\t\telastic = null;\n\t\t\t// Always select the clicked element in pan mode\n\t\t\tconn.setSelection([node]);\n\t\t\tini = [{ x: node.x, y: node.y, n: node }];\n\t\t} else {\n\t\t\t// Select mode: selection/drag logic\n\t\t\tisPanning = false; // Ensure no panning if a node is clicked\n\t\t\telastic = null; // Ensure no selection box if a node is clicked\n\t\t\tconst nodes = conn.getSelection()\n\t\t\t\n\t\t\tif (e.shiftKey && dragMode === 'select') {\n\t\t\t\t// Shift+click in select mode: immediately change selection (no dragging expected)\n\t\t\t\tif (conn.isSelected(node)) {\n\t\t\t\t\tconst index = nodes.findIndex(n => n.id === node.id)\n\t\t\t\t\tif (index >= 0) nodes.splice(index, 1)\n\t\t\t\t} else {\n\t\t\t\t\tnodes.push(node)\n\t\t\t\t}\n\t\t\t\tconn.setSelection(nodes)\n\t\t\t\tini = nodes.map(n => ({ x: n.x, y: n.y, n }))\n\t\t\t} else {\n\t\t\t\t// Regular click: defer selection change until we know if it's a drag or click\n\t\t\t\tif (conn.isSelected(node) && nodes.length > 1) {\n\t\t\t\t\t// Clicking on a selected node in a multi-selection - prepare to drag all\n\t\t\t\t\tini = nodes.map(n => ({ x: n.x, y: n.y, n }))\n\t\t\t\t\t// Don't change selection yet - wait to see if user drags\n\t\t\t\t} else if (!conn.isSelected(node)) {\n\t\t\t\t\t// Clicking on an unselected node - defer selection change\n\t\t\t\t\tpendingSelectionChange = { node, shiftKey: e.shiftKey }\n\t\t\t\t\t// For now, prepare to drag just this node\n\t\t\t\t\tini = [{ x: node.x, y: node.y, n: node }]\n\t\t\t\t} else {\n\t\t\t\t\t// Clicking on the only selected node - prepare to drag it\n\t\t\t\t\tini = [{ x: node.x, y: node.y, n: node }]\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction onMouseMove(e: MouseEvent, dx: number, dy: number) {\n\t\t// Check if we've moved enough to consider this a drag\n\t\tconst dragThreshold = 3 // pixels\n\t\tif (!hasDragged && (Math.abs(dx) > dragThreshold || Math.abs(dy) > dragThreshold)) {\n\t\t\thasDragged = true\n\t\t\t\n\t\t\t// If we have a pending selection change and we're now dragging, apply it\n\t\t\tif (pendingSelectionChange) {\n\t\t\t\tconst nodes = conn.getSelection()\n\t\t\t\tnodes.length = 0\n\t\t\t\tnodes.push(pendingSelectionChange.node)\n\t\t\t\tconn.setSelection(nodes)\n\t\t\t\tini = [{ x: pendingSelectionChange.node.x, y: pendingSelectionChange.node.y, n: pendingSelectionChange.node }]\n\t\t\t\tpendingSelectionChange = null\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (isPanning) {\n\t\t\t// Pan the view - apply mouse delta directly (no zoom division needed)\n\t\t\t// setTransform expects screen coordinates, dx/dy are already screen pixel deltas\n\t\t\tconst newX = initialTransform.x + dx\n\t\t\tconst newY = initialTransform.y + dy\n\t\t\tsetTransform(newX, newY)\n\t\t} else if (ini.length > 0 && hasDragged) {\n\t\t\t// Move selected nodes/vertices (only if we've actually started dragging)\n\t\t\t// dx, dy are screen pixel deltas, convert to drawing coordinate deltas\n\t\t\tconst zoom = conn.getZoom()\n\t\t\tconst drawingDx = dx / zoom\n\t\t\tconst drawingDy = dy / zoom\n\t\t\tini.forEach(item => {\n\t\t\t\t// item.x, item.y are initial drawing coordinates\n\t\t\t\t// Add the drawing coordinate delta to get new position\n\t\t\t\tconn.moveNode(item.n, item.x + drawingDx, item.y + drawingDy)\n\t\t\t})\n\t\t\tconn.setDragging(true)\n\t\t} else if (elastic) {\n\t\t\t// Update selection box\n\t\t\telastic.update(e)\n\t\t\tconn.setDragging(true)\n\t\t}\n\t}\n\n\tfunction onMouseUp(e: MouseEvent) {\n\t\tconn.setDragging(false)\n\t\t\n\t\t// If we have a pending selection change and didn't drag, apply it now (it was just a click)\n\t\tif (pendingSelectionChange && !hasDragged) {\n\t\t\tconst nodes = conn.getSelection()\n\t\t\tnodes.length = 0\n\t\t\tnodes.push(pendingSelectionChange.node)\n\t\t\tconn.setSelection(nodes)\n\t\t}\n\t\t\n\t\tif (elastic) {\n\t\t\tconst box = elastic.end()\n\t\t\tif (box) {\n\t\t\t\tconn.boxSelection(box, e.shiftKey)\n\t\t\t} else if (!ini.length) {\n\t\t\t\t// Deselect if no box was drawn\n\t\t\t\tconn.setSelection([])\n\t\t\t}\n\t\t\telastic = null\n\t\t}\n\t\t\n\t\t// Save view state if user was panning (user-initiated view change)\n\t\tif (isPanning && hasDragged) {\n\t\t\tconst graphData = (svg as any).__data as GraphData\n\t\t\tif (graphData && graphData.id) {\n\t\t\t\tsaveViewState(graphData.id)\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Reset state\n\t\tpendingSelectionChange = null\n\t\thasDragged = false\n\t\tisPanning = false\n\t\tconn.updatePanning()\n\t}\n\n\t// Add drag and drop functionality\n\tfunction addDnd(element: SVGSVGElement) {\n\t\tlet md: { ex: number; ey: number } | null = null\n\n\t\tfunction convertEvent(e: MouseEvent | TouchEvent): MouseEvent {\n\t\t\tif ('changedTouches' in e && e.changedTouches) {\n\t\t\t\treturn e.changedTouches[0] as any\n\t\t\t}\n\t\t\treturn e as MouseEvent\n\t\t}\n\n\t\tfunction onMouseMoveHandler(e: MouseEvent | TouchEvent) {\n\t\t\tif (!md) return\n\t\t\te = convertEvent(e)\n\t\t\tonMouseMove(e, e.clientX - md.ex, e.clientY - md.ey)\n\t\t}\n\n\t\tfunction removeListeners() {\n\t\t\tdocument.removeEventListener('touchmove', onMouseMoveHandler as any)\n\t\t\tdocument.removeEventListener('mousemove', onMouseMoveHandler as any)\n\t\t\tdocument.removeEventListener('mouseup', onMouseUpHandler)\n\t\t\tdocument.removeEventListener('touchend', onMouseUpHandler)\n\t\t}\n\n\t\tfunction onMouseUpHandler(e: MouseEvent | TouchEvent) {\n\t\t\tremoveListeners()\n\t\t\tonMouseUp(convertEvent(e))\n\t\t\tmd = null\n\t\t}\n\n\t\tfunction onMouseDownHandler(e: MouseEvent | TouchEvent) {\n\t\t\te = convertEvent(e)\n\t\t\tmd = { ex: e.clientX, ey: e.clientY }\n\t\t\tonMouseDown(e)\n\t\t\tdocument.addEventListener('touchmove', onMouseMoveHandler as any)\n\t\t\tdocument.addEventListener('mousemove', onMouseMoveHandler as any)\n\t\t\tdocument.addEventListener('mouseup', onMouseUpHandler)\n\t\t\tdocument.addEventListener('touchend', onMouseUpHandler)\n\t\t}\n\n\t\telement.addEventListener('mousedown', onMouseDownHandler as any)\n\t\telement.addEventListener('touchstart', onMouseDownHandler as any)\n\t\t\n\t\t// Track these listeners for cleanup\n\t\teventListeners.push(\n\t\t\t{ element, event: 'mousedown', handler: onMouseDownHandler as any },\n\t\t\t{ element, event: 'touchstart', handler: onMouseDownHandler as any }\n\t\t)\n\t}\n\n\taddDnd(svg)\n\t\n\t// Return cleanup function\n\treturn () => {\n\t\teventListeners.forEach(({ element, event, handler }) => {\n\t\t\telement.removeEventListener(event, handler)\n\t\t})\n\t}\n}\n\nexport function addCursorInteraction(svg: SVGSVGElement, dragMode: 'pan' | 'select') {\n\t// Clean up any existing event listeners to prevent conflicts\n\tconst existingCleanup = (svg as any).__cursorInteractionCleanup\n\tif (existingCleanup) {\n\t\texistingCleanup()\n\t}\n\n\tfunction getData(el: SVGElement) {\n\t\t// @ts-ignore\n\t\treturn el.__data\n\t}\n\n\tconst gd = () => (getData(svg) as GraphData)\n\t\n\t// Store event listeners for cleanup\n\tconst eventListeners: Array<{ element: Element | Window, event: string, handler: EventListener }> = []\n\n\tconst beforeUnloadHandler = (e: BeforeUnloadEvent) => {\n\t\tif (!gd().changed()) return\n\t\te.preventDefault()\n\t\te.returnValue = ''\n\t}\n\twindow.addEventListener(\"beforeunload\", beforeUnloadHandler)\n\teventListeners.push({ element: window, event: 'beforeunload', handler: beforeUnloadHandler })\n\n\tfunction setDotSelected(d: Handle, selected: boolean) {\n\t\td.selected = selected\n\t\tconst dotEl = svg.querySelector('#' + d.id)\n\t\td.selected ? dotEl.classList.add('selected') : dotEl.classList.remove('selected')\n\t}\n\n\t// show moving dot along edge when ALT is pressed\n\tconst mouseMoveHandler = (e: MouseEvent) => {\n\t\tif (!e.altKey) return\n\t\tconst fnd = findClosestSegment(gd(), mouseToDrawing(e))\n\t\tif (fnd) {\n\t\t\tconst {prj} = fnd\n\t\t\tconst parent = svg.querySelector('g.edges')\n\t\t\tlet dot = parent.querySelector('#prj')\n\t\t\tif (!dot) {\n\t\t\t\tdot = create.element('circle', {id: 'prj', cx: prj.x, cy: prj.y, r: 7})\n\t\t\t\tparent.append(dot)\n\t\t\t}\n\t\t\tdot.setAttribute('cx', String(prj.x))\n\t\t\tdot.setAttribute('cy', String(prj.y))\n\t\t} else {\n\t\t\tremovePrjDot()\n\t\t}\n\t}\n\tsvg.addEventListener('mousemove', mouseMoveHandler)\n\teventListeners.push({ element: svg, event: 'mousemove', handler: mouseMoveHandler })\n\n\tconst keyUpHandler = (e: KeyboardEvent) => {\n\t\tconst key = findShortcut(e, true)\n\t\tif (key == ADD_VERTEX || key == ADD_LABEL_VERTEX) return\n\t\tremovePrjDot()\n\t}\n\twindow.addEventListener('keyup', keyUpHandler)\n\teventListeners.push({ element: window, event: 'keyup', handler: keyUpHandler })\n\n\tfunction removePrjDot() {\n\t\tconst el = svg.querySelector('g.edges #prj')\n\t\tel && el.parentElement.removeChild(el)\n\t}\n\n\tconst clickHandler = (e: MouseEvent) => {\n\t\tconst key = findShortcut(e, true)\n\t\tif (key != ADD_LABEL_VERTEX && key != ADD_VERTEX) return\n\t\tconst fnd = findClosestSegment(gd(), mouseToDrawing(e))\n\t\tif (fnd) {\n\t\t\tconst {edge, pos, prj} = fnd\n\t\t\t// depending on keyboard modifier, make it label position\n\t\t\tgd().insertEdgeVertex(edge, prj, pos, key == ADD_LABEL_VERTEX)\n\t\t\tremovePrjDot()\n\t\t}\n\t}\n\tsvg.addEventListener('click', clickHandler)\n\teventListeners.push({ element: svg, event: 'click', handler: clickHandler })\n\n\tconst wheelHandler = (e: WheelEvent) => {\n\t\t// Handle wheel zoom directly without relying on shortcuts\n\t\t// deltaY > 0 means scrolling down (zoom out), deltaY < 0 means scrolling up (zoom in)\n\t\tconst delta = Math.sign(e.deltaY) * 0.1 // Normalize to 0.1 zoom steps\n\t\tconst currentZoom = getZoom()\n\t\tconst newZoom = Math.max(0.1, Math.min(5, currentZoom - delta)) // Clamp zoom between 0.1 and 5\n\t\t\n\t\tif (newZoom !== currentZoom) {\n\t\t\t// Convert absolute screen coordinates to SVG-relative coordinates\n\t\t\tconst rect = svg.getBoundingClientRect()\n\t\t\tconst svgX = e.clientX - rect.left\n\t\t\tconst svgY = e.clientY - rect.top\n\t\t\tsetZoomCentered(newZoom, svgX, svgY)\n\t\t\te.preventDefault()\n\t\t\t\n\t\t\t// Save view state after user wheel zoom\n\t\t\tconst graphData = (svg as any).__data as GraphData\n\t\t\tif (graphData && graphData.id) {\n\t\t\t\tsaveViewState(graphData.id)\n\t\t\t}\n\t\t}\n\t}\n\tsvg.addEventListener('wheel', wheelHandler)\n\teventListeners.push({ element: svg, event: 'wheel', handler: wheelHandler })\n\n\tconst keyDownHandler = (e: KeyboardEvent) => {\n\t\tconst shortcut = findShortcut(e)\n\t\tif (shortcut) {\n\t\t\te.preventDefault() // Prevent browser default for all recognized shortcuts\n\t\t}\n\t\t\n\t\tswitch (shortcut) {\n\t\t\tcase DEL_VERTEX:\n\t\t\t\tArray.from(gd().edgeVertices.values()).filter(v => v.selected).forEach(v => {\n\t\t\t\t\tgd().deleteEdgeVertex(v)\n\t\t\t\t})\n\t\t\t\tbreak\n\t\t\tcase UNDO:\n\t\t\t\tgd().undo()\n\t\t\t\tbreak\n\t\t\tcase REDO:\n\t\t\t\tgd().redo()\n\t\t\t\tbreak\n\t\t\tcase ZOOM_IN:\n\t\t\t\tconst newZoomIn = Math.min(5, getZoom() * 1.2)\n\t\t\t\t// Center zoom on viewport center like mouse wheel\n\t\t\t\tsetZoomCentered(newZoomIn)\n\t\t\t\tsaveViewState(gd().id) // Save after user keyboard zoom\n\t\t\t\tbreak\n\t\t\tcase ZOOM_OUT:\n\t\t\t\tconst newZoomOut = Math.max(0.1, getZoom() / 1.2)\n\t\t\t\t// Center zoom on viewport center like mouse wheel\n\t\t\t\tsetZoomCentered(newZoomOut)\n\t\t\t\tsaveViewState(gd().id) // Save after user keyboard zoom\n\t\t\t\tbreak\n\t\t\tcase ZOOM_100:\n\t\t\t\t// Center zoom on viewport center like mouse wheel\n\t\t\t\tsetZoomCentered(1)\n\t\t\t\tsaveViewState(gd().id) // Save after user keyboard zoom\n\t\t\t\tbreak\n\t\t\tcase ZOOM_FIT:\n\t\t\t\tgd().fitToView()\n\t\t\t\t// Don't save view state here - fitToView should not be persisted\n\t\t\t\tbreak\n\t\t\tcase SELECT_ALL:\n\t\t\t\tgd().nodes().forEach(n => gd().setNodeSelected(n, true))\n\t\t\t\tgd().edgeVertices.forEach(v => setDotSelected(v, true))\n\t\t\t\tbreak\n\t\t\tcase DESELECT:\n\t\t\t\tgd().nodes().forEach(n => gd().setNodeSelected(n, false))\n\t\t\t\tgd().edgeVertices.forEach(v => setDotSelected(v, false))\n\t\t\t\tbreak\n\t\t}\n\t}\n\twindow.addEventListener('keydown', keyDownHandler)\n\teventListeners.push({ element: window, event: 'keydown', handler: keyDownHandler })\n\n\t// Custom cursor interaction with pan-first behavior\n\tconst customInteractionCleanup = addCustomCursorInteraction(svg, {\n\t\tnodeFromEvent(e: MouseEvent): Handle {\n\t\t\te.preventDefault()\n\t\t\t// node clicked\n\t\t\tlet el = (e.target as SVGElement).closest('g.nodes g.node') as SVGElement\n\t\t\tif (el) return getData(el)\n\t\t\t// vertex dot clicked\n\t\t\tel = (e.target as SVGElement).closest('g.edges g.edge .v-dot') as SVGElement\n\t\t\tif (el) {\n\t\t\t\treturn gd().edgeVertices.get(el.id)\n\t\t\t}\n\t\t\treturn null\n\t\t},\n\t\tsetSelection(handles: Handle[]) {\n\t\t\t// nodes\n\t\t\tgd().nodes().forEach(n => gd().setNodeSelected(n, handles.some(h => h.id == n.id)))\n\t\t\t// dots\n\t\t\tgd().edgeVertices.forEach(d => setDotSelected(d, handles.some(h => h.id == d.id)))\n\t\t\tselectListener(gd().nodes().find(n => n.selected))\n\t\t},\n\t\tsetDragging(d: boolean) {\n\t\t\tdragging = d\n\t\t},\n\t\tisSelected(handle: Handle): boolean {\n\t\t\treturn handle.selected\n\t\t},\n\t\tgetSelection(): Handle[] {\n\t\t\tconst ret: Handle[] = gd().nodes().filter(n => n.selected)\n\t\t\tgd().edgeVertices.forEach(d => d.selected && ret.push(d))\n\t\t\treturn ret\n\t\t},\n\t\tgetZoom: getZoom,\n\t\tmoveNode(h: Handle, x: number, y: number) {\n\t\t\tif (gd().nodesMap.has(h.id))\n\t\t\t\tgd().moveNode(h as Node, x, y)\n\t\t\telse {\n\t\t\t\t(h as EdgeVertex).auto = false\n\t\t\t\tgd().moveEdgeVertex(h as EdgeVertex, x, y)\n\t\t\t}\n\t\t},\n\t\tboxSelection(box: DOMRect, add) {\n\t\t\t// Box is now already in drawing coordinates, no need to scale\n\t\t\t// nodes\n\t\t\tgd().nodesMap.forEach(n => {\n\t\t\t\tconst inBox = boxesOverlap(uncenterBox(n), box)\n\t\t\t\tif (inBox) {\n\t\t\t\t\t// Toggle selection for elements in the box\n\t\t\t\t\tgd().setNodeSelected(n, !n.selected)\n\t\t\t\t} else if (!add) {\n\t\t\t\t\t// If not holding shift and element is outside box, deselect it\n\t\t\t\t\tgd().setNodeSelected(n, false)\n\t\t\t\t}\n\t\t\t})\n\t\t\t// dots\n\t\t\tgd().edgeVertices.forEach(d => {\n\t\t\t\tconst inBox = insideBox(d, box, false)\n\t\t\t\tif (inBox) {\n\t\t\t\t\t// Toggle selection for elements in the box\n\t\t\t\t\tsetDotSelected(d, !d.selected)\n\t\t\t\t} else if (!add) {\n\t\t\t\t\t// If not holding shift and element is outside box, deselect it\n\t\t\t\t\tsetDotSelected(d, false)\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tselectListener(gd().nodes().find(n => n.selected))\n\t\t},\n\t\tupdatePanning: updatePanning,\n\t}, dragMode)\n\t\n\t// Store cleanup function on the SVG element for later use\n\tconst cleanup = () => {\n\t\teventListeners.forEach(({ element, event, handler }) => {\n\t\t\telement.removeEventListener(event, handler)\n\t\t})\n\t\tif (customInteractionCleanup) {\n\t\t\tcustomInteractionCleanup()\n\t\t}\n\t}\n\t\n\t// Store cleanup function on SVG element\n\t;(svg as any).__cursorInteractionCleanup = cleanup\n}\n\nexport function getZoom() {\n\tif (!svg) return 1\n\tconst el = svg.querySelector('g.zoom') as SVGGElement\n\tif (!el) return 1\n\t\n\t// Parse zoom from transform attribute to match how we set it\n\tconst transform = el.getAttribute('transform') || ''\n\tconst scaleMatch = transform.match(/scale\\(([^)]+)\\)/)\n\tif (scaleMatch) {\n\t\treturn parseFloat(scaleMatch[1]) || 1\n\t}\n\treturn 1\n}\n\n// svgPadding is now imported as SVG_PADDING from constants.ts\n\nexport function setZoom(zoom: number) {\n\tif (!svg) return\n\tconst el = svg.querySelector('g.zoom') as SVGGElement\n\tif (!el) return\n\t\n\t// Preserve existing translation when setting zoom\n\tconst currentTransform = getCurrentTransform()\n\tel.setAttribute('transform', `translate(${currentTransform.x}, ${currentTransform.y}) scale(${zoom})`)\n\t\n\t// also set panning size\n\tupdatePanning()\n}\n\nexport function setZoomCentered(newZoom: number, centerX?: number, centerY?: number) {\n\tconst el = svg.querySelector('g.zoom') as SVGGElement\n\tconst oldZoom = getZoom()\n\t\n\t// If no center point provided, use viewport center\n\tif (centerX === undefined || centerY === undefined) {\n\t\t// Use the parent container's dimensions for the visible viewport\n\t\t// The SVG might be larger than the visible area due to overflow\n\t\tconst container = svg.parentElement\n\t\tif (container) {\n\t\t\tcenterX = container.clientWidth / 2\n\t\t\tcenterY = container.clientHeight / 2\n\t\t} else {\n\t\t\t// Fallback to SVG dimensions if no parent\n\t\t\tcenterX = svg.clientWidth / 2\n\t\t\tcenterY = svg.clientHeight / 2\n\t\t}\n\t}\n\t\n\t// Get current transform\n\tconst currentTransform = getCurrentTransform()\n\t\n\t// Convert screen coordinates to drawing coordinates\n\t// For transform order translate(tx, ty) scale(s):\n\t// screen_point = (drawing_point * scale) + translation\n\t// So: drawing_point = (screen_point - translation) / scale\n\tconst drawingX = (centerX - currentTransform.x) / oldZoom\n\tconst drawingY = (centerY - currentTransform.y) / oldZoom\n\t\n\t// Calculate new translation to keep the same drawing point at the same screen position\n\t// screen_point = (drawing_point * new_scale) + new_translation\n\t// So: new_translation = screen_point - (drawing_point * new_scale)\n\tconst newTranslateX = centerX - (drawingX * newZoom)\n\tconst newTranslateY = centerY - (drawingY * newZoom)\n\t\n\t// Apply the new transform\n\tel.setAttribute('transform', `translate(${newTranslateX}, ${newTranslateY}) scale(${newZoom})`)\n\t\n\t// Update panning\n\tupdatePanning()\n}\n\nfunction getCurrentTransform() {\n\tif (!svg) return { x: 0, y: 0 }\n\tconst el = svg.querySelector('g.zoom') as SVGGElement\n\tif (!el) return { x: 0, y: 0 }\n\t\n\tconst transform = el.getAttribute('transform') || ''\n\tconst translateMatch = transform.match(/translate\\(([^,]+),([^)]+)\\)/)\n\tif (translateMatch) {\n\t\treturn {\n\t\t\tx: parseFloat(translateMatch[1]) || 0,\n\t\t\ty: parseFloat(translateMatch[2]) || 0\n\t\t}\n\t}\n\treturn { x: 0, y: 0 }\n}\n\nfunction updatePanning() {\n\tif (!svg) return\n\tconst el = svg.querySelector('g.zoom') as SVGGElement\n\tif (!el) return\n\tconst bb = el.getBBox()\n\tconst zoom = getZoom()\n\tif (!svg.parentElement) return\n\tconst w = Math.max(svg.parentElement.clientWidth / zoom, bb.x + bb.width + SVG_PADDING)\n\tconst h = Math.max(svg.parentElement.clientHeight / zoom, bb.y + bb.height + SVG_PADDING)\n\tsvg.setAttribute('width', String(w * zoom))\n\tsvg.setAttribute('height', String(h * zoom))\n\t\n\t// Note: View state saving removed from here to prevent interference with reset/fit functions\n\t// View state is now only saved on user interactions and page unload\n}\n\n// Optimized version that uses pre-calculated content bounds instead of expensive getBBox()\nfunction updatePanningOptimized(graphData: GraphData) {\n\tconst bb = graphData.calculateContentBounds() // Use already calculated bounds\n\tconst zoom = getZoom()\n\tconst w = Math.max(svg.parentElement.clientWidth / zoom, bb.x + bb.width + SVG_PADDING)\n\tconst h = Math.max(svg.parentElement.clientHeight / zoom, bb.y + bb.height + SVG_PADDING)\n\tsvg.setAttribute('width', String(w * zoom))\n\tsvg.setAttribute('height', String(h * zoom))\n}\n\nexport const getZoomAuto = () => {\n\t// Get the graph data to calculate proper content bounds\n\tconst graphData = (svg as any).__data as GraphData\n\tif (!graphData) {\n\t\treturn 1 // Default zoom if no graph data\n\t}\n\t\n\t// Use proper content bounds calculation\n\tconst contentBounds = graphData.calculateContentBounds()\n\tconst viewportWidth = svg.parentElement?.clientWidth || 800\n\tconst viewportHeight = svg.parentElement?.clientHeight || 600\n\t\n\t// Add padding around content\n\tconst padding = 40\n\t\n\t// Calculate zoom to fit content with padding\n\tconst zoomX = (viewportWidth - padding * 2) / contentBounds.width\n\tconst zoomY = (viewportHeight - padding * 2) / contentBounds.height\n\tconst zoom = Math.min(zoomX, zoomY)\n\t\n\t// Clamp zoom between reasonable bounds\n\treturn Math.max(Math.min(zoom, 2), 0.1)\n}\n\nconst setBorderStyle = (el: SVGElement, style: string) => {\n\tif (style == 'Dashed') el.setAttribute('stroke-dasharray', '4')\n\telse if (style == 'Dotted') el.setAttribute('stroke-dasharray', '2')\n}\n\nconst styles = {\n\t//node styles\n\tnodeBorder: {\n\t\t// Don't set fill and stroke here - let tag-specific styles handle colors\n\t\tfilter: 'url(#shadow)',\n\t},\n\tnodeText: {\n\t\t'font-family': 'Arial, sans-serif',\n\t\tstroke: \"none\"\n\t},\n\n\t//edge styles\n\tedgeText: {\n\t\t'font-family': 'Arial, sans-serif',\n\t\tstroke: \"none\"\n\t},\n\n\tedgeRect: {\n\t\tfill: \"none\",\n\t\tstroke: \"none\",\n\t},\n\n\t//group styles\n\tgroupRect: {\n\t\t//fill: \"none\",\n\t\tfill: \"rgba(0, 0, 0, 0.02)\",\n\t\tstroke: \"#666\",\n\t\t'stroke-width': 3,\n\t\t\"stroke-dasharray\": 4,\n\t},\n\tgroupText: {\n\t\tfill: \"#666\",\n\t\t\"font-size\": 22,\n\t\tcursor: \"default\"\n\t}\n}\n\n// View state persistence - similar to undo cache but for zoom/pan\nconst viewStateCache = new Map<string, { zoom: number; transform: { x: number; y: number } }>();\n\n// Save current view state (zoom and pan)\nexport function saveViewState(graphId: string) {\n\tif (!svg) return;\n\t\n\tconst zoom = getZoom();\n\tconst transform = getCurrentTransform();\n\t\n\tconst state = {\n\t\tzoom,\n\t\ttransform: { x: transform.x, y: transform.y }\n\t};\n\t\n\tviewStateCache.set(graphId, state);\n}\n\n// Restore view state if it exists\nexport function restoreViewState(graphId: string): boolean {\n\tif (!svg || !viewStateCache.has(graphId)) {\n\t\treturn false;\n\t}\n\t\n\tconst state = viewStateCache.get(graphId);\n\tif (!state) {\n\t\treturn false;\n\t}\n\t\n\t// Restore zoom and transform\n\tconst zoomGroup = svg.querySelector('g.zoom') as SVGGElement;\n\tif (zoomGroup) {\n\t\tzoomGroup.setAttribute('transform', `scale(${state.zoom}) translate(${state.transform.x}, ${state.transform.y})`);\n\t\tupdatePanning();\n\t}\n\t\n\treturn true;\n}\n\n// Clear view state for a graph\nexport function clearViewState(graphId: string) {\n\tviewStateCache.delete(graphId);\n}","export const defs = `\n<defs>\n\t<marker id=\"arrow\" viewBox=\"0 0 5 5\" refX=\"4\" refY=\"2.5\" \n\t\tmarkerWidth=\"5\" markerHeight=\"5\" orient=\"auto\" markerUnits=\"strokeWidth\">\n\t\t<path fill=\"#aaa\" stroke-width=\"1\" stroke=\"none\" d=\"M0,0 L5,2.5 L0,5 Z\" class=\"arrowHead\"/>\n\t</marker>\n\t<g id=\"icon-circle\" transform=\"translate(0,-12)\" class=\"icon\">\n\t\t<circle cx=\"7\" cy=\"7\" r=\"7\"/>\n\t</g>\n\t<g id=\"icon-cube\" transform=\"translate(0, -14)\" class=\"icon\">\n\t\t<path d=\"M 5 0 h 10 v 10 l -5 5 h -10 v -10 l 5 -5 M 0 5 h 10 v 10 M 15 0 l -5 5\"/>\n\t</g>\n\t<filter id=\"shadow\">\n\t\t<feDropShadow dx=\"3\" dy=\"3\" stdDeviation=\"5\" flood-color=\"#00000030\" flood-opacity=\"1\"></feDropShadow>\n\t</filter>\n</defs>`","import { Point, BBox, calculateDistance } from './constants';\nimport { intersectPolylineBox, Segment } from './intersect';\n\n// Define interfaces locally since they're not exported from graph.ts\ninterface NodeStyle {\n\tbackground?: string;\n\tstroke?: string;\n\topacity?: number;\n\tfontSize?: number;\n\tshape?: string;\n\tborder?: string;\n}\n\ninterface Node extends Point {\n\tid: string;\n\ttitle: string;\n\tsub: string;\n\tdescription: string;\n\twidth: number;\n\theight: number;\n\tref?: SVGGElement;\n\tselected?: boolean;\n\tintersect: (p: Point) => Point;\n\tstyle: NodeStyle;\n}\n\ninterface EdgeVertex extends Point {\n\tid: string;\n\tselected?: boolean;\n\tref?: SVGElement;\n\tlabel?: boolean;\n\tauto?: boolean;\n}\n\ninterface EdgeStyle {\n\tcolor?: string;\n\tthickness?: number;\n\tfontSize?: number;\n\tposition?: number;\n\tdashed?: boolean;\n}\n\ninterface Edge {\n\tid: string;\n\tlabel: string;\n\tfrom: Node;\n\tto: Node;\n\tvertices?: EdgeVertex[];\n\tref?: SVGGElement;\n\tstyle: EdgeStyle;\n\tinitVertex: (p: Point) => EdgeVertex;\n}\n\ninterface GraphData {\n\tid: string;\n\tname: string;\n\tnodesMap: Map<string, Node>;\n\tedges: Edge[];\n\tedgeVertices: Map<string, EdgeVertex>;\n\tgroupsMap: Map<string, any>;\n\tmetadata: any;\n}\n\n/**\n * Calculate edge vertices, handling multi-edge scenarios and auto-vertices\n */\nexport function calculateEdgeVertices(edge: Edge, data: GraphData): Point[] {\n\tconst n1 = edge.from, n2 = edge.to;\n\t\n\t// if vertices exists, follow them\n\tlet vertices: Point[] = edge.vertices ? edge.vertices.concat() : [];\n\t// remove auto vertices, they will be regenerated\n\tconst tmp = (vertices as EdgeVertex[]);\n\ttmp.forEach(v => v.auto && data.edgeVertices.delete(v.id))\n\tvertices = tmp.filter(v => !v.auto)\n\n\tif (vertices.length == 0) {\n\t\t// for edges with same \"from\" and \"to\", we must spread the labels so they don't overlap\n\t\t// lookup the other \"same\" edges\n\t\tconst sameEdges = data.edges.filter(e => e.from == edge.from && e.to == edge.to)\n\t\tlet spreadPos = 0\n\t\tif (sameEdges.length > 1) {\n\t\t\tconst idx = sameEdges.indexOf(edge) // my index in the list of same edges\n\t\t\tspreadPos = idx - (sameEdges.length - 1) / 2\n\n\t\t\tlet spreadX = 0, spreadY = 0;\n\t\t\tif (Math.abs(n1.x - n2.x) > Math.abs(n1.y - n2.y)) {\n\t\t\t\tspreadY = spreadPos * 70\n\t\t\t} else {\n\t\t\t\tspreadX = spreadPos * 200\n\t\t\t}\n\t\t\tconst v = edge.initVertex({\n\t\t\t\tx: (n1.x + n2.x) / 2 + spreadX,\n\t\t\t\ty: (n1.y + n2.y) / 2 + spreadY\n\t\t\t})\n\t\t\tv.label = true\n\t\t\tv.auto = true\n\t\t\tvertices.push(v)\n\t\t} else {\n\t\t\t// If there are no user-defined vertices and not a multi-edge scenario,\n\t\t\t// we don't create any auto-vertices here. AutoLayout will provide them.\n\t\t\t// The path will be a straight line between n1 and n2 (after intersection points are calculated).\n\t\t\t// ELK/autoLayout is responsible for providing bend points for non-straight lines.\n\t\t}\n\t}\n\n\tvertices.unshift(n1)\n\tvertices.push(n2)\n\n\tvertices[0] = n1.intersect(vertices[1])\n\tvertices[vertices.length - 1] = n2.intersect(vertices[vertices.length - 2])\n\t\n\treturn vertices;\n}\n\n/**\n * Calculate the position for edge label along the edge path\n */\nexport function calculateLabelPosition(vertices: Point[], position: number, fallback: Point): Point {\n\t// where along the edge is the label?\n\t// position of label\n\tlet pLabel: Point = vertices.find(v => (v as any).label)\n\tif (!pLabel) {\n\t\tlet sum = 0 // total length of the edge, sum of segments\n\t\tfor (let i = 1; i < vertices.length; i++) {\n\t\t\tsum += calculateDistance(vertices[i - 1], vertices[i])\n\t\t}\n\t\tpLabel = {x: fallback.x, y: fallback.y} // fallback for corner cases\n\t\tlet acc = 0\n\t\tfor (let i = 1; i < vertices.length; i++) {\n\t\t\tconst d = calculateDistance(vertices[i - 1], vertices[i])\n\t\t\tif (acc + d > sum * position) {\n\t\t\t\tconst pos = (sum * position - acc) / d\n\t\t\t\tpLabel = {\n\t\t\t\t\tx: vertices[i - 1].x + (vertices[i].x - vertices[i - 1].x) * pos,\n\t\t\t\t\ty: vertices[i - 1].y + (vertices[i].y - vertices[i - 1].y) * pos\n\t\t\t\t}\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tacc += d\n\t\t}\n\t}\n\treturn pLabel;\n}\n\n/**\n * Create edge segments and generate SVG path\n */\nexport function createEdgeSegments(vertices: Point[], bbox: BBox, n1: Point, n2: Point): { segments: Segment[], path: string } {\n\tconst segments: Segment[] = []\n\tfor (let i = 1; i < vertices.length; i++) {\n\t\tsegments.push({p: vertices[i - 1], q: vertices[i]})\n\t}\n\t// splice edge over label box\n\tintersectPolylineBox(segments, bbox)\n\n\t// Generate path based on routing style - SIMPLIFIED\n\tlet path: string\n\t\n\t// Always draw a polyline through the segments.\n\t// If segments.length is 1 (meaning direct connection or only label vertex), it will be a straight line.\n\t// If autoLayout provided bend points, those will be in `segments`.\n\tif (segments.length > 0) {\n\t\tpath = `M${segments[0].p.x},${segments[0].p.y}`\n\t\tfor (let i = 0; i < segments.length; i++) {\n\t\t\tconst s = segments[i]\n\t\t\t// For polylines, we just draw line segments to each vertex point.\n\t\t\t// The ELK 'POLYLINE' routing should give us the necessary bend points.\n\t\t\tpath += ` L${s.q.x},${s.q.y}`\n\t\t}\n\t} else {\n\t\t// Fallback for edges with no segments (should ideally not happen if n1 and n2 are defined)\n\t\t// Draw a straight line between n1 and n2 directly if no vertices/segments exist.\n\t\t// Note: Intersection points are calculated before this, so n1/n2 are already adjusted.\n\t\tpath = `M${n1.x},${n1.y} L${n2.x},${n2.y}`\n\t}\n\t\n\treturn { segments, path };\n}","import {GraphData} from \"./graph-view/graph\";\n\n\ninterface Model {\n\tname: string\n\tdescription: string\n\tversion: string\n\tmodel: {\n\t\tenterprise: {\n\t\t\tname: string\n\t\t}\n\t\tpeople: Element[]\n\t\tsoftwareSystems: Element[]\n\t\tdeploymentNodes: Element[]\n\t}\n\tviews: {\n\t\tsystemLandscapeViews: View[]\n\t\tcontainerViews: View[]\n\t\tcomponentViews: View[]\n\t\tdynamicViews: View[]\n\t\tdeploymentViews: View[]\n\t\tstyles: {\n\t\t\telements: {\n\t\t\t\t[key: string]: string\n\t\t\t}[];\n\t\t\trelationships: {\n\t\t\t\t[key: string]: string\n\t\t\t}[]\n\t\t}\n\t}\n}\n\ninterface Layouts {\n\t[key: string]: { // keyed by view key\n\t\t[key: string]: { x: number; y: number } // keyed by element id\n\t}\n}\n\ninterface Element {\n\tid: string;\n\tname: string;\n\ttechnology?: string;\n\tdescription?: string;\n\tparent?: Element;\n\ttags?: string;\n\tlocation?: string;\n\tcontainers?: Element[];\n\tcomponents?: Element[];\n\trelationships?: Relation[];\n\tproperties?: { [key: string]: string }\n\tchildren?: Element[];\n\tinfrastructureNodes?: Element[];\n}\n\ninterface Relation {\n\tid: string;\n\tdescription: string;\n\ttags: string;\n\tsourceId: string;\n\tdestinationId: string;\n\ttechnology: string;\n\tinteractionStyle: string;\n}\n\ninterface View {\n\tkey: string;\n\ttitle: string;\n\tdescription: string\n\telements: {\n\t\tid: string\n\t}[];\n\trelationships: {\n\t\tid: string;\n\t\tvertices: { x: number; y: number }[];\n\t\trouting: string; // takes priority over style\n\t}[];\n\tsoftwareSystemId: string;\n}\n\ninterface Metadata {\n\tname: string\n\tdescription: string\n\tversion: string\n\telements: {\n\t\tid: string\n\t\ttags?: string;\n\t\tlocation?: string;\n\t\tproperties?: { [key: string]: string };\n\t\telementViewKey?: string;\n\t\ttechnology?: string;\n\t}[]\n}\n\nexport type ViewsList = {\n\tkey: string;\n\ttitle: string;\n\tsection: string;\n}[]\n\nexport const parseView = (model: Model, layouts: Layouts, viewKey: string) => {\n\n\tconst elements = new Map<string, Element>();\n\tconst relations = new Map<string, Relation>();\n\n\tconst collectRels = (el: Element) => {\n\t\tif (Array.isArray(el.relationships)) {\n\t\t\tel.relationships.forEach(rel => {\n\t\t\t\trelations.set(rel.id, rel)\n\t\t\t})\n\t\t}\n\t}\n\n\t// People\n\tmodel.model.people && model.model.people.forEach((el: Element) => {\n\t\telements.set(el.id, el)\n\t\tif (Array.isArray(el.relationships)) {\n\t\t\tel.relationships.forEach(rel => {\n\t\t\t\trelations.set(rel.id, rel)\n\t\t\t})\n\t\t}\n\t})\n\t// Software Systems\n\tmodel.model.softwareSystems && model.model.softwareSystems.forEach((el: Element) => {\n\t\telements.set(el.id, el)\n\t\tcollectRels(el)\n\n\t\tif (Array.isArray(el.containers)) {\n\t\t\tel.containers.forEach((el1: Element) => {\n\t\t\t\tel1.parent = el;\n\t\t\t\telements.set(el1.id, el1)\n\t\t\t\tcollectRels(el1)\n\t\t\t\tif (Array.isArray(el1.components)) {\n\t\t\t\t\tel1.components.forEach((el2: Element) => {\n\t\t\t\t\t\tel2.parent = el1;\n\t\t\t\t\t\telements.set(el2.id, el2)\n\t\t\t\t\t\tcollectRels(el2)\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t})\n\n\t// Deployment Nodes\n\tif (model.model.deploymentNodes) {\n\t\tconst containerInstances = (el: any) => {\n\t\t\tel.containerInstances && el.containerInstances.forEach((item: any) => {\n\t\t\t\tconst el1 = {...elements.get(item.containerId), id: item.id}\n\t\t\t\telements.set(el1.id, el1)\n\t\t\t\tel1.parent = el\n\t\t\t\tcollectRels(item)\n\t\t\t})\n\t\t}\n\n\t\tconst recAddNodes = (el: Element, parent: Element) => {\n\t\t\tel.parent = parent;\n\t\t\telements.set(el.id, el)\n\t\t\tcollectRels(el)\n\t\t\tcontainerInstances(el)\n\t\t\tel.children && el.children.forEach((el1: Element) => recAddNodes(el1, el))\n\t\t\tel.infrastructureNodes && el.infrastructureNodes.forEach((el1: Element) => recAddNodes(el1, el))\n\t\t}\n\n\t\tmodel.model.deploymentNodes.forEach((el: Element) => recAddNodes(el, null))\n\t}\n\n\t// Create graph from selected view\n\tconst {view, section} = getView(model, viewKey)\n\n\tif (!view) return null\n\n\tconst graph = new GraphData(view.key, view.title || view.key)\n\tconst metadata: Metadata = {name: graph.name, description: view.description, version: model.version, elements: []}\n\tgraph.metadata = metadata\n\n\tif (!view.elements) return graph\n\n\t//grouping rules - elements that are groups will not be nodes\n\tconst groupingIDs: { [key: string]: boolean } = {}\n\tif (section == 'deploymentViews' || section == 'containerViews') {\n\t\tview.elements.forEach(ref => {\n\t\t\tconst el = elements.get(ref.id)\n\t\t\tif (el?.parent) {\n\t\t\t\tgroupingIDs[el.parent.id] = true\n\t\t\t}\n\t\t})\n\t} else if (view.softwareSystemId) {\n\t\t//don't show grouping if the element is listed in the view\n\t\tif (!view.elements.find(ref => ref.id == view.softwareSystemId))\n\t\t\tgroupingIDs[view.softwareSystemId] = true\n\t} else if (section == 'systemLandscapeViews') {\n\t\t// create a virtual parent element from enterprise\n\t\tconst p: Element = {id: '__enterprise__', ...model.model.enterprise}\n\t\telements.set(p.id, p)\n\t\tif (model.model.people) model.model.people.filter(el => el.location != 'External').forEach(el => el.parent = p)\n\t\tif (model.model.softwareSystems) model.model.softwareSystems.filter(el => el.location != 'External').forEach(el => el.parent = p)\n\t\tgroupingIDs[p.id] = true\n\t}\n\n\tconst styles = model.views.styles\n\n\t//nodes\n\tview.elements.forEach((ref) => {\n\t\t// except grouping elements\n\t\tif (groupingIDs[ref.id]) return\n\n\t\tconst el = elements.get(ref.id)\n\n\t\tlet sub = ''\n\t\tlet style = {}\n\t\tif (el) {\n\t\t\tconst tags = el.tags.split(',')\n\t\t\tsub = tags[tags.length - 1] // subtitle is [<last tag>]\n\t\t\tif (el.technology)\n\t\t\t\tsub += ': ' + el.technology // or [<technology>: <last tag>]\n\n\t\t\ttags.forEach(tag => {\n\t\t\t\tconst s = styles && styles.elements && styles.elements.find(s => s.tag == tag)\n\t\t\t\ts && (style = {...style, ...s})\n\t\t\t})\n\t\t}\n\n\t\tgraph.addNode(\n\t\t\tref.id,\n\t\t\tel ? (el.name || ref.id) : ref.id,\n\t\t\tsub,\n\t\t\t(el && el.description) ? el.description : '',\n\t\t\tstyle\n\t\t)\n\t\tel && metadata.elements.push({\n\t\t\tid: el.id,\n\t\t\ttags: el.tags,\n\t\t\tlocation: el.location,\n\t\t\tproperties: el.properties,\n\t\t\telementViewKey: lookupElementKeyView(model, el.id),\n\t\t\ttechnology: el.technology\n\t\t})\n\t})\n\t//edges\n\tif (Array.isArray(view.relationships)) {\n\t\tview.relationships.forEach(ref => {\n\t\t\tconst rel = relations.get(ref.id)\n\t\t\tif (!rel) return;\n\n\t\t\tif (!graph.nodesMap.has(rel.sourceId)) {\n\t\t\t\tif (elements.has(rel.sourceId)) {\n\t\t\t\t\tconst el = elements.get(rel.sourceId)\n\t\t\t\t\tconsole.warn('Element not found in this view: ', el.id, el.name)\n\t\t\t\t} else {\n\t\t\t\t\tconsole.warn('Element not found: ', rel.sourceId)\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (!graph.nodesMap.has(rel.destinationId)) {\n\t\t\t\tif (elements.has(rel.destinationId)) {\n\t\t\t\t\tconst el = elements.get(rel.destinationId)\n\t\t\t\t\tconsole.warn('Element not found in this view: ', el.id, el.name)\n\t\t\t\t} else {\n\t\t\t\t\tconsole.warn('Element not found: ', rel.destinationId)\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet style: any = {}\n\t\t\trel.tags.split(',').forEach(tag => {\n\t\t\t\tconst s = styles && styles.relationships && styles.relationships.find(s => s.tag == tag)\n\t\t\t\ts && (style = {...style, ...s})\n\t\t\t})\n\t\t\tif (ref.routing) style.routing = ref.routing\n\n\t\t\tgraph.addEdge(rel.id, rel.sourceId, rel.destinationId, rel.description, ref.vertices, style)\n\t\t})\n\t}\n\n\t//groups\n\t//sort by depth to solve dependency\n\tconst level = (el: Element) => {\n\t\tlet i = 0\n\t\tfor (let p = el.parent; p; p = p.parent) i++;\n\t\treturn i\n\t}\n\tconst gElements = Object.keys(groupingIDs)\n\t\t.map(id => elements.get(id))\n\t\t.sort((a, b) => level(a) > level(b) ? -1 : 1)\n\n\tgElements.forEach(parent => {\n\t\tlet style = {}\n\t\tif (section == 'deploymentViews') {\n\t\t\tconst el = elements.get(parent.id)\n\t\t\tconst tags = el.tags.split(',')\n\t\t\ttags.forEach(tag => {\n\t\t\t\tconst s = styles && styles.elements && styles.elements.find(s => s.tag == tag)\n\t\t\t\ts && (style = {...style, ...s})\n\t\t\t})\n\t\t}\n\t\t\n\t\t// Filter group members more carefully to respect boundaries\n\t\tconst groupMembers = view.elements\n\t\t\t.map(ref => elements.get(ref.id))\n\t\t\t.filter(el => {\n\t\t\t\tif (!el || el.parent !== parent) return false;\n\t\t\t\t\n\t\t\t\t// For system landscape views, respect the location-based grouping\n\t\t\t\tif (section === 'systemLandscapeViews' && parent.id === '__enterprise__') {\n\t\t\t\t\t// Only include elements that are explicitly non-external\n\t\t\t\t\treturn el.location !== 'External';\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// For other view types, include if parent matches\n\t\t\t\treturn true;\n\t\t\t})\n\t\t\t.map(el => el.id);\n\t\t\n\t\t// Only create group if it has members\n\t\tif (groupMembers.length > 0) {\n\t\t\tgraph.addGroup(\n\t\t\t\tparent.id,\n\t\t\t\tparent.name,\n\t\t\t\tgroupMembers,\n\t\t\t\tstyle\n\t\t\t)\n\t\t}\n\t})\n\n\t//layout if any and init graph\n\tgraph.init(layouts[graph.id])\n\treturn graph\n}\n\n// lookup the view in all Views sections in the model. return the view and the section\nfunction getView(model: Model, viewKey: string) {\n\tlet view: View = null, section: string = ''\n\tObject.keys(model.views).filter(s => s.endsWith('Views')).some((s: string) => {\n\t\treturn ((model.views as any)[s]).some((v: View) => {\n\t\t\tif (v.key == viewKey) {\n\t\t\t\tview = v\n\t\t\t\tsection = s\n\t\t\t\treturn true\n\t\t\t}\n\t\t})\n\t})\n\treturn {view, section}\n}\n\n\nfunction lookupElementKeyView(model: any, softwareSystemId: string) {\n\tlet key: string = undefined\n\tObject.keys(model.views).filter(s => s.endsWith('Views')).some((s: string) => {\n\t\treturn ((model.views as any)[s]).some((v: View) => {\n\t\t\tif (v.softwareSystemId == softwareSystemId) {\n\t\t\t\tkey = v.key\n\t\t\t\treturn true\n\t\t\t}\n\t\t})\n\t})\n\treturn key\n}\n\nexport const listViews = (model: any) => {\n\tconst viewsList: ViewsList = []\n\tconst sections = Object.keys(model.views).filter(section => section.endsWith('Views'))\n\tsections.forEach(s => {\n\t\tmodel.views[s].forEach((v: View) => {\n\t\t\tviewsList.push({key: v.key, title: v.title || v.key, section: s})\n\t\t})\n\t})\n\treturn viewsList;\n}\n","import { useState, useCallback, useEffect } from 'react';\nimport { GraphData } from './graph-view/graph';\nimport { parseView } from './parseModel';\nimport { LayoutOptions } from './graph-view/layout';\nimport { \n  findShortcut, \n  HELP, \n  SAVE, \n  TOGGLE_DRAG_MODE,\n  ALIGN_HORIZONTAL,\n  ALIGN_VERTICAL,\n  DISTRIBUTE_HORIZONTAL,\n  DISTRIBUTE_VERTICAL,\n  AUTO_LAYOUT,\n  RESET_POSITION,\n  TOGGLE_GRID,\n  TOGGLE_SNAP_TO_GRID,\n  SNAP_ALL_TO_GRID,\n  MOVE_LEFT,\n  MOVE_RIGHT,\n  MOVE_UP,\n  MOVE_DOWN,\n  MOVE_LEFT_FINE,\n  MOVE_RIGHT_FINE,\n  MOVE_UP_FINE,\n  MOVE_DOWN_FINE\n} from './shortcuts';\n\n// Global state for graphs to preserve edits\nconst graphs: { [key: string]: GraphData } = {};\n\n// Custom hook for graph management\nexport const useGraph = (model: any, layouts: any, currentID: string): GraphData | null => {\n  if (graphs[currentID]) {\n    return graphs[currentID];\n  }\n  \n  const graph = parseView(model, layouts, currentID);\n  if (graph) {\n    graphs[currentID] = graph;\n  }\n  \n  return graph;\n};\n\n// Custom hook for auto layout functionality\nexport const useAutoLayout = (graph: GraphData) => {\n  const [layouting, setLayouting] = useState(false);\n\n  const handleAutoLayout = useCallback(async () => {\n    setLayouting(true);\n    try {\n      const options: LayoutOptions = {\n        direction: 'DOWN',\n      };\n      await graph.autoLayout(options);\n    } catch (error) {\n      console.error('Layout failed:', error);\n      alert('Layout failed. See console for details.');\n    } finally {\n      setLayouting(false);\n    }\n  }, [graph]);\n\n  return { layouting, handleAutoLayout };\n};\n\n// Custom hook for save functionality\nexport const useSave = (graph: GraphData, currentID: string) => {\n  const [saving, setSaving] = useState(false);\n\n  const handleSave = useCallback(async () => {\n    setSaving(true);\n    \n    try {\n      const response = await fetch('data/save?id=' + encodeURIComponent(currentID), {\n        method: 'post',\n        body: graph.exportSVG()\n      });\n      \n      if (response.status !== 202) {\n        alert('Error saving\\nSee terminal output.');\n      } else {\n        graph.setSaved();\n      }\n    } catch (error) {\n      console.error('Save failed:', error);\n      alert('Save failed. See console for details.');\n    } finally {\n      setSaving(false);\n    }\n  }, [graph, currentID]);\n\n  return { saving, handleSave };\n};\n\n// Custom hook for keyboard shortcuts\nexport const useKeyboardShortcuts = (\n  toggleHelp: () => void,\n  saveLayout: () => void,\n  graph?: GraphData,\n  dragMode?: 'pan' | 'select',\n  setDragMode?: (mode: 'pan' | 'select') => void,\n  onAutoLayout?: () => void\n) => {\n  useEffect(() => {\n    const handleKeyDown = (e: KeyboardEvent) => {\n      const shortcut = findShortcut(e);\n      \n      // Prevent browser default for all recognized shortcuts\n      if (shortcut) {\n        e.preventDefault();\n      }\n      \n      if (shortcut === HELP) {\n        toggleHelp();\n      } else if (shortcut === SAVE) {\n        saveLayout();\n      } else if (shortcut === TOGGLE_DRAG_MODE && setDragMode && dragMode) {\n        setDragMode(dragMode === 'pan' ? 'select' : 'pan');\n      } else if (graph) {\n        // Graph-dependent shortcuts\n        if (shortcut === ALIGN_HORIZONTAL) {\n          graph.alignSelectionH();\n        } else if (shortcut === ALIGN_VERTICAL) {\n          graph.alignSelectionV();\n        } else if (shortcut === DISTRIBUTE_HORIZONTAL) {\n          graph.distributeSelectionH();\n        } else if (shortcut === DISTRIBUTE_VERTICAL) {\n          graph.distributeSelectionV();\n        } else if (shortcut === AUTO_LAYOUT && onAutoLayout) {\n          onAutoLayout();\n        } else if (shortcut === RESET_POSITION) {\n          graph.resetView();\n        } else if (shortcut === TOGGLE_GRID) {\n          graph.toggleGrid();\n        } else if (shortcut === TOGGLE_SNAP_TO_GRID) {\n          graph.toggleSnapToGrid();\n        } else if (shortcut === SNAP_ALL_TO_GRID) {\n          graph.snapAllToGrid();\n        } else if (shortcut === MOVE_LEFT) {\n          graph.moveSelected(-graph.getGridSize(), 0);\n        } else if (shortcut === MOVE_LEFT_FINE) {\n          graph.moveSelected(-1, 0, true); // Disable snap for fine movement\n        } else if (shortcut === MOVE_RIGHT) {\n          graph.moveSelected(graph.getGridSize(), 0);\n        } else if (shortcut === MOVE_RIGHT_FINE) {\n          graph.moveSelected(1, 0, true); // Disable snap for fine movement\n        } else if (shortcut === MOVE_UP) {\n          graph.moveSelected(0, -graph.getGridSize());\n        } else if (shortcut === MOVE_UP_FINE) {\n          graph.moveSelected(0, -1, true); // Disable snap for fine movement\n        } else if (shortcut === MOVE_DOWN) {\n          graph.moveSelected(0, graph.getGridSize());\n        } else if (shortcut === MOVE_DOWN_FINE) {\n          graph.moveSelected(0, 1, true); // Disable snap for fine movement\n        }\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  }, [toggleHelp, saveLayout, graph, dragMode, setDragMode, onAutoLayout]);\n};\n\n// Utility function to clear graph cache\nexport const clearGraphCache = (currentID?: string) => {\n  if (currentID) {\n    delete graphs[currentID];\n  } else {\n    Object.keys(graphs).forEach(key => delete graphs[key]);\n  }\n};","// Helper functions for the application\n\nexport function removeEmptyProps(obj: any) {\n  return JSON.parse(JSON.stringify(obj));\n}\n\nexport function camelToWords(camel: string) {\n  const split = camel.replace(/([A-Z])/g, \" $1\");\n  return split.charAt(0).toUpperCase() + split.slice(1);\n}\n\nexport function getCurrentViewID() {\n  const params = new URLSearchParams(document.location.search);\n  return params.get('id') || '';\n} ","import React, { FC, useState, useEffect } from 'react';\nimport { getZoomAuto, GraphData, setZoom, getZoom, setZoomCentered } from '../graph-view/graph';\nimport { listViews } from '../parseModel';\nimport { camelToWords } from '../utils';\nimport { getModifierKeyName } from '../utils/platform';\n\n// Types\ninterface ToolbarProps {\n  model: any;\n  currentID: string;\n  onViewChange: (id: string) => void;\n  graph: GraphData;\n  onAutoLayout: () => void;\n  onSave: () => void;\n  onToggleHelp: () => void;\n  saving: boolean;\n  layouting: boolean;\n  dragMode: 'pan' | 'select';\n  setDragMode: (mode: 'pan' | 'select') => void;\n}\n\nexport const Toolbar: FC<ToolbarProps> = ({\n  model, currentID, onViewChange, graph, \n  onAutoLayout, onSave, onToggleHelp, saving, layouting,\n  dragMode, setDragMode\n}) => {\n  const views = listViews(model);\n  \n  return (\n    <div className=\"toolbar\">\n      <ViewSelector \n        views={views}\n        currentID={currentID}\n        onViewChange={onViewChange}\n      />\n      <ToolbarActions\n        graph={graph}\n        onAutoLayout={onAutoLayout}\n        onSave={onSave}\n        onToggleHelp={onToggleHelp}\n        saving={saving}\n        layouting={layouting}\n        dragMode={dragMode}\n        setDragMode={setDragMode}\n      />\n    </div>\n  );\n};\n\nconst ViewSelector: FC<{\n  views: any[];\n  currentID: string;\n  onViewChange: (id: string) => void;\n}> = ({ views, currentID, onViewChange }) => (\n  <div>\n    View:\n    {views.length > 1 ? (\n      <select onChange={e => onViewChange(e.target.value)} value={currentID}>\n        <option disabled value=\"\" hidden>...</option>\n        {views.map(view => (\n          <option key={view.key} value={view.key}>\n            {camelToWords(view.section) + ': ' + view.title}\n          </option>\n        ))}\n      </select>\n    ) : (\n      <span style={{ marginLeft: '8px', fontWeight: 'bold' }}>\n        {views[0] ? camelToWords(views[0].section) + ': ' + views[0].title : 'No views available'}\n      </span>\n    )}\n  </div>\n);\n\nconst ToolbarActions: FC<{\n  graph: GraphData;\n  onAutoLayout: () => void;\n  onSave: () => void;\n  onToggleHelp: () => void;\n  saving: boolean;\n  layouting: boolean;\n  dragMode: 'pan' | 'select';\n  setDragMode: (mode: 'pan' | 'select') => void;\n}> = ({\n  graph, onAutoLayout, onSave, onToggleHelp, saving, layouting,\n  dragMode, setDragMode\n}) => (\n  <div style={{ display: 'flex', alignItems: 'center' }}>\n    <div className=\"toolbar-group\">\n      <DragModeButton dragMode={dragMode} setDragMode={setDragMode} />\n    </div>\n    <div className=\"toolbar-group\">\n      <UndoRedoButtons graph={graph} />\n    </div>\n    <div className=\"toolbar-group\">\n      <AlignmentButtons graph={graph} />\n    </div>\n    <div className=\"toolbar-group\">\n      <LayoutControls onAutoLayout={onAutoLayout} layouting={layouting} />\n    </div>\n    <div className=\"toolbar-group\">\n      <GridControls graph={graph} />\n    </div>\n    <div className=\"toolbar-group\">\n      <ZoomControls graph={graph} />\n    </div>\n    <div className=\"toolbar-group\">\n      <SaveButton onSave={onSave} saving={saving} graph={graph} />\n    </div>\n    <div className=\"toolbar-group\">\n      <HelpButton onToggleHelp={onToggleHelp} />\n    </div>\n  </div>\n);\n\nconst DragModeButton: FC<{\n  dragMode: 'pan' | 'select';\n  setDragMode: (mode: 'pan' | 'select') => void;\n}> = ({ dragMode, setDragMode }) => (\n  <button \n    className={`mode-toggle ${dragMode === 'select' ? 'select-mode' : 'pan-mode'}`}\n    onClick={() => setDragMode(dragMode === 'pan' ? 'select' : 'pan')} \n    data-tooltip={dragMode === 'pan' ? \"Pan Mode: Drag to pan the view (T)\" : \"Select Mode: Drag to select elements, Shift+click to add/remove selection (T)\"}\n  >\n    {dragMode === 'pan' ? <i className=\"fas fa-hand-paper\"></i> : <i className=\"fas fa-mouse-pointer\"></i>}\n  </button>\n);\n\nconst UndoRedoButtons: FC<{ graph: GraphData }> = ({ graph }) => {\n  const modKey = getModifierKeyName();\n  return (\n    <>\n      <button onClick={() => graph.undo()} data-tooltip={`Undo the last change made to the diagram (${modKey}+Z)`}>\n        <i className=\"fas fa-undo\"></i>\n      </button>\n      <button onClick={() => graph.redo()} data-tooltip={`Redo the last undone action (${modKey}+Shift+Z / ${modKey}+Y)`}>\n        <i className=\"fas fa-redo\"></i>\n      </button>\n    </>\n  );\n};\n\nconst AlignmentButtons: FC<{ graph: GraphData }> = ({ graph }) => {\n  const modKey = getModifierKeyName();\n  return (\n    <>\n      <button onClick={() => graph.alignSelectionH()} data-tooltip={`Align all selected elements horizontally (left edges) (${modKey}+Shift+H)`}>\n        <i className=\"fas fa-align-left\"></i>\n      </button>\n      <button onClick={() => graph.alignSelectionV()} data-tooltip={`Align all selected elements vertically (top edges) (${modKey}+Shift+A)`}>\n        <i className=\"fas fa-align-left\" style={{transform: 'rotate(90deg)'}}></i>\n      </button>\n      <button onClick={() => graph.distributeSelectionH()} data-tooltip={`Distribute selected elements evenly horizontally (equal spacing) (${modKey}+Alt+H)`}>\n        <i className=\"fas fa-ellipsis-h\"></i>\n      </button>\n      <button onClick={() => graph.distributeSelectionV()} data-tooltip={`Distribute selected elements evenly vertically (equal spacing) (${modKey}+Alt+V)`}>\n        <i className=\"fas fa-ellipsis-v\"></i>\n      </button>\n    </>\n  );\n};\n\nconst LayoutControls: FC<{\n  onAutoLayout: () => void;\n  layouting: boolean;\n}> = ({ onAutoLayout, layouting }) => {\n  const modKey = getModifierKeyName();\n  return (\n    <button \n      onClick={onAutoLayout} \n      disabled={layouting} \n      data-tooltip={`Automatically arrange all elements using the Layered algorithm (${modKey}+L)`}\n    >\n      {layouting ? <i className=\"fas fa-spinner fa-spin\"></i> : <i className=\"fas fa-magic\"></i>}\n    </button>\n  );\n};\n\nconst GridControls: FC<{ graph: GraphData }> = ({ graph }) => {\n  const [gridVisible, setGridVisible] = useState(graph.isGridVisible());\n  const [snapToGrid, setSnapToGrid] = useState(graph.isSnapToGrid());\n  const modKey = getModifierKeyName();\n  \n  // Update state when graph changes or when grid state changes via shortcuts\n  React.useEffect(() => {\n    const updateGridState = () => {\n      setGridVisible(graph.isGridVisible());\n      setSnapToGrid(graph.isSnapToGrid());\n    };\n    \n    // Initial update\n    updateGridState();\n    \n    // Listen for grid state changes from keyboard shortcuts\n    window.addEventListener('gridStateChanged', updateGridState);\n    \n    return () => {\n      window.removeEventListener('gridStateChanged', updateGridState);\n    };\n  }, [graph]);\n  \n  const handleToggleGrid = () => {\n    graph.toggleGrid();\n    setGridVisible(graph.isGridVisible());\n  };\n  \n  const handleToggleSnap = () => {\n    graph.toggleSnapToGrid();\n    setSnapToGrid(graph.isSnapToGrid());\n  };\n  \n  const handleSnapAll = () => {\n    graph.snapAllToGrid();\n  };\n  \n  return (\n    <>\n      <button \n        className={gridVisible ? 'active-toggle' : 'inactive-toggle'}\n        onClick={handleToggleGrid} \n        data-tooltip={`Toggle grid visibility (${modKey}+G)`}\n      >\n        <i className=\"fas fa-th\"></i>\n      </button>\n      <button \n        className={snapToGrid ? 'active-toggle' : 'inactive-toggle'}\n        onClick={handleToggleSnap} \n        data-tooltip={`Toggle snap to grid (${modKey}+Shift+G)`}\n      >\n        <i className=\"fas fa-magnet\"></i>\n      </button>\n      <button \n        onClick={handleSnapAll} \n        disabled={!snapToGrid}\n        data-tooltip={`Snap all elements to grid (${modKey}+Alt+G)`}\n      >\n        <i className=\"fas fa-border-all\"></i>\n      </button>\n    </>\n  );\n};\n\nconst ZoomDisplay: FC = () => {\n  const [zoom, setZoomState] = useState(100);\n\n  useEffect(() => {\n    const updateZoom = () => {\n      const currentZoom = Math.round(getZoom() * 100);\n      setZoomState(currentZoom);\n    };\n\n    // Update zoom initially\n    updateZoom();\n\n    // Update zoom every 100ms to catch changes from wheel/keyboard/etc\n    const interval = setInterval(updateZoom, 100);\n\n    return () => clearInterval(interval);\n  }, []);\n\n  return (\n    <button \n      onClick={() => setZoomCentered(1)} \n      className=\"zoom-display\"\n      data-tooltip=\"Click to reset zoom to 100%\"\n    >\n      {zoom}%\n    </button>\n  );\n};\n\nconst ZoomControls: FC<{ graph: GraphData }> = ({ graph }) => {\n  const modKey = getModifierKeyName();\n  return (\n    <>\n      <button onClick={() => {\n        setZoomCentered(Math.max(0.1, getZoom() / 1.2));\n      }} data-tooltip={`Zoom out to see more of the diagram (${modKey}+-)`}>\n        <i className=\"fas fa-search-minus\"></i>\n      </button>\n      <ZoomDisplay />\n      <button onClick={() => {\n        setZoomCentered(Math.min(5, getZoom() * 1.2));\n      }} data-tooltip={`Zoom in to see details more clearly (${modKey}+=)`}>\n        <i className=\"fas fa-search-plus\"></i>\n      </button>\n      <button onClick={() => { graph.fitToView(); }} data-tooltip={`Fit diagram to view (${modKey}+9)`}>\n        <i className=\"fas fa-expand\"></i>\n      </button>\n    </>\n  );\n};\n\nconst SaveButton: FC<{\n  onSave: () => void;\n  saving: boolean;\n  graph: GraphData;\n}> = ({ onSave, saving, graph }) => {\n  const [hasChanges, setHasChanges] = useState(false);\n  const modKey = getModifierKeyName();\n  \n  // Check for changes periodically\n  useEffect(() => {\n    const checkChanges = () => {\n      setHasChanges(graph.changed());\n    };\n    \n    // Initial check\n    checkChanges();\n    \n    // Check every 100ms for changes\n    const interval = setInterval(checkChanges, 100);\n    \n    return () => clearInterval(interval);\n  }, [graph]);\n  \n  return (\n    <button \n      className={hasChanges ? \"grp\" : \"action\"} \n      disabled={saving} \n      onClick={onSave} \n      data-tooltip={`Save the current diagram layout (${modKey}+S)`}\n    >\n      {saving ? <i className=\"fas fa-spinner fa-spin\"></i> : <i className=\"fas fa-save\"></i>}\n    </button>\n  );\n};\n\nconst HelpButton: FC<{\n  onToggleHelp: () => void;\n}> = ({ onToggleHelp }) => {\n  return (\n    <button onClick={onToggleHelp} data-tooltip=\"Show keyboard shortcuts and help information (Shift+? / Shift+F1)\">\n      <i className=\"fas fa-question-circle\"></i>\n    </button>\n  );\n};","import React, { FC, useState, useCallback, useEffect, Suspense, lazy } from \"react\";\nimport { GraphData } from \"./graph-view/graph\";\nimport { BrowserRouter as Router, Routes, Route, useSearchParams } from 'react-router-dom';\nimport { listViews } from \"./parseModel\";\nimport { useGraph, useAutoLayout, useSave, useKeyboardShortcuts, clearGraphCache } from \"./hooks\";\nimport { Toolbar } from \"./components/Toolbar\";\nimport { removeEmptyProps, getCurrentViewID } from \"./utils\";\n\nconst Help = lazy(() => import(\"./shortcuts\").then(module => ({ default: module.Help })));\nconst Graph = lazy(() => import(\"./graph-view/graph-react\").then(module => ({ default: module.Graph })));\n\n// Types\ninterface ModelData {\n  model: any;\n  layout: any;\n}\n\nexport const Root: FC<ModelData> = ({ model, layout }) => (\n  <Router>\n    <Routes>\n      <Route path=\"/\" element={<ModelPane model={model} layouts={layout} />} />\n    </Routes>\n  </Router>\n);\n\nexport const refreshGraph = () => {\n  const currentID = getCurrentViewID();\n  clearGraphCache(currentID);\n};\n\nconst ModelPane: FC<{ model: any; layouts: any }> = ({ model, layouts }) => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const currentID = decodeURI(searchParams.get('id') || '');\n  \n  // UI State\n  const [helpVisible, setHelpVisible] = useState(false);\n  const [dragMode, setDragMode] = useState<'pan' | 'select'>('pan');\n  \n  // Get or create graph for current view\n  const graph = useGraph(model, layouts, currentID);\n  \n  // Custom hooks for functionality\n  const { layouting, handleAutoLayout } = useAutoLayout(graph || ({} as GraphData));\n  const { saving, handleSave } = useSave(graph || ({} as GraphData), currentID);\n  \n  if (!graph) {\n    return <ViewRedirect model={model} />;\n  }\n\n  const handleToggleHelp = useCallback(() => {\n    setHelpVisible(!helpVisible);\n  }, [helpVisible]);\n\n  // Update document title when view changes\n  useEffect(() => {\n    if (graph && graph.name) {\n      document.title = `${graph.name} - Model`;\n    }\n  }, [graph]);\n\n  // Setup keyboard shortcuts\n  useKeyboardShortcuts(handleToggleHelp, handleSave, graph, dragMode, setDragMode, handleAutoLayout);\n\n  const handleViewChange = useCallback((id: string) => {\n    setSearchParams({ id: encodeURIComponent(id) });\n  }, [setSearchParams]);\n\n  const handleSelect = useCallback((id: string | null) => {\n    if (id) {\n      const element = graph.metadata.elements.find((m: any) => m.id === id);\n      console.log(removeEmptyProps(element));\n    }\n  }, [graph]);\n\n\treturn (\n\t\t<>\n\t\t\t<Toolbar\n\t\t\t\tmodel={model}\n\t\t\t\tcurrentID={currentID}\n\t\t\t\tonViewChange={handleViewChange}\n\t\t\t\tgraph={graph}\n\t\t\t\tonAutoLayout={handleAutoLayout}\n\t\t\t\tonSave={handleSave}\n\t\t\t\tonToggleHelp={handleToggleHelp}\n\t\t\t\tsaving={saving}\n\t\t\t\tlayouting={layouting}\n\t\t\t\tdragMode={dragMode}\n\t\t\t\tsetDragMode={setDragMode}\n\t\t\t/>\n\t\t\t<Suspense fallback={<div>Loading graph...</div>}>\n\t\t\t\t<Graph \n\t\t\t\t\tkey={currentID}\n\t\t\t\t\tdata={graph}\n\t\t\t\t\tonSelect={handleSelect}\n\t\t\t\t\tdragMode={dragMode}\n\t\t\t\t/>\n\t\t\t</Suspense>\n\t\t\t{helpVisible && (\n\t\t\t\t<Suspense fallback={<div>Loading help...</div>}>\n\t\t\t\t\t<Help />\n\t\t\t\t</Suspense>\n\t\t\t)}\n\t\t</>\n\t);\n};\n\nconst ViewRedirect: FC<{ model: any }> = ({ model }) => {\n  const views = listViews(model);\n  \n  React.useEffect(() => {\n    // Set default title when no view is selected\n    document.title = 'Model - Architecture Diagrams as Code';\n    \n    if (views.length > 0) {\n      document.location.href = '?id=' + views[0].key;\n    }\n  }, [views]);\n\n  if (views.length > 0) {\n    return <>Redirecting to {views[0].title}</>;\n  }\n  return <>No views available</>;\n};\n\n"],"names":["___CSS_LOADER_EXPORT___","push","module","id","isMac","navigator","userAgentData","platform","toLowerCase","includes","userAgent","undefined","KeyboardEvent","metaKey","test","e","getModifierKeyName","getModifierKeyProperty","event","ctrlKey","SAVE","UNDO","REDO","ADD_VERTEX","ADD_LABEL_VERTEX","DEL_VERTEX","ZOOM_IN","ZOOM_OUT","ZOOM_FIT","ZOOM_100","SELECT_ALL","DESELECT","MOVE_LEFT","MOVE_RIGHT","MOVE_UP","MOVE_DOWN","MOVE_LEFT_FINE","MOVE_RIGHT_FINE","MOVE_UP_FINE","MOVE_DOWN_FINE","PAN_VIEW","SELECT_ELEMENT","MULTI_SELECT","BOX_SELECT","MOVE_ELEMENTS","HELP","TOGGLE_DRAG_MODE","ALIGN_HORIZONTAL","ALIGN_VERTICAL","DISTRIBUTE_HORIZONTAL","DISTRIBUTE_VERTICAL","AUTO_LAYOUT","RESET_POSITION","TOGGLE_GRID","TOGGLE_SNAP_TO_GRID","SNAP_ALL_TO_GRID","shortcuts","name","list","help","combinations","key","shift","ctrl","alt","click","wheel","shortcutMap","reduce","lst","s","concat","map","findShortcut","arguments","length","matches","Object","keys","filter","k","shortcut","some","c","Boolean","shiftKey","altKey","ke","checkKey","sort","a","b","aShortcut","bShortcut","aModifiers","bModifiers","aCount","comboText","toUpperCase","join","Help","React","className","section","colSpan","item","options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","locals","Timer","_createClass","callback","_this","_classCallCheck","_defineProperty","this","handler","running","timeoutId","value","timeout","stop","setTimeout","clearTimeout","RefreshConnector","fileChangeHandler","_this2","_objectSpread","DEFAULT_OPTIONS","uri","nextDelay","minDelay","handshakeTimeout","handleHandshakeTimeout","reconnectTimer","attemptReconnection","connectionDesired","isSocketConnected","prepareForConnection","createWebSocket","disconnectionReason","socket","close","readyState","WebSocket","OPEN","_this3","onopen","handleOpen","onclose","handleClose","onmessage","handleMessage","onerror","handleError","startHandshake","console","log","scheduleReconnection","message","JSON","parse","data","processMessage","error","command","handleHelloMessage","handleReloadMessage","connect","path","helloMessage","protocols","LIVERELOAD_PROTOCOLS","ver","sendCommand","start","isRunning","Math","min","maxDelay","send","stringify","t","r","Symbol","n","iterator","o","toStringTag","i","prototype","Generator","u","create","_regeneratorDefine2","f","p","y","G","v","d","bind","l","TypeError","call","done","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","setPrototypeOf","__proto__","displayName","_regenerator","w","m","defineProperty","enumerable","configurable","writable","_invoke","ownKeys","getOwnPropertySymbols","getOwnPropertyDescriptor","apply","forEach","getOwnPropertyDescriptors","defineProperties","_typeof","toPrimitive","String","_toPrimitive","_toPropertyKey","asyncGeneratorStep","Promise","resolve","then","_slicedToArray","Array","isArray","_arrayWithHoles","next","_iterableToArrayLimit","_arrayLikeToArray","toString","slice","constructor","from","_unsupportedIterableToArray","_nonIterableRest","Root","lazy","default","App","_useState2","useState","loading","state","setState","loadData","_ref","_callee","_yield$Promise$all","_yield$Promise$all2","modelResponse","layoutResponse","_yield$Promise$all3","_yield$Promise$all4","model","layout","_t","_context","prev","all","fetch","ok","Error","statusText","json","_next","_throw","handleFileChange","endsWith","refreshGraph","useEffect","LoadingScreen","ErrorScreen","onRetry","Suspense","fallback","style","display","justifyContent","alignItems","height","fontFamily","_ref2","padding","color","whiteSpace","flexDirection","onClick","fontSize","cursor","backgroundColor","border","borderRadius","container","document","getElementById","createRoot","render","svgTextWrap","text","width","attrs","mt","svg","createElementNS","body","appendChild","measure","node","attr","setAttribute","createTextNode","_node$getBBox","getBBox","removeChild","clean","textMeasure","maxW","ret","trim","split","words","lines","currentLine","word","brokenParts","maxWidth","parts","currentPart","testPart","breakLongWord","max","newLine","size","element","type","el","entries","classList","add","use","setAttributeNS","textContent","textArea","bold","x","anchor","_svgTextWrap","txt","line","span","dy","append","rect","rx","ry","icon","expand","expanded","g","transform","setPosition","insideBox","intersectRectFull","p1","p2","box","h","q","q1","q2","denominator","numerator1","numerator2","result","onLine1","onLine2","segmentIntersection","intersectRect","intersectEllipse","ellCenter","nodeCenter","point","si","radicand_sqrt","sqrt","pos","project","atob","len","dot","cabDistance","abs","D3Element","_el","insertBefore","querySelector","parent","bbox","rounded","shapeSvg","intersect","_ellipse","mobiledeviceportrait","shapes","roundedbox","component","dx","cylinder","shape","cy","person","circle","ellipse","hexagon","sz","folder","mobiledevicelandscape","mobiledevice","pipe","robot","headW","webbrowser","_toConsumableArray","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","getEffectiveSpacing","_userOptions$nodeSpac","_userOptions$layerSpa","userOptions","isGroup","effectiveConfig","nodeSpacing","layerSpacing","componentSpacing","groupMultiplier","getELKOptions","spacing","_userOptions$directio","direction","_userOptions$compactL","compactLayout","baseOptions","autoLayout","_x","_autoLayout","graph","ELK","elk","rootSpacing","elkGraph","nodeMap","processedGroups","nodeToGroupMap","layoutedGraph","nodes","edges","_extractNodes","_processRemainingEdges","minX","minY","offsetX","offsetY","_args","layoutOptions","children","Map","nodesMap","set","Set","groupsMap","group","has","groupSpacing","groupNode","member","nodeIndex","findIndex","splice","edge","_edge$vertices","fromGroup","get","toGroup","to","elkEdge","sources","targets","sections","vertices","startPoint","endPoint","bendPoints","groupContainer","find","extractNodes","_container$children","child","originalEdge","label","routingNodesWithIndex","findRoutingNodesWithIndex","searchContainer","_searchContainer$chil","vertexMatch","match","RegExp","replace","index","parseInt","midIndex","floor","v1","v2","processRemainingEdges","_container$edges","_container$children2","bp","vertex","warn","createFallbackLayout","maxCols","ceil","col","Undo","exportDoc","importDoc","func","change","saveNow","context","tmpPreviousState","deepClone","versions","doc","structuredClone","lastSavedPos","SVG_PADDING","applyStyle","setProperty","calculateDistance","_defineProperties","clickListener","defaultEdgeStyle","thickness","opacity","dashed","defaultNodeStyle","background","stroke","GraphData","edgeVertices","_undo","exportLayout","lo","importLayout","window","currentState","sub","description","isPersonShape","cleanStyle","title","values","fromNode","toNode","initVertex","round","random","nodesOrGroups","_this4","selected","ref","remove","updateEdgesSel","disableSnap","skipUndo","_snapToGrid","snapped","snapToGrid","beforeChange","redrawEdges","redrawGroups","redrawEdge","_this5","moveNode","moveEdgeVertex","isLabel","auto","indexOf","changed","undo","redo","_this6","contentBounds","calculateContentBounds","_skipAutoFit","bb","zoom","currentZoom","getZoom","zoomGroup","parentElement","clientWidth","clientHeight","clearViewState","updatePanning","_this7","buildEdge","buildGroup","originalSvg","exportSvg","cloneNode","exportElastic","exportWidth","exportHeight","exportZoomGroup","script","createElement","metadata","firstChild","outerHTML","Infinity","maxX","maxY","left","right","top","bottom","centerX","centerY","approxLabelSize","full","setSaved","_this8","rerender","coordinates","startsWith","_ref3","_ref4","normalizedPoint","assign","_this9","an","clear","ae","labelVertex","fitToView","_autoLayout2","_this0","_this1","_this10","selectedNodes","selectedVertices","allElements","newX","_this11","newY","setNodeSelected","_svg$parentElement","_svg$parentElement2","viewportWidth","viewportHeight","zoomX","zoomY","optimalZoom","finalZoom","translateX","translateY","saveViewState","_gridVisible","_gridSize","updateGridDisplay","dispatchEvent","CustomEvent","_this12","snappedX","snappedY","existingGrid","existingGridRect","defs","pattern","addEventListener","selectListener","buildGraph","onNodeSelect","dragMode","innerHTML","__data","_buildGraph","elasticEl","addCursorInteraction","setZoom","zoomG","nodesG","edgesG","groupsG","gdata","shapeType","styles","nodeBorder","setBorderStyle","tg","Number","getAttribute","maxTextWidth","textPadding","_create$textArea2","nodeText","_create$textArea3","buildNode","n1","n2","position","tmp","sameEdges","spreadPos","spreadX","spreadY","unshift","calculateEdgeVertices","pLabel","sum","acc","calculateLabelPosition","_buildEdgeLabel","_create$textArea","edgeText","bg","edgeRect","buildEdgeLabel","_createEdgeSegments","segments","reverse","s2","intersectPolylineBox","createEdgeSegments","cx","fill","p0","pad","groupRect","groupText","findClosestSegment","fnd","dst","POSITIVE_INFINITY","prj","pts","mouseToDrawing","getBoundingClientRect","z","currentTransform","getCurrentTransform","clientX","clientY","addCustomCursorInteraction","conn","ini","elastic","isPanning","initialTransform","pendingSelectionChange","hasDragged","eventListeners","md","convertEvent","changedTouches","onMouseMoveHandler","getSelection","setSelection","setTransform","drawingDx","drawingDy","setDragging","update","onMouseMove","ex","ey","onMouseUpHandler","removeEventListener","end","boxSelection","graphData","onMouseUp","onMouseDownHandler","preventDefault","nodeFromEvent","effectiveMode","isSelected","translateMatch","parseFloat","getCurrentTransformLocal","startDrawingX","startDrawingY","pt","currentPt","currentDrawingX","currentDrawingY","createElastic","onMouseDown","addDnd","_ref5","existingCleanup","__cursorInteractionCleanup","getData","gd","beforeUnloadHandler","returnValue","setDotSelected","dotEl","mouseMoveHandler","removePrjDot","keyUpHandler","clickHandler","insertEdgeVertex","wheelHandler","delta","sign","deltaY","newZoom","setZoomCentered","keyDownHandler","deleteEdgeVertex","customInteractionCleanup","target","closest","handles","handle","b1","b2","_ref6","scaleMatch","oldZoom","newTranslateX","newTranslateY","viewStateCache","graphId","restoreViewState","lookupElementKeyView","softwareSystemId","views","listViews","viewsList","_asyncToGenerator","graphs","camelToWords","camel","charAt","Toolbar","currentID","onViewChange","onAutoLayout","onSave","onToggleHelp","saving","layouting","setDragMode","ViewSelector","ToolbarActions","onChange","disabled","hidden","view","marginLeft","fontWeight","DragModeButton","UndoRedoButtons","AlignmentButtons","LayoutControls","GridControls","ZoomControls","SaveButton","HelpButton","modKey","alignSelectionH","alignSelectionV","distributeSelectionH","distributeSelectionV","_ref7","_ref8","isGridVisible","gridVisible","setGridVisible","_useState4","isSnapToGrid","setSnapToGrid","updateGridState","toggleGrid","toggleSnapToGrid","snapAllToGrid","ZoomDisplay","_useState6","setZoomState","updateZoom","interval","setInterval","clearInterval","_ref9","_ref0","_useState8","hasChanges","setHasChanges","checkChanges","_ref1","Graph","Router","Routes","Route","ModelPane","layouts","URLSearchParams","location","search","_useSearchParams2","useSearchParams","searchParams","setSearchParams","decodeURI","helpVisible","setHelpVisible","viewKey","elements","relations","collectRels","relationships","rel","people","softwareSystems","containers","el1","components","el2","deploymentNodes","recAddNodes","containerInstances","containerId","infrastructureNodes","_getView","getView","version","groupingIDs","enterprise","tags","technology","tag","addNode","properties","elementViewKey","sourceId","destinationId","routing","addEdge","level","groupMembers","addGroup","init","parseView","useGraph","_useAutoLayout","setLayouting","handleAutoLayout","useCallback","alert","useAutoLayout","_useSave","setSaving","handleSave","_callee2","_t2","_context2","encodeURIComponent","method","exportSVG","status","useSave","ViewRedirect","handleToggleHelp","toggleHelp","saveLayout","handleKeyDown","resetView","moveSelected","getGridSize","useKeyboardShortcuts","handleViewChange","handleSelect","obj","onSelect","href"],"sourceRoot":""}