// Code generated by goa v3.13.2, DO NOT EDIT.
//
// Packages service
//
// Command:
// $ goa gen goa.design/model/mdlsvc/design -o mdlsvc/

package packages

import (
	"context"
	"io"

	types "goa.design/model/mdlsvc/gen/types"
)

// Service is the Packages service interface.
type Service interface {
	// List the model packages in the given workspace
	ListPackages(context.Context, *types.Workspace) (res []*types.Package, err error)
	// Get the DSL files and their content for the given model package
	ListPackageFiles(context.Context, *types.PackageLocator) (res []*types.PackageFile, err error)
	// Send model JSON on initial subscription and when the model package changes
	Subscribe(context.Context, *types.PackageLocator, SubscribeServerStream) (err error)
	// Streams the model JSON for the given package, see
	// https://pkg.go.dev/goa.design/model/model#Model
	GetModelJSON(context.Context, *types.PackageLocator) (body io.ReadCloser, err error)
	// Streams the model layout JSON for the given package
	GetLayout(context.Context, *types.PackageLocator) (body io.ReadCloser, err error)
}

// ServiceName is the name of the service as defined in the design. This is the
// same value that is set in the endpoint request contexts under the ServiceKey
// key.
const ServiceName = "Packages"

// MethodNames lists the service method names as defined in the design. These
// are the same values that are set in the endpoint request contexts under the
// MethodKey key.
var MethodNames = [5]string{"ListPackages", "ListPackageFiles", "Subscribe", "GetModelJSON", "GetLayout"}

// SubscribeServerStream is the interface a "Subscribe" endpoint server stream
// must satisfy.
type SubscribeServerStream interface {
	// Send streams instances of "ModelJSON".
	Send(types.ModelJSON) error
	// Close closes the stream.
	Close() error
}

// SubscribeClientStream is the interface a "Subscribe" endpoint client stream
// must satisfy.
type SubscribeClientStream interface {
	// Recv reads instances of "ModelJSON" from the stream.
	Recv() (types.ModelJSON, error)
}
