// Code generated by goa v3.13.2, DO NOT EDIT.
//
// Packages client
//
// Command:
// $ goa gen goa.design/model/mdlsvc/design -o mdlsvc/

package packages

import (
	"context"
	"io"

	goa "goa.design/goa/v3/pkg"
	types "goa.design/model/mdlsvc/gen/types"
)

// Client is the "Packages" service client.
type Client struct {
	ListPackagesEndpoint     goa.Endpoint
	ListPackageFilesEndpoint goa.Endpoint
	SubscribeEndpoint        goa.Endpoint
	GetModelJSONEndpoint     goa.Endpoint
	GetLayoutEndpoint        goa.Endpoint
}

// NewClient initializes a "Packages" service client given the endpoints.
func NewClient(listPackages, listPackageFiles, subscribe, getModelJSON, getLayout goa.Endpoint) *Client {
	return &Client{
		ListPackagesEndpoint:     listPackages,
		ListPackageFilesEndpoint: listPackageFiles,
		SubscribeEndpoint:        subscribe,
		GetModelJSONEndpoint:     getModelJSON,
		GetLayoutEndpoint:        getLayout,
	}
}

// ListPackages calls the "ListPackages" endpoint of the "Packages" service.
func (c *Client) ListPackages(ctx context.Context, p *types.Workspace) (res []*types.Package, err error) {
	var ires any
	ires, err = c.ListPackagesEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.([]*types.Package), nil
}

// ListPackageFiles calls the "ListPackageFiles" endpoint of the "Packages"
// service.
func (c *Client) ListPackageFiles(ctx context.Context, p *types.PackageLocator) (res []*types.PackageFile, err error) {
	var ires any
	ires, err = c.ListPackageFilesEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.([]*types.PackageFile), nil
}

// Subscribe calls the "Subscribe" endpoint of the "Packages" service.
func (c *Client) Subscribe(ctx context.Context, p *types.PackageLocator) (res SubscribeClientStream, err error) {
	var ires any
	ires, err = c.SubscribeEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(SubscribeClientStream), nil
}

// GetModelJSON calls the "GetModelJSON" endpoint of the "Packages" service.
func (c *Client) GetModelJSON(ctx context.Context, p *types.PackageLocator) (resp io.ReadCloser, err error) {
	var ires any
	ires, err = c.GetModelJSONEndpoint(ctx, p)
	if err != nil {
		return
	}
	o := ires.(*GetModelJSONResponseData)
	return o.Body, nil
}

// GetLayout calls the "GetLayout" endpoint of the "Packages" service.
func (c *Client) GetLayout(ctx context.Context, p *types.PackageLocator) (resp io.ReadCloser, err error) {
	var ires any
	ires, err = c.GetLayoutEndpoint(ctx, p)
	if err != nil {
		return
	}
	o := ires.(*GetLayoutResponseData)
	return o.Body, nil
}
