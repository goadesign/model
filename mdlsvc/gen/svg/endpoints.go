// Code generated by goa v3.13.2, DO NOT EDIT.
//
// SVG endpoints
//
// Command:
// $ goa gen goa.design/model/mdlsvc/design -o mdlsvc/

package svg

import (
	"context"
	"io"

	goa "goa.design/goa/v3/pkg"
)

// Endpoints wraps the "SVG" service endpoints.
type Endpoints struct {
	Load goa.Endpoint
	Save goa.Endpoint
}

// LoadResponseData holds both the result and the HTTP response body reader of
// the "Load" method.
type LoadResponseData struct {
	// Body streams the HTTP response body.
	Body io.ReadCloser
}

// SaveRequestData holds both the payload and the HTTP request body reader of
// the "Save" method.
type SaveRequestData struct {
	// Payload is the method payload.
	Payload *Filename
	// Body streams the HTTP request body.
	Body io.ReadCloser
}

// NewEndpoints wraps the methods of the "SVG" service with endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		Load: NewLoadEndpoint(s),
		Save: NewSaveEndpoint(s),
	}
}

// Use applies the given middleware to all the "SVG" service endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.Load = m(e.Load)
	e.Save = m(e.Save)
}

// NewLoadEndpoint returns an endpoint function that calls the method "Load" of
// service "SVG".
func NewLoadEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*Filename)
		body, err := s.Load(ctx, p)
		if err != nil {
			return nil, err
		}
		return &LoadResponseData{Body: body}, nil
	}
}

// NewSaveEndpoint returns an endpoint function that calls the method "Save" of
// service "SVG".
func NewSaveEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		ep := req.(*SaveRequestData)
		return nil, s.Save(ctx, ep.Payload, ep.Body)
	}
}
