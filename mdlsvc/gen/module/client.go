// Code generated by goa v3.13.2, DO NOT EDIT.
//
// Module client
//
// Command:
// $ goa gen goa.design/model/mdlsvc/design -o mdlsvc/

package module

import (
	"context"
	"io"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "Module" service client.
type Client struct {
	ListModulesEndpoint  goa.Endpoint
	SubscribeEndpoint    goa.Endpoint
	GetModelEndpoint     goa.Endpoint
	CompileEndpoint      goa.Endpoint
	GetLayoutEndpoint    goa.Endpoint
	WriteDiagramEndpoint goa.Endpoint
}

// NewClient initializes a "Module" service client given the endpoints.
func NewClient(listModules, subscribe, getModel, compile, getLayout, writeDiagram goa.Endpoint) *Client {
	return &Client{
		ListModulesEndpoint:  listModules,
		SubscribeEndpoint:    subscribe,
		GetModelEndpoint:     getModel,
		CompileEndpoint:      compile,
		GetLayoutEndpoint:    getLayout,
		WriteDiagramEndpoint: writeDiagram,
	}
}

// ListModules calls the "ListModules" endpoint of the "Module" service.
func (c *Client) ListModules(ctx context.Context) (res []*Module, err error) {
	var ires any
	ires, err = c.ListModulesEndpoint(ctx, nil)
	if err != nil {
		return
	}
	return ires.([]*Module), nil
}

// Subscribe calls the "Subscribe" endpoint of the "Module" service.
func (c *Client) Subscribe(ctx context.Context, p *Module) (res SubscribeClientStream, err error) {
	var ires any
	ires, err = c.SubscribeEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(SubscribeClientStream), nil
}

// GetModel calls the "GetModel" endpoint of the "Module" service.
func (c *Client) GetModel(ctx context.Context, p *Module) (resp io.ReadCloser, err error) {
	var ires any
	ires, err = c.GetModelEndpoint(ctx, p)
	if err != nil {
		return
	}
	o := ires.(*GetModelResponseData)
	return o.Body, nil
}

// Compile calls the "Compile" endpoint of the "Module" service.
// Compile may return the following errors:
//   - "compilation_failed" (type *goa.ServiceError): Compilation failed
//   - error: internal error
func (c *Client) Compile(ctx context.Context, p *Module, req io.ReadCloser) (res Model, err error) {
	var ires any
	ires, err = c.CompileEndpoint(ctx, &CompileRequestData{Payload: p, Body: req})
	if err != nil {
		return
	}
	return ires.(Model), nil
}

// GetLayout calls the "GetLayout" endpoint of the "Module" service.
func (c *Client) GetLayout(ctx context.Context, p *Module) (resp io.ReadCloser, err error) {
	var ires any
	ires, err = c.GetLayoutEndpoint(ctx, p)
	if err != nil {
		return
	}
	o := ires.(*GetLayoutResponseData)
	return o.Body, nil
}

// WriteDiagram calls the "WriteDiagram" endpoint of the "Module" service.
func (c *Client) WriteDiagram(ctx context.Context, p *Module, req io.ReadCloser) (err error) {
	_, err = c.WriteDiagramEndpoint(ctx, &WriteDiagramRequestData{Payload: p, Body: req})
	return
}
