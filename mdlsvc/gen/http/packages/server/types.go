// Code generated by goa v3.13.2, DO NOT EDIT.
//
// Packages HTTP server types
//
// Command:
// $ goa gen goa.design/model/mdlsvc/design -o mdlsvc/

package server

import (
	types "goa.design/model/mdlsvc/gen/types"
)

// ListPackagesResponseBody is the type of the "Packages" service
// "ListPackages" endpoint HTTP response body.
type ListPackagesResponseBody []*PackageResponse

// ListPackageFilesResponseBody is the type of the "Packages" service
// "ListPackageFiles" endpoint HTTP response body.
type ListPackageFilesResponseBody []*PackageFileResponse

// PackageResponse is used to define fields on response body types.
type PackageResponse struct {
	// Design Go package import path
	ImportPath string `form:"ImportPath" json:"ImportPath" xml:"ImportPath"`
	// Path to directory containing a model package
	Dir string `form:"Dir" json:"Dir" xml:"Dir"`
}

// PackageFileResponse is used to define fields on response body types.
type PackageFileResponse struct {
	// Path to file containing DSL code
	Locator *FileLocatorResponse `form:"Locator" json:"Locator" xml:"Locator"`
	// DSL code
	Content string `form:"Content" json:"Content" xml:"Content"`
}

// FileLocatorResponse is used to define fields on response body types.
type FileLocatorResponse struct {
	// Name of DSL file
	Filename string `form:"Filename" json:"Filename" xml:"Filename"`
	// Workspace identifier
	Workspace string `form:"Workspace" json:"Workspace" xml:"Workspace"`
	// Path to directory containing a model package
	Dir string `form:"Dir" json:"Dir" xml:"Dir"`
}

// NewListPackagesResponseBody builds the HTTP response body from the result of
// the "ListPackages" endpoint of the "Packages" service.
func NewListPackagesResponseBody(res []*types.Package) ListPackagesResponseBody {
	body := make([]*PackageResponse, len(res))
	for i, val := range res {
		body[i] = marshalTypesPackageToPackageResponse(val)
	}
	return body
}

// NewListPackageFilesResponseBody builds the HTTP response body from the
// result of the "ListPackageFiles" endpoint of the "Packages" service.
func NewListPackageFilesResponseBody(res []*types.PackageFile) ListPackageFilesResponseBody {
	body := make([]*PackageFileResponse, len(res))
	for i, val := range res {
		body[i] = marshalTypesPackageFileToPackageFileResponse(val)
	}
	return body
}

// NewListPackagesWorkspace builds a Packages service ListPackages endpoint
// payload.
func NewListPackagesWorkspace(workspace string) *types.Workspace {
	v := &types.Workspace{}
	v.Workspace = workspace

	return v
}

// NewListPackageFilesPackageLocator builds a Packages service ListPackageFiles
// endpoint payload.
func NewListPackageFilesPackageLocator(workspace string, dir string) *types.PackageLocator {
	v := &types.PackageLocator{}
	v.Workspace = workspace
	v.Dir = dir

	return v
}

// NewSubscribePackageLocator builds a Packages service Subscribe endpoint
// payload.
func NewSubscribePackageLocator(workspace string, dir string) *types.PackageLocator {
	v := &types.PackageLocator{}
	v.Workspace = workspace
	v.Dir = dir

	return v
}

// NewGetModelJSONPackageLocator builds a Packages service GetModelJSON
// endpoint payload.
func NewGetModelJSONPackageLocator(workspace string, dir string) *types.PackageLocator {
	v := &types.PackageLocator{}
	v.Workspace = workspace
	v.Dir = dir

	return v
}

// NewGetLayoutPackageLocator builds a Packages service GetLayout endpoint
// payload.
func NewGetLayoutPackageLocator(workspace string, dir string) *types.PackageLocator {
	v := &types.PackageLocator{}
	v.Workspace = workspace
	v.Dir = dir

	return v
}
