swagger: "2.0"
info:
    title: ""
    version: ""
host: localhost:80
consumes:
    - application/json
    - application/xml
    - application/gob
produces:
    - application/json
    - application/xml
    - application/gob
paths:
    /api/editor/component:
        put:
            tags:
                - Editor
            summary: UpsertComponent Editor
            description: Create or update a component in the model
            operationId: Editor#UpsertComponent
            parameters:
                - name: mod
                  in: query
                  description: Design Go module
                  required: true
                  type: string
                  pattern: ^([a-zA-Z0-9]+(-[a-zA-Z0-9]+)*\.)+[a-zA-Z]{2,}/[a-zA-Z0-9_\-]+/(/([a-zA-Z0-9_\-]+))*$
                - name: mod
                  in: header
                  required: false
                  type: string
                - name: UpsertComponentRequestBody
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/EditorUpsertComponentRequestBody'
                    required:
                        - SystemName
                        - ContainerName
                        - Name
            responses:
                "204":
                    description: No Content response.
            schemes:
                - http
    /api/editor/container:
        put:
            tags:
                - Editor
            summary: UpsertContainer Editor
            description: Create or update a container in the model
            operationId: Editor#UpsertContainer
            parameters:
                - name: mod
                  in: query
                  description: Design Go module
                  required: true
                  type: string
                  pattern: ^([a-zA-Z0-9]+(-[a-zA-Z0-9]+)*\.)+[a-zA-Z]{2,}/[a-zA-Z0-9_\-]+/(/([a-zA-Z0-9_\-]+))*$
                - name: mod
                  in: header
                  required: false
                  type: string
                - name: UpsertContainerRequestBody
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/EditorUpsertContainerRequestBody'
                    required:
                        - SystemName
                        - Name
            responses:
                "204":
                    description: No Content response.
            schemes:
                - http
    /api/editor/person:
        put:
            tags:
                - Editor
            summary: UpsertPerson Editor
            description: Create or update a person in the model
            operationId: Editor#UpsertPerson
            parameters:
                - name: mod
                  in: query
                  description: Design Go module
                  required: true
                  type: string
                  pattern: ^([a-zA-Z0-9]+(-[a-zA-Z0-9]+)*\.)+[a-zA-Z]{2,}/[a-zA-Z0-9_\-]+/(/([a-zA-Z0-9_\-]+))*$
                - name: mod
                  in: header
                  required: false
                  type: string
                - name: UpsertPersonRequestBody
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/EditorUpsertPersonRequestBody'
                    required:
                        - Name
            responses:
                "204":
                    description: No Content response.
            schemes:
                - http
    /api/editor/person/{Name}:
        delete:
            tags:
                - Editor
            summary: DeletePerson Editor
            description: Delete an existing person from the model
            operationId: Editor#DeletePerson
            parameters:
                - name: mod
                  in: query
                  description: Design Go module
                  required: true
                  type: string
                  pattern: ^([a-zA-Z0-9]+(-[a-zA-Z0-9]+)*\.)+[a-zA-Z]{2,}/[a-zA-Z0-9_\-]+/(/([a-zA-Z0-9_\-]+))*$
                - name: Name
                  in: path
                  description: Name of person to delete
                  required: true
                  type: string
                - name: mod
                  in: header
                  required: false
                  type: string
            responses:
                "204":
                    description: No Content response.
                "404":
                    description: Not Found response.
                    schema:
                        $ref: '#/definitions/EditorDeletePersonNotFoundResponseBody'
            schemes:
                - http
    /api/editor/relationship:
        put:
            tags:
                - Editor
            summary: UpsertRelationship Editor
            description: Create or update a relationship in the model
            operationId: Editor#UpsertRelationship
            parameters:
                - name: mod
                  in: query
                  description: Design Go module
                  required: true
                  type: string
                  pattern: ^([a-zA-Z0-9]+(-[a-zA-Z0-9]+)*\.)+[a-zA-Z]{2,}/[a-zA-Z0-9_\-]+/(/([a-zA-Z0-9_\-]+))*$
                - name: mod
                  in: header
                  required: false
                  type: string
                - name: UpsertRelationshipRequestBody
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/EditorUpsertRelationshipRequestBody'
                    required:
                        - SourcePath
                        - DestinationPath
            responses:
                "204":
                    description: No Content response.
            schemes:
                - http
    /api/editor/relationship/{SourcePath}/{DestinationPath}:
        delete:
            tags:
                - Editor
            summary: DeleteRelationship Editor
            description: Delete an existing relationship from the model
            operationId: Editor#DeleteRelationship
            parameters:
                - name: mod
                  in: query
                  description: Design Go module
                  required: true
                  type: string
                  pattern: ^([a-zA-Z0-9]+(-[a-zA-Z0-9]+)*\.)+[a-zA-Z]{2,}/[a-zA-Z0-9_\-]+/(/([a-zA-Z0-9_\-]+))*$
                - name: SourcePath
                  in: path
                  description: Path to source element consisting of <software system name>[/<container name>[/<component name>]]
                  required: true
                  type: string
                - name: DestinationPath
                  in: path
                  description: Path to destination element, see SourcePath for details.
                  required: true
                  type: string
                - name: mod
                  in: header
                  required: false
                  type: string
            responses:
                "204":
                    description: No Content response.
                "404":
                    description: Not Found response.
                    schema:
                        $ref: '#/definitions/EditorDeleteRelationshipNotFoundResponseBody'
            schemes:
                - http
    /api/editor/system:
        put:
            tags:
                - Editor
            summary: UpsertSystem Editor
            description: Create or update a software system in the model
            operationId: Editor#UpsertSystem
            parameters:
                - name: mod
                  in: query
                  description: Design Go module
                  required: true
                  type: string
                  pattern: ^([a-zA-Z0-9]+(-[a-zA-Z0-9]+)*\.)+[a-zA-Z]{2,}/[a-zA-Z0-9_\-]+/(/([a-zA-Z0-9_\-]+))*$
                - name: mod
                  in: header
                  required: false
                  type: string
                - name: UpsertSystemRequestBody
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/EditorUpsertSystemRequestBody'
                    required:
                        - Name
            responses:
                "204":
                    description: No Content response.
            schemes:
                - http
    /api/editor/system/{Name}:
        delete:
            tags:
                - Editor
            summary: DeleteSystem Editor
            description: Delete an existing software system from the model
            operationId: Editor#DeleteSystem
            parameters:
                - name: mod
                  in: query
                  description: Design Go module
                  required: true
                  type: string
                  pattern: ^([a-zA-Z0-9]+(-[a-zA-Z0-9]+)*\.)+[a-zA-Z]{2,}/[a-zA-Z0-9_\-]+/(/([a-zA-Z0-9_\-]+))*$
                - name: Name
                  in: path
                  description: Name of software system to delete
                  required: true
                  type: string
                - name: mod
                  in: header
                  required: false
                  type: string
            responses:
                "204":
                    description: No Content response.
                "404":
                    description: Not Found response.
                    schema:
                        $ref: '#/definitions/EditorDeleteSystemNotFoundResponseBody'
            schemes:
                - http
    /api/editor/system/{SystemName}/container/{ContainerName}/component/{Name}:
        delete:
            tags:
                - Editor
            summary: DeleteComponent Editor
            description: Delete an existing component from the model
            operationId: Editor#DeleteComponent
            parameters:
                - name: mod
                  in: query
                  description: Design Go module
                  required: true
                  type: string
                  pattern: ^([a-zA-Z0-9]+(-[a-zA-Z0-9]+)*\.)+[a-zA-Z]{2,}/[a-zA-Z0-9_\-]+/(/([a-zA-Z0-9_\-]+))*$
                - name: SystemName
                  in: path
                  description: Name of component software system
                  required: true
                  type: string
                - name: ContainerName
                  in: path
                  description: Name of component software system
                  required: true
                  type: string
                - name: Name
                  in: path
                  description: Name of component to delete
                  required: true
                  type: string
                - name: mod
                  in: header
                  required: false
                  type: string
            responses:
                "204":
                    description: No Content response.
                "404":
                    description: Not Found response.
                    schema:
                        $ref: '#/definitions/EditorDeleteComponentNotFoundResponseBody'
            schemes:
                - http
    /api/editor/system/{SystemName}/container/{Name}:
        delete:
            tags:
                - Editor
            summary: DeleteContainer Editor
            description: Delete an existing container from the model
            operationId: Editor#DeleteContainer
            parameters:
                - name: mod
                  in: query
                  description: Design Go module
                  required: true
                  type: string
                  pattern: ^([a-zA-Z0-9]+(-[a-zA-Z0-9]+)*\.)+[a-zA-Z]{2,}/[a-zA-Z0-9_\-]+/(/([a-zA-Z0-9_\-]+))*$
                - name: SystemName
                  in: path
                  description: Name of container software system
                  required: true
                  type: string
                - name: Name
                  in: path
                  description: Name of container to delete
                  required: true
                  type: string
                - name: mod
                  in: header
                  required: false
                  type: string
            responses:
                "204":
                    description: No Content response.
                "404":
                    description: Not Found response.
                    schema:
                        $ref: '#/definitions/EditorDeleteContainerNotFoundResponseBody'
            schemes:
                - http
    /api/modules:
        get:
            tags:
                - Module
            summary: ListModules Module
            description: List the model modules in the current Go workspace
            operationId: Module#ListModules
            responses:
                "200":
                    description: OK response.
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/ModuleResponse'
            schemes:
                - http
    /api/modules/compile:
        post:
            tags:
                - Module
            summary: Compile Module
            description: Stream the model DSL, save it, compile it and return the corresponding JSON
            operationId: Module#Compile
            parameters:
                - name: mod
                  in: query
                  description: Design Go module
                  required: true
                  type: string
                  pattern: ^([a-zA-Z0-9]+(-[a-zA-Z0-9]+)*\.)+[a-zA-Z]{2,}/[a-zA-Z0-9_\-]+/(/([a-zA-Z0-9_\-]+))*$
            responses:
                "200":
                    description: OK response.
                    schema:
                        type: string
                        format: json
                "400":
                    description: Bad Request response.
                    schema:
                        $ref: '#/definitions/ModuleCompileCompilationFailedResponseBody'
            schemes:
                - http
    /api/modules/diagram:
        post:
            tags:
                - Module
            summary: WriteDiagram Module
            description: Save the SVG streamed in the request body
            operationId: Module#WriteDiagram
            parameters:
                - name: mod
                  in: query
                  description: Design Go module
                  required: true
                  type: string
                  pattern: ^([a-zA-Z0-9]+(-[a-zA-Z0-9]+)*\.)+[a-zA-Z]{2,}/[a-zA-Z0-9_\-]+/(/([a-zA-Z0-9_\-]+))*$
            responses:
                "204":
                    description: No Content response.
            schemes:
                - http
    /api/modules/layout:
        get:
            tags:
                - Module
            summary: GetLayout Module
            description: Stream the model layout JSON saved in the SVG
            operationId: Module#GetLayout
            parameters:
                - name: mod
                  in: query
                  description: Design Go module
                  required: true
                  type: string
                  pattern: ^([a-zA-Z0-9]+(-[a-zA-Z0-9]+)*\.)+[a-zA-Z]{2,}/[a-zA-Z0-9_\-]+/(/([a-zA-Z0-9_\-]+))*$
            responses:
                "200":
                    description: OK response.
            schemes:
                - http
    /api/modules/model:
        get:
            tags:
                - Module
            summary: GetModel Module
            description: Stream the model JSON, see https://pkg.go.dev/goa.design/model/model#Model
            operationId: Module#GetModel
            parameters:
                - name: mod
                  in: query
                  description: Design Go module
                  required: true
                  type: string
                  pattern: ^([a-zA-Z0-9]+(-[a-zA-Z0-9]+)*\.)+[a-zA-Z]{2,}/[a-zA-Z0-9_\-]+/(/([a-zA-Z0-9_\-]+))*$
            responses:
                "200":
                    description: OK response.
            schemes:
                - http
    /api/modules/subscribe:
        get:
            tags:
                - Module
            summary: Subscribe Module
            description: WebSocket endpoint for subscribing to updates to the model
            operationId: Module#Subscribe
            parameters:
                - name: mod
                  in: query
                  description: Design Go module
                  required: true
                  type: string
                  pattern: ^([a-zA-Z0-9]+(-[a-zA-Z0-9]+)*\.)+[a-zA-Z]{2,}/[a-zA-Z0-9_\-]+/(/([a-zA-Z0-9_\-]+))*$
            responses:
                "101":
                    description: Switching Protocols response.
                    schema:
                        type: string
                        format: json
            schemes:
                - ws
    /assets:
        get:
            tags:
                - Assets
            summary: Download assets
            description: Serve the diagram editor UI
            operationId: Assets#/assets
            responses:
                "200":
                    description: File downloaded
                    schema:
                        type: file
            schemes:
                - http
definitions:
    EditorDeleteComponentNotFoundResponseBody:
        title: 'Mediatype identifier: application/vnd.goa.error; view=default'
        type: object
        properties:
            fault:
                type: boolean
                description: Is the error a server-side fault?
                example: true
            id:
                type: string
                description: ID is a unique identifier for this particular occurrence of the problem.
                example: 123abc
            message:
                type: string
                description: Message is a human-readable explanation specific to this occurrence of the problem.
                example: parameter 'p' must be an integer
            name:
                type: string
                description: Name is the name of this class of errors.
                example: bad_request
            temporary:
                type: boolean
                description: Is the error temporary?
                example: true
            timeout:
                type: boolean
                description: Is the error a timeout?
                example: true
        description: Component not found (default view)
        example:
            fault: false
            id: 123abc
            message: parameter 'p' must be an integer
            name: bad_request
            temporary: true
            timeout: false
        required:
            - name
            - id
            - message
            - temporary
            - timeout
            - fault
    EditorDeleteContainerNotFoundResponseBody:
        title: 'Mediatype identifier: application/vnd.goa.error; view=default'
        type: object
        properties:
            fault:
                type: boolean
                description: Is the error a server-side fault?
                example: true
            id:
                type: string
                description: ID is a unique identifier for this particular occurrence of the problem.
                example: 123abc
            message:
                type: string
                description: Message is a human-readable explanation specific to this occurrence of the problem.
                example: parameter 'p' must be an integer
            name:
                type: string
                description: Name is the name of this class of errors.
                example: bad_request
            temporary:
                type: boolean
                description: Is the error temporary?
                example: false
            timeout:
                type: boolean
                description: Is the error a timeout?
                example: true
        description: Container not found (default view)
        example:
            fault: false
            id: 123abc
            message: parameter 'p' must be an integer
            name: bad_request
            temporary: true
            timeout: false
        required:
            - name
            - id
            - message
            - temporary
            - timeout
            - fault
    EditorDeletePersonNotFoundResponseBody:
        title: 'Mediatype identifier: application/vnd.goa.error; view=default'
        type: object
        properties:
            fault:
                type: boolean
                description: Is the error a server-side fault?
                example: false
            id:
                type: string
                description: ID is a unique identifier for this particular occurrence of the problem.
                example: 123abc
            message:
                type: string
                description: Message is a human-readable explanation specific to this occurrence of the problem.
                example: parameter 'p' must be an integer
            name:
                type: string
                description: Name is the name of this class of errors.
                example: bad_request
            temporary:
                type: boolean
                description: Is the error temporary?
                example: false
            timeout:
                type: boolean
                description: Is the error a timeout?
                example: false
        description: Person not found (default view)
        example:
            fault: true
            id: 123abc
            message: parameter 'p' must be an integer
            name: bad_request
            temporary: false
            timeout: true
        required:
            - name
            - id
            - message
            - temporary
            - timeout
            - fault
    EditorDeleteRelationshipNotFoundResponseBody:
        title: 'Mediatype identifier: application/vnd.goa.error; view=default'
        type: object
        properties:
            fault:
                type: boolean
                description: Is the error a server-side fault?
                example: true
            id:
                type: string
                description: ID is a unique identifier for this particular occurrence of the problem.
                example: 123abc
            message:
                type: string
                description: Message is a human-readable explanation specific to this occurrence of the problem.
                example: parameter 'p' must be an integer
            name:
                type: string
                description: Name is the name of this class of errors.
                example: bad_request
            temporary:
                type: boolean
                description: Is the error temporary?
                example: true
            timeout:
                type: boolean
                description: Is the error a timeout?
                example: true
        description: Relationship not found (default view)
        example:
            fault: true
            id: 123abc
            message: parameter 'p' must be an integer
            name: bad_request
            temporary: false
            timeout: false
        required:
            - name
            - id
            - message
            - temporary
            - timeout
            - fault
    EditorDeleteSystemNotFoundResponseBody:
        title: 'Mediatype identifier: application/vnd.goa.error; view=default'
        type: object
        properties:
            fault:
                type: boolean
                description: Is the error a server-side fault?
                example: false
            id:
                type: string
                description: ID is a unique identifier for this particular occurrence of the problem.
                example: 123abc
            message:
                type: string
                description: Message is a human-readable explanation specific to this occurrence of the problem.
                example: parameter 'p' must be an integer
            name:
                type: string
                description: Name is the name of this class of errors.
                example: bad_request
            temporary:
                type: boolean
                description: Is the error temporary?
                example: false
            timeout:
                type: boolean
                description: Is the error a timeout?
                example: true
        description: Software system not found (default view)
        example:
            fault: false
            id: 123abc
            message: parameter 'p' must be an integer
            name: bad_request
            temporary: true
            timeout: true
        required:
            - name
            - id
            - message
            - temporary
            - timeout
            - fault
    EditorUpsertComponentRequestBody:
        title: EditorUpsertComponentRequestBody
        type: object
        properties:
            ContainerName:
                type: string
                description: Name of parent container
                example: My Container
            Description:
                type: string
                description: Description of component
                example: Component description
            Name:
                type: string
                description: Name of component
                example: Component
            Properties:
                type: object
                description: Set of arbitrary name-value properties (shown in diagram tooltips)
                example:
                    key1: value1
                    key2: value2
                additionalProperties:
                    type: string
                    example: Enim est.
            SystemName:
                type: string
                description: Name of parent software system
                example: My System
            Tags:
                type: array
                items:
                    type: string
                    example: Sint sint aliquam nostrum omnis vel tempore.
                description: Attached tags
                example:
                    - Tag1
                    - Tag2
            Technology:
                type: string
                description: Technology used by component
                example: Technology
            URL:
                type: string
                description: Documentation URL
                example: https://component.com
        example:
            ContainerName: My Container
            Description: Component description
            Name: Component
            Properties:
                key1: value1
                key2: value2
            SystemName: My System
            Tags:
                - Tag1
                - Tag2
            Technology: Technology
            URL: https://component.com
        required:
            - SystemName
            - ContainerName
            - Name
    EditorUpsertContainerRequestBody:
        title: EditorUpsertContainerRequestBody
        type: object
        properties:
            Description:
                type: string
                description: Description of container
                example: Container description
            Name:
                type: string
                description: Name of container
                example: Container
            Properties:
                type: object
                description: Set of arbitrary name-value properties (shown in diagram tooltips)
                example:
                    key1: value1
                    key2: value2
                additionalProperties:
                    type: string
                    example: Quae dolor earum quidem eaque non eos.
            SystemName:
                type: string
                description: Name of parent software system
                example: My System
            Tags:
                type: array
                items:
                    type: string
                    example: Qui temporibus est expedita.
                description: Attached tags
                example:
                    - Tag1
                    - Tag2
            Technology:
                type: string
                description: Technology used by container
                example: Technology
            URL:
                type: string
                description: Documentation URL
                example: https://container.com
        example:
            Description: Container description
            Name: Container
            Properties:
                key1: value1
                key2: value2
            SystemName: My System
            Tags:
                - Tag1
                - Tag2
            Technology: Technology
            URL: https://container.com
        required:
            - SystemName
            - Name
    EditorUpsertPersonRequestBody:
        title: EditorUpsertPersonRequestBody
        type: object
        properties:
            Description:
                type: string
                description: Description of person
                example: Person description
            Location:
                type: string
                description: Indicates whether the person is an employee (Internal) or a third party (External)
                default: Internal
                example: Internal
                enum:
                    - Internal
                    - External
            Name:
                type: string
                description: Name of person
                example: Person
            Properties:
                type: object
                description: Set of arbitrary name-value properties (shown in diagram tooltips)
                example:
                    key1: value1
                    key2: value2
                additionalProperties:
                    type: string
                    example: Perspiciatis qui.
            Tags:
                type: array
                items:
                    type: string
                    example: Voluptatibus natus quo ad sint ullam et.
                description: Attached tags
                example:
                    - Tag1
                    - Tag2
            URL:
                type: string
                description: Documentation URL
                example: https://person.com
        example:
            Description: Person description
            Location: Internal
            Name: Person
            Properties:
                key1: value1
                key2: value2
            Tags:
                - Tag1
                - Tag2
            URL: https://person.com
        required:
            - Name
    EditorUpsertRelationshipRequestBody:
        title: EditorUpsertRelationshipRequestBody
        type: object
        properties:
            Description:
                type: string
                description: Description of relationship
                example: Relationship description
            DestinationPath:
                type: string
                description: Path to destination element, see SourcePath for details.
                example: Software System/Container/Component
            InteractionStyle:
                type: string
                description: Indicates whether the relationship is synchronous or asynchronous
                default: Synchronous
                example: Asynchronous
                enum:
                    - Synchronous
                    - Asynchronous
            SourcePath:
                type: string
                description: Path to source element consisting of <software system name>[/<container name>[/<component name>]]
                example: Software System/Container/Component
            Tags:
                type: array
                items:
                    type: string
                    example: Asperiores quia.
                description: Attached tags
                example:
                    - Tag1
                    - Tag2
            Technology:
                type: string
                description: Technology used by relationship
                example: Technology
            URL:
                type: string
                description: Documentation URL
                example: https://relationship.com
                format: uri
        example:
            Description: Relationship description
            DestinationPath: Software System/Container/Component
            InteractionStyle: Asynchronous
            SourcePath: Software System/Container/Component
            Tags:
                - Tag1
                - Tag2
            Technology: Technology
            URL: https://relationship.com
        required:
            - SourcePath
            - DestinationPath
    EditorUpsertSystemRequestBody:
        title: EditorUpsertSystemRequestBody
        type: object
        properties:
            Description:
                type: string
                description: Description of system
                example: System description
            Location:
                type: string
                description: Indicates whether the system is in-house (Internal) or hosted by a third party (External)
                default: Internal
                example: Internal
                enum:
                    - Internal
                    - External
            Name:
                type: string
                description: Name of software system
                example: System
            Properties:
                type: object
                description: Set of arbitrary name-value properties (shown in diagram tooltips)
                example:
                    key1: value1
                    key2: value2
                additionalProperties:
                    type: string
                    example: Quibusdam soluta qui ea voluptas consequuntur dolor.
            Tags:
                type: array
                items:
                    type: string
                    example: Sequi quos quo laudantium aut.
                description: Attached tags
                example:
                    - Tag1
                    - Tag2
            URL:
                type: string
                description: Documentation URL
                example: https://system.com
        example:
            Description: System description
            Location: External
            Name: System
            Properties:
                key1: value1
                key2: value2
            Tags:
                - Tag1
                - Tag2
            URL: https://system.com
        required:
            - Name
    ModuleCompileCompilationFailedResponseBody:
        title: 'Mediatype identifier: application/vnd.goa.error; view=default'
        type: object
        properties:
            fault:
                type: boolean
                description: Is the error a server-side fault?
                example: false
            id:
                type: string
                description: ID is a unique identifier for this particular occurrence of the problem.
                example: 123abc
            message:
                type: string
                description: Message is a human-readable explanation specific to this occurrence of the problem.
                example: parameter 'p' must be an integer
            name:
                type: string
                description: Name is the name of this class of errors.
                example: bad_request
            temporary:
                type: boolean
                description: Is the error temporary?
                example: true
            timeout:
                type: boolean
                description: Is the error a timeout?
                example: false
        description: Compilation failed (default view)
        example:
            fault: false
            id: 123abc
            message: parameter 'p' must be an integer
            name: bad_request
            temporary: true
            timeout: true
        required:
            - name
            - id
            - message
            - temporary
            - timeout
            - fault
    ModuleResponse:
        title: ModuleResponse
        type: object
        properties:
            GoMod:
                type: string
                description: Design Go module
                example: goa.design/model/examples/basic/model
                pattern: ^([a-zA-Z0-9]+(-[a-zA-Z0-9]+)*\.)+[a-zA-Z]{2,}/[a-zA-Z0-9_\-]+/(/([a-zA-Z0-9_\-]+))*$
        example:
            GoMod: goa.design/model/examples/basic/model
        required:
            - GoMod
