// Code generated by goa v3.13.2, DO NOT EDIT.
//
// Editor endpoints
//
// Command:
// $ goa gen goa.design/model/mdlsvc/design -o mdlsvc/

package editor

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Endpoints wraps the "Editor" service endpoints.
type Endpoints struct {
	UpsertSystem       goa.Endpoint
	UpsertPerson       goa.Endpoint
	UpsertContainer    goa.Endpoint
	UpsertComponent    goa.Endpoint
	UpsertRelationship goa.Endpoint
	DeleteSystem       goa.Endpoint
	DeletePerson       goa.Endpoint
	DeleteContainer    goa.Endpoint
	DeleteComponent    goa.Endpoint
	DeleteRelationship goa.Endpoint
}

// NewEndpoints wraps the methods of the "Editor" service with endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		UpsertSystem:       NewUpsertSystemEndpoint(s),
		UpsertPerson:       NewUpsertPersonEndpoint(s),
		UpsertContainer:    NewUpsertContainerEndpoint(s),
		UpsertComponent:    NewUpsertComponentEndpoint(s),
		UpsertRelationship: NewUpsertRelationshipEndpoint(s),
		DeleteSystem:       NewDeleteSystemEndpoint(s),
		DeletePerson:       NewDeletePersonEndpoint(s),
		DeleteContainer:    NewDeleteContainerEndpoint(s),
		DeleteComponent:    NewDeleteComponentEndpoint(s),
		DeleteRelationship: NewDeleteRelationshipEndpoint(s),
	}
}

// Use applies the given middleware to all the "Editor" service endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.UpsertSystem = m(e.UpsertSystem)
	e.UpsertPerson = m(e.UpsertPerson)
	e.UpsertContainer = m(e.UpsertContainer)
	e.UpsertComponent = m(e.UpsertComponent)
	e.UpsertRelationship = m(e.UpsertRelationship)
	e.DeleteSystem = m(e.DeleteSystem)
	e.DeletePerson = m(e.DeletePerson)
	e.DeleteContainer = m(e.DeleteContainer)
	e.DeleteComponent = m(e.DeleteComponent)
	e.DeleteRelationship = m(e.DeleteRelationship)
}

// NewUpsertSystemEndpoint returns an endpoint function that calls the method
// "UpsertSystem" of service "Editor".
func NewUpsertSystemEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*System)
		return nil, s.UpsertSystem(ctx, p)
	}
}

// NewUpsertPersonEndpoint returns an endpoint function that calls the method
// "UpsertPerson" of service "Editor".
func NewUpsertPersonEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*Person)
		return nil, s.UpsertPerson(ctx, p)
	}
}

// NewUpsertContainerEndpoint returns an endpoint function that calls the
// method "UpsertContainer" of service "Editor".
func NewUpsertContainerEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*Container)
		return nil, s.UpsertContainer(ctx, p)
	}
}

// NewUpsertComponentEndpoint returns an endpoint function that calls the
// method "UpsertComponent" of service "Editor".
func NewUpsertComponentEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*Component)
		return nil, s.UpsertComponent(ctx, p)
	}
}

// NewUpsertRelationshipEndpoint returns an endpoint function that calls the
// method "UpsertRelationship" of service "Editor".
func NewUpsertRelationshipEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*Relationship)
		return nil, s.UpsertRelationship(ctx, p)
	}
}

// NewDeleteSystemEndpoint returns an endpoint function that calls the method
// "DeleteSystem" of service "Editor".
func NewDeleteSystemEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*DeleteSystemPayload)
		return nil, s.DeleteSystem(ctx, p)
	}
}

// NewDeletePersonEndpoint returns an endpoint function that calls the method
// "DeletePerson" of service "Editor".
func NewDeletePersonEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*DeletePersonPayload)
		return nil, s.DeletePerson(ctx, p)
	}
}

// NewDeleteContainerEndpoint returns an endpoint function that calls the
// method "DeleteContainer" of service "Editor".
func NewDeleteContainerEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*DeleteContainerPayload)
		return nil, s.DeleteContainer(ctx, p)
	}
}

// NewDeleteComponentEndpoint returns an endpoint function that calls the
// method "DeleteComponent" of service "Editor".
func NewDeleteComponentEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*DeleteComponentPayload)
		return nil, s.DeleteComponent(ctx, p)
	}
}

// NewDeleteRelationshipEndpoint returns an endpoint function that calls the
// method "DeleteRelationship" of service "Editor".
func NewDeleteRelationshipEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*DeleteRelationshipPayload)
		return nil, s.DeleteRelationship(ctx, p)
	}
}
