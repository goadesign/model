// Code generated by goa v3.13.2, DO NOT EDIT.
//
// Editor client
//
// Command:
// $ goa gen goa.design/model/mdlsvc/design -o mdlsvc/

package editor

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "Editor" service client.
type Client struct {
	UpsertSystemEndpoint       goa.Endpoint
	UpsertPersonEndpoint       goa.Endpoint
	UpsertContainerEndpoint    goa.Endpoint
	UpsertComponentEndpoint    goa.Endpoint
	UpsertRelationshipEndpoint goa.Endpoint
	DeleteSystemEndpoint       goa.Endpoint
	DeletePersonEndpoint       goa.Endpoint
	DeleteContainerEndpoint    goa.Endpoint
	DeleteComponentEndpoint    goa.Endpoint
	DeleteRelationshipEndpoint goa.Endpoint
}

// NewClient initializes a "Editor" service client given the endpoints.
func NewClient(upsertSystem, upsertPerson, upsertContainer, upsertComponent, upsertRelationship, deleteSystem, deletePerson, deleteContainer, deleteComponent, deleteRelationship goa.Endpoint) *Client {
	return &Client{
		UpsertSystemEndpoint:       upsertSystem,
		UpsertPersonEndpoint:       upsertPerson,
		UpsertContainerEndpoint:    upsertContainer,
		UpsertComponentEndpoint:    upsertComponent,
		UpsertRelationshipEndpoint: upsertRelationship,
		DeleteSystemEndpoint:       deleteSystem,
		DeletePersonEndpoint:       deletePerson,
		DeleteContainerEndpoint:    deleteContainer,
		DeleteComponentEndpoint:    deleteComponent,
		DeleteRelationshipEndpoint: deleteRelationship,
	}
}

// UpsertSystem calls the "UpsertSystem" endpoint of the "Editor" service.
func (c *Client) UpsertSystem(ctx context.Context, p *System) (err error) {
	_, err = c.UpsertSystemEndpoint(ctx, p)
	return
}

// UpsertPerson calls the "UpsertPerson" endpoint of the "Editor" service.
func (c *Client) UpsertPerson(ctx context.Context, p *Person) (err error) {
	_, err = c.UpsertPersonEndpoint(ctx, p)
	return
}

// UpsertContainer calls the "UpsertContainer" endpoint of the "Editor" service.
func (c *Client) UpsertContainer(ctx context.Context, p *Container) (err error) {
	_, err = c.UpsertContainerEndpoint(ctx, p)
	return
}

// UpsertComponent calls the "UpsertComponent" endpoint of the "Editor" service.
func (c *Client) UpsertComponent(ctx context.Context, p *Component) (err error) {
	_, err = c.UpsertComponentEndpoint(ctx, p)
	return
}

// UpsertRelationship calls the "UpsertRelationship" endpoint of the "Editor"
// service.
func (c *Client) UpsertRelationship(ctx context.Context, p *Relationship) (err error) {
	_, err = c.UpsertRelationshipEndpoint(ctx, p)
	return
}

// DeleteSystem calls the "DeleteSystem" endpoint of the "Editor" service.
// DeleteSystem may return the following errors:
//   - "NotFound" (type *goa.ServiceError): Software system not found
//   - error: internal error
func (c *Client) DeleteSystem(ctx context.Context, p *DeleteSystemPayload) (err error) {
	_, err = c.DeleteSystemEndpoint(ctx, p)
	return
}

// DeletePerson calls the "DeletePerson" endpoint of the "Editor" service.
// DeletePerson may return the following errors:
//   - "NotFound" (type *goa.ServiceError): Person not found
//   - error: internal error
func (c *Client) DeletePerson(ctx context.Context, p *DeletePersonPayload) (err error) {
	_, err = c.DeletePersonEndpoint(ctx, p)
	return
}

// DeleteContainer calls the "DeleteContainer" endpoint of the "Editor" service.
// DeleteContainer may return the following errors:
//   - "NotFound" (type *goa.ServiceError): Container not found
//   - error: internal error
func (c *Client) DeleteContainer(ctx context.Context, p *DeleteContainerPayload) (err error) {
	_, err = c.DeleteContainerEndpoint(ctx, p)
	return
}

// DeleteComponent calls the "DeleteComponent" endpoint of the "Editor" service.
// DeleteComponent may return the following errors:
//   - "NotFound" (type *goa.ServiceError): Component not found
//   - error: internal error
func (c *Client) DeleteComponent(ctx context.Context, p *DeleteComponentPayload) (err error) {
	_, err = c.DeleteComponentEndpoint(ctx, p)
	return
}

// DeleteRelationship calls the "DeleteRelationship" endpoint of the "Editor"
// service.
// DeleteRelationship may return the following errors:
//   - "NotFound" (type *goa.ServiceError): Relationship not found
//   - error: internal error
func (c *Client) DeleteRelationship(ctx context.Context, p *DeleteRelationshipPayload) (err error) {
	_, err = c.DeleteRelationshipEndpoint(ctx, p)
	return
}
