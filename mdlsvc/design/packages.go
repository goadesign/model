package design

import . "goa.design/goa/v3/dsl"

var _ = Service("Packages", func() {
	HTTP(func() {
		Path("/api/packages")
	})
	Method("ListPackages", func() {
		Description("List the model packages in the current Go workspace")
		Result(ArrayOf(GoPackage))
		HTTP(func() {
			GET("/")
			Response(StatusOK)
		})
	})
	Method("Subscribe", func() {
		Description("WebSocket endpoint for subscribing to updates to a package")
		Payload(GoPackage)
		StreamingResult(Model)
		HTTP(func() {
			GET("/subscribe")
			Param("PackagePath:package")
			Response(StatusSwitchingProtocols)
		})
	})
	Method("Upload", func() {
		Description("Upload the package content, compile it and return the corresponding JSON")
		Payload(GoPackage)
		Result(Model)
		Error("compilation_failed", ErrorResult, "Compilation failed")
		HTTP(func() {
			POST("/")
			Param("PackagePath:package")
			SkipRequestBodyEncodeDecode()
			Response(StatusOK)
			Response("compilation_failed", StatusBadRequest)
		})
	})
	Method("GetModel", func() {
		Description("Stream the model JSON for the given package, see https://pkg.go.dev/goa.design/model/model#Model")
		Payload(GoPackage)
		HTTP(func() {
			GET("/model")
			Param("PackagePath:package")
			SkipResponseBodyEncodeDecode()
		})
	})
})

var GoPackage = Type("Package", func() {
	Attribute("PackagePath", String, "Design Go package import path", func() {
		domainRegex := `^([a-zA-Z0-9]+(-[a-zA-Z0-9]+)*\.)+[a-zA-Z]{2,}`
		orgRegex := `[a-zA-Z0-9_\-]+`
		pathRegex := `(/([a-zA-Z0-9_\-]+))*$`
		Pattern(domainRegex + "/" + orgRegex + "/" + pathRegex)
		Example("goa.design/model/examples/basic/model")
	})
	Required("PackagePath")
})

var Model = Type("Model", String, func() {
	Format(FormatJSON)
	Docs(func() {
		Description("A serialized representation of a model")
		URL("https://pkg.go.dev/goa.design/model/model#Model")
	})
})

var Layout = Type("Layout", String, func() {
	Format(FormatJSON)
	Docs(func() {
		Description("A serialized representation of a model layout as generated by the UI in the SVG")
	})
})
